#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef DATADOGOBJC_SWIFT_H
#define DATADOGOBJC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DatadogObjc",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
enum DDInjectEncoding : NSInteger;
@class DDTraceSamplingStrategy;
enum DDTraceContextInjection : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDB3HTTPHeadersWriter")
@interface DDB3HTTPHeadersWriter : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull traceHeaderFields;
- (nonnull instancetype)initWithSamplingRate:(float)samplingRate injectEncoding:(enum DDInjectEncoding)injectEncoding SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSampleRate:(float)sampleRate injectEncoding:(enum DDInjectEncoding)injectEncoding OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy injectEncoding:(enum DDInjectEncoding)injectEncoding traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDBatchProcessingLevel, open) {
  DDBatchProcessingLevelLow = 0,
  DDBatchProcessingLevelMedium = 1,
  DDBatchProcessingLevelHigh = 2,
};

typedef SWIFT_ENUM(NSInteger, DDBatchSize, open) {
  DDBatchSizeSmall = 0,
  DDBatchSizeMedium = 1,
  DDBatchSizeLarge = 2,
};

@class DDSite;
enum DDUploadFrequency : NSInteger;
@protocol DDDataEncryption;
@protocol DDServerDateProvider;
@class NSBundle;

SWIFT_CLASS("_TtC11DatadogObjc15DDConfiguration")
@interface DDConfiguration : NSObject
/// Either the RUM client token (which supports RUM, Logging and APM) or regular client token, only for Logging and APM.
@property (nonatomic, copy) NSString * _Nonnull clientToken;
/// The environment name which will be sent to Datadog. This can be used
/// To filter events on different environments (e.g. “staging” or “production”).
@property (nonatomic, copy) NSString * _Nonnull env;
/// The Datadog server site where data is sent.
/// Default value is <code>.us1</code>.
@property (nonatomic, strong) DDSite * _Nonnull site;
/// The service name associated with data send to Datadog.
/// Default value is set to application bundle identifier.
@property (nonatomic, copy) NSString * _Nullable service;
/// The preferred size of batched data uploaded to Datadog servers.
/// This value impacts the size and number of requests performed by the SDK.
/// <code>.medium</code> by default.
@property (nonatomic) enum DDBatchSize batchSize;
/// The preferred frequency of uploading data to Datadog servers.
/// This value impacts the frequency of performing network requests by the SDK.
/// <code>.average</code> by default.
@property (nonatomic) enum DDUploadFrequency uploadFrequency;
///
@property (nonatomic) enum DDBatchProcessingLevel batchProcessingLevel;
/// Proxy configuration attributes.
/// This can be used to a enable a custom proxy for uploading tracked data to Datadog’s intake.
@property (nonatomic, copy) NSDictionary * _Nullable proxyConfiguration;
/// Sets Data encryption to use for on-disk data persistency by providing an object
/// complying with <code>DataEncryption</code> protocol.
- (void)setEncryption:(id <DDDataEncryption> _Nonnull)encryption;
/// A custom NTP synchronization interface.
/// By default, the Datadog SDK synchronizes with dedicated NTP pools provided by the
/// https://www.ntppool.org/ . Using different pools or setting a no-op <code>ServerDateProvider</code>
/// implementation will result in desynchronization of the SDK instance and the Datadog servers.
/// This can lead to significant time shift in RUM sessions or distributed traces.
- (void)setServerDateProvider:(id <DDServerDateProvider> _Nonnull)serverDateProvider;
/// The bundle object that contains the current executable.
@property (nonatomic, strong) NSBundle * _Nonnull bundle;
/// Sets additional configuration attributes.
/// This can be used to tweak internal features of the SDK and shouldn’t be considered as a part of public API.
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull additionalConfiguration;
/// Flag that determines if UIApplication methods <a href="https://developer.apple.com/documentation/uikit/uiapplication/1623031-beginbackgroundtaskwithexpiratio"><code>beginBackgroundTask(expirationHandler:)</code></a> and <a href="https://developer.apple.com/documentation/uikit/uiapplication/1622970-endbackgroundtask"><code>endBackgroundTask:</code></a>
/// are utilized to perform background uploads. It may extend the amount of time the app is operating in background by 30 seconds.
/// Tasks are normally stopped when there’s nothing to upload or when encountering any upload blocker such us no internet connection or low battery.
/// <code>false</code> by default.
@property (nonatomic) BOOL backgroundTasksEnabled;
/// Creates a Datadog SDK Configuration object.
/// \param clientToken Either the RUM client token (which supports RUM, Logging and APM) or regular client token,
/// only for Logging and APM.
///
/// \param env The environment name which will be sent to Datadog. This can be used
/// To filter events on different environments (e.g. “staging” or “production”).
///
- (nonnull instancetype)initWithClientToken:(NSString * _Nonnull)clientToken env:(NSString * _Nonnull)env OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDCoreLoggerLevel, open) {
  DDCoreLoggerLevelDebug = 0,
  DDCoreLoggerLevelWarn = 1,
  DDCoreLoggerLevelError = 2,
  DDCoreLoggerLevelCritical = 3,
};

@class NSData;

SWIFT_PROTOCOL("_TtP11DatadogObjc16DDDataEncryption_")
@protocol DDDataEncryption
/// Encrypts given <code>Data</code> with user-chosen encryption.
/// \param data Data to encrypt.
///
///
/// returns:
/// The encrypted data.
- (NSData * _Nullable)encryptWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Decrypts given <code>Data</code> with user-chosen encryption.
/// Beware that data to decrypt could be encrypted in a previous
/// app launch, so implementation should be aware of the case when decryption could
/// fail (for example, key used for encryption is different from key used for decryption, if
/// they are unique for every app launch).
/// \param data Data to decrypt.
///
///
/// returns:
/// The decrypted data.
- (NSData * _Nullable)decryptWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

@class DDTrackingConsent;
enum DDSDKVerbosityLevel : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc9DDDatadog")
@interface DDDatadog : NSObject
+ (void)initializeWithConfiguration:(DDConfiguration * _Nonnull)configuration trackingConsent:(DDTrackingConsent * _Nonnull)trackingConsent;
+ (void)setVerbosityLevel:(enum DDSDKVerbosityLevel)verbosityLevel;
+ (enum DDSDKVerbosityLevel)verbosityLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserInfoWithUserId:(NSString * _Nonnull)userId name:(NSString * _Nullable)name email:(NSString * _Nullable)email extraInfo:(NSDictionary<NSString *, id> * _Nonnull)extraInfo;
+ (void)setUserInfoWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name email:(NSString * _Nullable)email extraInfo:(NSDictionary<NSString *, id> * _Nonnull)extraInfo SWIFT_DEPRECATED_MSG("UserInfo id property is now mandatory.");
+ (void)addUserExtraInfo:(NSDictionary<NSString *, id> * _Nonnull)extraInfo;
+ (void)setTrackingConsentWithConsent:(DDTrackingConsent * _Nonnull)consent;
+ (BOOL)isInitialized SWIFT_WARN_UNUSED_RESULT;
+ (void)stopInstance;
+ (void)clearAllData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class DDRUMAction;

SWIFT_PROTOCOL("_TtP11DatadogObjc28DDUITouchRUMActionsPredicate_")
@protocol DDUITouchRUMActionsPredicate
/// The predicate deciding if the RUM Action should be recorded.
/// \param targetView an instance of the <code>UIView</code> which received the action.
///
///
/// returns:
/// RUM Action if it should be recorded, <code>nil</code> otherwise.
- (DDRUMAction * _Nullable)rumActionWithTargetView:(UIView * _Nonnull)targetView SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP11DatadogObjc26DDUIKitRUMActionsPredicate_")
@protocol DDUIKitRUMActionsPredicate <DDUITouchRUMActionsPredicate>
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDDefaultUIKitRUMActionsPredicate")
@interface DDDefaultUIKitRUMActionsPredicate : NSObject <DDUIKitRUMActionsPredicate>
- (DDRUMAction * _Nullable)rumActionWithTargetView:(UIView * _Nonnull)targetView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@class DDRUMView;

SWIFT_PROTOCOL("_TtP11DatadogObjc24DDUIKitRUMViewsPredicate_")
@protocol DDUIKitRUMViewsPredicate
/// The predicate deciding if the RUM View should be started or ended for given instance of the <code>UIViewController</code>.
/// \param viewController an instance of the view controller noticed by the SDK.
///
///
/// returns:
/// RUM View parameters if received view controller should start/end the RUM View, <code>nil</code> otherwise.
- (DDRUMView * _Nullable)rumViewFor:(UIViewController * _Nonnull)viewController SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDDefaultUIKitRUMViewsPredicate")
@interface DDDefaultUIKitRUMViewsPredicate : NSObject <DDUIKitRUMViewsPredicate>
- (DDRUMView * _Nullable)rumViewFor:(UIViewController * _Nonnull)viewController SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc19DDHTTPHeadersWriter")
@interface DDHTTPHeadersWriter : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull traceHeaderFields;
- (nonnull instancetype)initWithSamplingRate:(float)samplingRate SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDInjectEncoding, open) {
  DDInjectEncodingMultiple = 0,
  DDInjectEncodingSingle = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc16DDInternalLogger")
@interface DDInternalLogger : NSObject
/// Function printing <code>String</code> content to console. Intended to be used only by SDK components.
+ (void)consolePrint:(NSString * _Nonnull)message :(enum DDCoreLoggerLevel)level;
+ (void)telemetryDebugWithId:(NSString * _Nonnull)id message:(NSString * _Nonnull)message;
+ (void)telemetryErrorWithId:(NSString * _Nonnull)id message:(NSString * _Nonnull)message kind:(NSString * _Nullable)kind stack:(NSString * _Nullable)stack;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;
enum DDLogEventStatus : NSInteger;
@class DDLogEventError;
@class DDLogEventDd;
@class DDLogEventOperatingSystem;
@class DDLogEventUserInfo;
@class DDLogEventNetworkConnectionInfo;
@class DDLogEventCarrierInfo;
@class DDLogEventAttributes;

SWIFT_CLASS("_TtC11DatadogObjc10DDLogEvent")
@interface DDLogEvent : NSObject
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly) enum DDLogEventStatus status;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDLogEventError * _Nullable error;
@property (nonatomic, readonly, copy) NSString * _Nonnull serviceName;
@property (nonatomic, readonly, copy) NSString * _Nonnull environment;
@property (nonatomic, readonly, copy) NSString * _Nonnull loggerName;
@property (nonatomic, readonly, copy) NSString * _Nonnull loggerVersion;
@property (nonatomic, readonly, copy) NSString * _Nullable threadName;
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationVersion;
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationBuildNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable variant;
@property (nonatomic, readonly, strong) DDLogEventDd * _Nonnull dd;
@property (nonatomic, readonly, strong) DDLogEventOperatingSystem * _Nonnull os;
@property (nonatomic, readonly, strong) DDLogEventUserInfo * _Nonnull userInfo;
@property (nonatomic, readonly, strong) DDLogEventNetworkConnectionInfo * _Nullable networkConnectionInfo;
@property (nonatomic, readonly, strong) DDLogEventCarrierInfo * _Nullable mobileCarrierInfo;
@property (nonatomic, readonly, strong) DDLogEventAttributes * _Nonnull attributes;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tags;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc20DDLogEventAttributes")
@interface DDLogEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull userAttributes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDLogEventBinaryImage")
@interface DDLogEventBinaryImage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable arch;
@property (nonatomic, readonly) BOOL isSystem;
@property (nonatomic, readonly, copy) NSString * _Nullable loadAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable maxAddress;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDLogEventRadioAccessTechnology : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDLogEventCarrierInfo")
@interface DDLogEventCarrierInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable carrierISOCountryCode;
@property (nonatomic, readonly) BOOL carrierAllowsVOIP;
@property (nonatomic, readonly) enum DDLogEventRadioAccessTechnology radioAccessTechnology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDLogEventDeviceInfo;

SWIFT_CLASS("_TtC11DatadogObjc12DDLogEventDd")
@interface DDLogEventDd : NSObject
@property (nonatomic, readonly, strong) DDLogEventDeviceInfo * _Nonnull device;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc20DDLogEventDeviceInfo")
@interface DDLogEventDeviceInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull brand;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull model;
@property (nonatomic, readonly, copy) NSString * _Nonnull architecture;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc15DDLogEventError")
@interface DDLogEventError : NSObject
@property (nonatomic, copy) NSString * _Nullable kind;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, copy) NSString * _Nonnull sourceType;
@property (nonatomic, copy) NSString * _Nullable fingerprint;
@property (nonatomic, copy) NSArray<DDLogEventBinaryImage *> * _Nullable binaryImages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDLogEventInterface, open) {
  DDLogEventInterfaceWifi = 0,
  DDLogEventInterfaceWiredEthernet = 1,
  DDLogEventInterfaceCellular = 2,
  DDLogEventInterfaceLoopback = 3,
  DDLogEventInterfaceOther = 4,
};

enum DDLogEventReachability : NSInteger;
@class NSNumber;

SWIFT_CLASS("_TtC11DatadogObjc31DDLogEventNetworkConnectionInfo")
@interface DDLogEventNetworkConnectionInfo : NSObject
@property (nonatomic, readonly) enum DDLogEventReachability reachability;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable availableInterfaces;
@property (nonatomic, readonly, strong) NSNumber * _Nullable supportsIPv4;
@property (nonatomic, readonly, strong) NSNumber * _Nullable supportsIPv6;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isExpensive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isConstrained;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDLogEventOperatingSystem")
@interface DDLogEventOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nullable build;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDLogEventRadioAccessTechnology, open) {
  DDLogEventRadioAccessTechnologyGPRS = 0,
  DDLogEventRadioAccessTechnologyEdge = 1,
  DDLogEventRadioAccessTechnologyWCDMA = 2,
  DDLogEventRadioAccessTechnologyHSDPA = 3,
  DDLogEventRadioAccessTechnologyHSUPA = 4,
  DDLogEventRadioAccessTechnologyCDMA1x = 5,
  DDLogEventRadioAccessTechnologyCDMAEVDORev0 = 6,
  DDLogEventRadioAccessTechnologyCDMAEVDORevA = 7,
  DDLogEventRadioAccessTechnologyCDMAEVDORevB = 8,
  DDLogEventRadioAccessTechnologyEHRPD = 9,
  DDLogEventRadioAccessTechnologyLTE = 10,
  DDLogEventRadioAccessTechnologyUnknown = 11,
};

typedef SWIFT_ENUM(NSInteger, DDLogEventReachability, open) {
  DDLogEventReachabilityYes = 0,
  DDLogEventReachabilityMaybe = 1,
  DDLogEventReachabilityNo = 2,
};

typedef SWIFT_ENUM(NSInteger, DDLogEventStatus, open) {
  DDLogEventStatusDebug = 0,
  DDLogEventStatusInfo = 1,
  DDLogEventStatusNotice = 2,
  DDLogEventStatusWarn = 3,
  DDLogEventStatusError = 4,
  DDLogEventStatusCritical = 5,
  DDLogEventStatusEmergency = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc18DDLogEventUserInfo")
@interface DDLogEventUserInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull extraInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDLogLevel, open) {
  DDLogLevelDebug = 0,
  DDLogLevelInfo = 1,
  DDLogLevelNotice = 2,
  DDLogLevelWarn = 3,
  DDLogLevelError = 4,
  DDLogLevelCritical = 5,
};

@class NSError;
@class DDLoggerConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc8DDLogger")
@interface DDLogger : NSObject
- (void)debug:(NSString * _Nonnull)message;
- (void)debug:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)debug:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message;
- (void)info:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message;
- (void)notice:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message;
- (void)warn:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message;
- (void)error:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message;
- (void)critical:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (void)addTagWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)removeTagWithKey:(NSString * _Nonnull)key;
- (void)addWithTag:(NSString * _Nonnull)tag;
- (void)removeWithTag:(NSString * _Nonnull)tag;
+ (DDLogger * _Nonnull)createWith:(DDLoggerConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDLoggerConfiguration")
@interface DDLoggerConfiguration : NSObject
/// The service name  (default value is set to application bundle identifier)
@property (nonatomic, copy) NSString * _Nullable service;
/// The logger custom name (default value is set to main bundle identifier)
@property (nonatomic, copy) NSString * _Nullable name;
/// Enriches logs with network connection info.
/// This means: reachability status, connection type, mobile carrier name and many more will be added to each log.
/// For full list of network info attributes see <code>NetworkConnectionInfo</code> and <code>CarrierInfo</code>.
/// <code>false</code> by default
@property (nonatomic) BOOL networkInfoEnabled;
/// Enables the logs integration with RUM.
/// If enabled all the logs will be enriched with the current RUM View information and
/// it will be possible to see all the logs sent during a specific View lifespan in the RUM Explorer.
/// <code>true</code> by default
@property (nonatomic) BOOL bundleWithRumEnabled;
/// Enables the logs integration with active span API from Tracing.
/// If enabled all the logs will be bundled with the <code>DatadogTracer.shared().activeSpan</code> trace and
/// it will be possible to see all the logs sent during that specific trace.
/// <code>true</code> by default
@property (nonatomic) BOOL bundleWithTraceEnabled;
/// Sets the sampling rate for logging.
/// The sampling rate must be a value between <code>0</code> and <code>100</code>. A value of <code>0</code> means no logs will be processed, <code>100</code>
/// means all logs will be processed.
/// By default sampling is disabled, meaning that all logs are being processed).
@property (nonatomic) float remoteSampleRate;
/// Enables  logs to be printed to debugger console.
/// <code>false</code> by default.
@property (nonatomic) BOOL printLogsToConsole;
/// Set the minim log level reported to Datadog servers.
/// Any log with a level equal or above the threshold will be sent.
/// Note: this setting doesn’t impact logs printed to the console if <code>printLogsToConsole(_:)</code>
/// is used - all logs will be printed, no matter of their level.
/// <code>DDLogLevel.debug</code> by default
@property (nonatomic) enum DDLogLevel remoteLogThreshold;
/// Creates a Logger Configuration.
/// \param service The service name  (default value is set to application bundle identifier)
///
/// \param name The logger custom name (default value is set to main bundle identifier)
///
/// \param networkInfoEnabled Enriches logs with network connection info. <code>false</code> by default.
///
/// \param bundleWithRumEnabled Enables the logs integration with RUM. <code>true</code> by default.
///
/// \param bundleWithTraceEnabled Enables the logs integration with active span API from Tracing. <code>true</code> by default
///
/// \param remoteSampleRate The sample rate for remote logging. <em>When set to <code>0</code>, no log entries will be sent to Datadog servers.</em>
///
/// \param remoteLogThreshold Set the minimum log level reported to Datadog servers. .debug by default.
///
/// \param printLogsToConsole Format to use when printing logs to console - either <code>.short</code> or <code>.json</code>.
///
- (nonnull instancetype)initWithService:(NSString * _Nullable)service name:(NSString * _Nullable)name networkInfoEnabled:(BOOL)networkInfoEnabled bundleWithRumEnabled:(BOOL)bundleWithRumEnabled bundleWithTraceEnabled:(BOOL)bundleWithTraceEnabled remoteSampleRate:(float)remoteSampleRate remoteLogThreshold:(enum DDLogLevel)remoteLogThreshold printLogsToConsole:(BOOL)printLogsToConsole OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDLogsConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc6DDLogs")
@interface DDLogs : NSObject
+ (void)enableWith:(DDLogsConfiguration * _Nonnull)configuration;
+ (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
+ (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

SWIFT_CLASS("_TtC11DatadogObjc19DDLogsConfiguration")
@interface DDLogsConfiguration : NSObject
/// Overrides the custom server endpoint where Logs are sent.
@property (nonatomic, copy) NSURL * _Nullable customEndpoint;
/// Creates a Logs configuration object.
/// \param customEndpoint Overrides the custom server endpoint where Logs are sent.
///
- (nonnull instancetype)initWithCustomEndpoint:(NSURL * _Nullable)customEndpoint OBJC_DESIGNATED_INITIALIZER;
/// Sets the custom mapper for <code>DDLogEvent</code>. This can be used to modify logs before they are send to Datadog.
/// The implementation should obtain a mutable version of the <code>DDLogEvent</code>, modify it and return it. Returning <code>nil</code> will result
/// with dropping the Log event entirely, so it won’t be send to Datadog.
- (void)setEventMapper:(DDLogEvent * _Nullable (^ _Nonnull)(DDLogEvent * _Nonnull))mapper;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTracingHeaderType;

SWIFT_CLASS("_TtC11DatadogObjc22DDNSURLSessionDelegate") SWIFT_DEPRECATED_MSG("Use `URLSessionInstrumentation.enable(with:)` instead.")
@interface DDNSURLSessionDelegate : NSObject <NSURLSessionDataDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAdditionalFirstPartyHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)additionalFirstPartyHostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAdditionalFirstPartyHosts:(NSSet<NSString *> * _Nonnull)additionalFirstPartyHosts;
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDOTelHTTPHeadersWriter") SWIFT_DEPRECATED_MSG("", "_TtC11DatadogObjc21DDB3HTTPHeadersWriter")
@interface DDOTelHTTPHeadersWriter : DDB3HTTPHeadersWriter
- (nonnull instancetype)initWithSampleRate:(float)sampleRate injectEncoding:(enum DDInjectEncoding)injectEncoding OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.", "DDB3HTTPHeadersWriter");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy injectEncoding:(enum DDInjectEncoding)injectEncoding traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
@end

@class DDRUMConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc5DDRUM")
@interface DDRUM : NSObject
+ (void)enableWith:(DDRUMConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc11DDRUMAction")
@interface DDRUMAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// Initializes the RUM Action description.
/// \param name the RUM Action name, appearing as <code>ACTION NAME</code> in RUM Explorer.
///
/// \param attributes additional attributes to associate with the RUM Action.
///
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventDD;
@class DDRUMActionEventAccount;
@class DDRUMActionEventAction;
@class DDRUMActionEventApplication;
@class DDRUMActionEventRUMCITest;
@class DDRUMActionEventRUMConnectivity;
@class DDRUMActionEventContainer;
@class DDRUMActionEventRUMEventAttributes;
@class DDRUMActionEventRUMDevice;
@class DDRUMActionEventDisplay;
@class DDRUMActionEventRUMOperatingSystem;
@class DDRUMActionEventSession;
enum DDRUMActionEventSource : NSInteger;
@class DDRUMActionEventRUMSyntheticsTest;
@class DDRUMActionEventRUMUser;
@class DDRUMActionEventView;

SWIFT_CLASS("_TtC11DatadogObjc16DDRUMActionEvent")
@interface DDRUMActionEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMActionEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMActionEventAction * _Nonnull action;
@property (nonatomic, readonly, strong) DDRUMActionEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMActionEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMActionEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMActionEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMActionEventSource source;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMActionEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventAccount")
@interface DDRUMActionEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventActionCrash;
@class DDRUMActionEventActionError;
@class DDRUMActionEventActionFrustration;
@class DDRUMActionEventActionLongTask;
@class DDRUMActionEventActionResource;
@class DDRUMActionEventActionTarget;
enum DDRUMActionEventActionActionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMActionEventAction")
@interface DDRUMActionEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventActionCrash * _Nullable crash;
@property (nonatomic, readonly, strong) DDRUMActionEventActionError * _Nullable error;
@property (nonatomic, readonly, strong) DDRUMActionEventActionFrustration * _Nullable frustration;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly, strong) DDRUMActionEventActionLongTask * _Nullable longTask;
@property (nonatomic, readonly, strong) DDRUMActionEventActionResource * _Nullable resource;
@property (nonatomic, readonly, strong) DDRUMActionEventActionTarget * _Nullable target;
@property (nonatomic, readonly) enum DDRUMActionEventActionActionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventActionActionType, open) {
  DDRUMActionEventActionActionTypeCustom = 0,
  DDRUMActionEventActionActionTypeClick = 1,
  DDRUMActionEventActionActionTypeTap = 2,
  DDRUMActionEventActionActionTypeScroll = 3,
  DDRUMActionEventActionActionTypeSwipe = 4,
  DDRUMActionEventActionActionTypeApplicationStart = 5,
  DDRUMActionEventActionActionTypeBack = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionCrash")
@interface DDRUMActionEventActionCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionError")
@interface DDRUMActionEventActionError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMActionEventActionFrustration")
@interface DDRUMActionEventActionFrustration : NSObject
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventActionFrustrationFrustrationType, open) {
  DDRUMActionEventActionFrustrationFrustrationTypeRageClick = 0,
  DDRUMActionEventActionFrustrationFrustrationTypeDeadClick = 1,
  DDRUMActionEventActionFrustrationFrustrationTypeErrorClick = 2,
  DDRUMActionEventActionFrustrationFrustrationTypeRageTap = 3,
  DDRUMActionEventActionFrustrationFrustrationTypeErrorTap = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionLongTask")
@interface DDRUMActionEventActionLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionResource")
@interface DDRUMActionEventActionResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMActionEventActionTarget")
@interface DDRUMActionEventActionTarget : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventApplication")
@interface DDRUMActionEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventContainerSource : NSInteger;
@class DDRUMActionEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventContainer")
@interface DDRUMActionEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMActionEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMActionEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventContainerSource, open) {
  DDRUMActionEventContainerSourceAndroid = 0,
  DDRUMActionEventContainerSourceIos = 1,
  DDRUMActionEventContainerSourceBrowser = 2,
  DDRUMActionEventContainerSourceFlutter = 3,
  DDRUMActionEventContainerSourceReactNative = 4,
  DDRUMActionEventContainerSourceRoku = 5,
  DDRUMActionEventContainerSourceUnity = 6,
  DDRUMActionEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMActionEventContainerView")
@interface DDRUMActionEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventDDAction;
@class DDRUMActionEventDDConfiguration;
@class DDRUMActionEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMActionEventDD")
@interface DDRUMActionEventDD : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDDAction * _Nullable action;
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMActionEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMActionEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventDDActionNameSource : NSInteger;
@class DDRUMActionEventDDActionPosition;
@class DDRUMActionEventDDActionTarget;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMActionEventDDAction")
@interface DDRUMActionEventDDAction : NSObject
@property (nonatomic) enum DDRUMActionEventDDActionNameSource nameSource;
@property (nonatomic, readonly, strong) DDRUMActionEventDDActionPosition * _Nullable position;
@property (nonatomic, readonly, strong) DDRUMActionEventDDActionTarget * _Nullable target;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventDDActionNameSource, open) {
  DDRUMActionEventDDActionNameSourceNone = 0,
  DDRUMActionEventDDActionNameSourceCustomAttribute = 1,
  DDRUMActionEventDDActionNameSourceMaskPlaceholder = 2,
  DDRUMActionEventDDActionNameSourceStandardAttribute = 3,
  DDRUMActionEventDDActionNameSourceTextContent = 4,
  DDRUMActionEventDDActionNameSourceMaskDisallowed = 5,
  DDRUMActionEventDDActionNameSourceBlank = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMActionEventDDActionPosition")
@interface DDRUMActionEventDDActionPosition : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull x;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull y;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventDDActionTarget")
@interface DDRUMActionEventDDActionTarget : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable height;
@property (nonatomic, readonly, copy) NSString * _Nullable selector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventDDConfiguration")
@interface DDRUMActionEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventDDSessionPlan : NSInteger;
enum DDRUMActionEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventDDSession")
@interface DDRUMActionEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMActionEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMActionEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventDDSessionPlan, open) {
  DDRUMActionEventDDSessionPlanNone = 0,
  DDRUMActionEventDDSessionPlanPlan1 = 1,
  DDRUMActionEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventDDSessionRUMSessionPrecondition, open) {
  DDRUMActionEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMActionEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMActionEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMActionEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMActionEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMActionEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMActionEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMActionEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMActionEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventDisplay")
@interface DDRUMActionEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventDisplayViewport")
@interface DDRUMActionEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventRUMCITest")
@interface DDRUMActionEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventRUMConnectivityCellular;
enum DDRUMActionEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMActionEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventRUMConnectivity")
@interface DDRUMActionEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMActionEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMActionEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc39DDRUMActionEventRUMConnectivityCellular")
@interface DDRUMActionEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityEffectiveType, open) {
  DDRUMActionEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMActionEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMActionEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMActionEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMActionEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityInterfaces, open) {
  DDRUMActionEventRUMConnectivityInterfacesNone = 0,
  DDRUMActionEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMActionEventRUMConnectivityInterfacesCellular = 2,
  DDRUMActionEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMActionEventRUMConnectivityInterfacesWifi = 4,
  DDRUMActionEventRUMConnectivityInterfacesWimax = 5,
  DDRUMActionEventRUMConnectivityInterfacesMixed = 6,
  DDRUMActionEventRUMConnectivityInterfacesOther = 7,
  DDRUMActionEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMActionEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityStatus, open) {
  DDRUMActionEventRUMConnectivityStatusConnected = 0,
  DDRUMActionEventRUMConnectivityStatusNotConnected = 1,
  DDRUMActionEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMActionEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventRUMDevice")
@interface DDRUMActionEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMActionEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMDeviceRUMDeviceType, open) {
  DDRUMActionEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMActionEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMActionEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMActionEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMActionEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMActionEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMActionEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMActionEventRUMEventAttributes")
@interface DDRUMActionEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMActionEventRUMOperatingSystem")
@interface DDRUMActionEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMActionEventRUMSyntheticsTest")
@interface DDRUMActionEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventRUMUser")
@interface DDRUMActionEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventSession")
@interface DDRUMActionEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMActionEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventSessionRUMSessionType, open) {
  DDRUMActionEventSessionRUMSessionTypeUser = 0,
  DDRUMActionEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMActionEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventSource, open) {
  DDRUMActionEventSourceNone = 0,
  DDRUMActionEventSourceAndroid = 1,
  DDRUMActionEventSourceIos = 2,
  DDRUMActionEventSourceBrowser = 3,
  DDRUMActionEventSourceFlutter = 4,
  DDRUMActionEventSourceReactNative = 5,
  DDRUMActionEventSourceRoku = 6,
  DDRUMActionEventSourceUnity = 7,
  DDRUMActionEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc20DDRUMActionEventView")
@interface DDRUMActionEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable inForeground;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionType, open) {
  DDRUMActionTypeTap = 0,
  DDRUMActionTypeScroll = 1,
  DDRUMActionTypeSwipe = 2,
  DDRUMActionTypeCustom = 3,
};

@class DDRUMURLSessionTracking;
enum DDRUMVitalsFrequency : NSInteger;
@class DDRUMViewEvent;
@class DDRUMResourceEvent;
@class DDRUMErrorEvent;
@class DDRUMLongTaskEvent;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMConfiguration")
@interface DDRUMConfiguration : NSObject
- (nonnull instancetype)initWithApplicationID:(NSString * _Nonnull)applicationID OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationID;
@property (nonatomic) float sessionSampleRate;
@property (nonatomic) float telemetrySampleRate;
@property (nonatomic, strong) id <DDUIKitRUMViewsPredicate> _Nullable uiKitViewsPredicate;
@property (nonatomic, strong) id <DDUIKitRUMActionsPredicate> _Nullable uiKitActionsPredicate;
- (void)setURLSessionTracking:(DDRUMURLSessionTracking * _Nonnull)tracking;
@property (nonatomic) BOOL trackFrustrations;
@property (nonatomic) BOOL trackBackgroundEvents;
@property (nonatomic) BOOL trackWatchdogTerminations;
@property (nonatomic) NSTimeInterval longTaskThreshold;
@property (nonatomic) NSTimeInterval appHangThreshold;
@property (nonatomic) enum DDRUMVitalsFrequency vitalsUpdateFrequency;
- (void)setViewEventMapper:(DDRUMViewEvent * _Nonnull (^ _Nonnull)(DDRUMViewEvent * _Nonnull))mapper;
- (void)setResourceEventMapper:(DDRUMResourceEvent * _Nullable (^ _Nonnull)(DDRUMResourceEvent * _Nonnull))mapper;
- (void)setActionEventMapper:(DDRUMActionEvent * _Nullable (^ _Nonnull)(DDRUMActionEvent * _Nonnull))mapper;
- (void)setErrorEventMapper:(DDRUMErrorEvent * _Nullable (^ _Nonnull)(DDRUMErrorEvent * _Nonnull))mapper;
- (void)setLongTaskEventMapper:(DDRUMLongTaskEvent * _Nullable (^ _Nonnull)(DDRUMLongTaskEvent * _Nonnull))mapper;
@property (nonatomic, copy) void (^ _Nullable onSessionStart)(NSString * _Nonnull, BOOL);
@property (nonatomic, copy) NSURL * _Nullable customEndpoint;
@property (nonatomic) BOOL trackAnonymousUser;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventDD;
@class DDRUMErrorEventAccount;
@class DDRUMErrorEventAction;
@class DDRUMErrorEventApplication;
@class DDRUMErrorEventRUMCITest;
@class DDRUMErrorEventRUMConnectivity;
@class DDRUMErrorEventContainer;
@class DDRUMErrorEventRUMEventAttributes;
@class DDRUMErrorEventRUMDevice;
@class DDRUMErrorEventDisplay;
@class DDRUMErrorEventError;
@class DDRUMErrorEventFeatureFlags;
@class DDRUMErrorEventFreeze;
@class DDRUMErrorEventRUMOperatingSystem;
@class DDRUMErrorEventSession;
enum DDRUMErrorEventSource : NSInteger;
@class DDRUMErrorEventRUMSyntheticsTest;
@class DDRUMErrorEventRUMUser;
@class DDRUMErrorEventView;

SWIFT_CLASS("_TtC11DatadogObjc15DDRUMErrorEvent")
@interface DDRUMErrorEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMErrorEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMErrorEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMErrorEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMErrorEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMErrorEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMErrorEventError * _Nonnull error;
@property (nonatomic, readonly, strong) DDRUMErrorEventFeatureFlags * _Nullable featureFlags;
@property (nonatomic, readonly, strong) DDRUMErrorEventFreeze * _Nullable freeze;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMErrorEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMErrorEventSource source;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMErrorEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventAccount")
@interface DDRUMErrorEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventActionRUMActionID;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMErrorEventAction")
@interface DDRUMErrorEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventActionRUMActionID * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMErrorEventActionRUMActionID")
@interface DDRUMErrorEventActionRUMActionID : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable string;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMErrorEventApplication")
@interface DDRUMErrorEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventContainerSource : NSInteger;
@class DDRUMErrorEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventContainer")
@interface DDRUMErrorEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMErrorEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventContainerSource, open) {
  DDRUMErrorEventContainerSourceAndroid = 0,
  DDRUMErrorEventContainerSourceIos = 1,
  DDRUMErrorEventContainerSourceBrowser = 2,
  DDRUMErrorEventContainerSourceFlutter = 3,
  DDRUMErrorEventContainerSourceReactNative = 4,
  DDRUMErrorEventContainerSourceRoku = 5,
  DDRUMErrorEventContainerSourceUnity = 6,
  DDRUMErrorEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMErrorEventContainerView")
@interface DDRUMErrorEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventDDConfiguration;
@class DDRUMErrorEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc17DDRUMErrorEventDD")
@interface DDRUMErrorEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMErrorEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMErrorEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventDDConfiguration")
@interface DDRUMErrorEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventDDSessionPlan : NSInteger;
enum DDRUMErrorEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventDDSession")
@interface DDRUMErrorEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMErrorEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventDDSessionPlan, open) {
  DDRUMErrorEventDDSessionPlanNone = 0,
  DDRUMErrorEventDDSessionPlanPlan1 = 1,
  DDRUMErrorEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventDDSessionRUMSessionPrecondition, open) {
  DDRUMErrorEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMErrorEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMErrorEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMErrorEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMErrorEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMErrorEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMErrorEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMErrorEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMErrorEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventDisplay")
@interface DDRUMErrorEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventDisplayViewport")
@interface DDRUMErrorEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventErrorBinaryImages;
enum DDRUMErrorEventErrorCategory : NSInteger;
@class DDRUMErrorEventErrorCauses;
@class DDRUMErrorEventErrorCSP;
enum DDRUMErrorEventErrorHandling : NSInteger;
@class DDRUMErrorEventErrorMeta;
@class DDRUMErrorEventErrorResource;
enum DDRUMErrorEventErrorSource : NSInteger;
enum DDRUMErrorEventErrorSourceType : NSInteger;
@class DDRUMErrorEventErrorThreads;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMErrorEventError")
@interface DDRUMErrorEventError : NSObject
@property (nonatomic, readonly, copy) NSArray<DDRUMErrorEventErrorBinaryImages *> * _Nullable binaryImages;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorCategory category;
@property (nonatomic, copy) NSArray<DDRUMErrorEventErrorCauses *> * _Nullable causes;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorCSP * _Nullable csp;
@property (nonatomic, copy) NSString * _Nullable fingerprint;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorHandling handling;
@property (nonatomic, readonly, copy) NSString * _Nullable handlingStack;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isCrash;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorMeta * _Nullable meta;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResource * _Nullable resource;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorSource source;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorSourceType sourceType;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, readonly, copy) NSArray<DDRUMErrorEventErrorThreads *> * _Nullable threads;
@property (nonatomic, readonly, strong) NSNumber * _Nullable timeSinceAppStart;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, readonly, strong) NSNumber * _Nullable wasTruncated;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMErrorEventErrorBinaryImages")
@interface DDRUMErrorEventErrorBinaryImages : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable arch;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull isSystem;
@property (nonatomic, readonly, copy) NSString * _Nullable loadAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable maxAddress;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorCSPDisposition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMErrorEventErrorCSP")
@interface DDRUMErrorEventErrorCSP : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventErrorCSPDisposition disposition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorCSPDisposition, open) {
  DDRUMErrorEventErrorCSPDispositionNone = 0,
  DDRUMErrorEventErrorCSPDispositionEnforce = 1,
  DDRUMErrorEventErrorCSPDispositionReport = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorCategory, open) {
  DDRUMErrorEventErrorCategoryNone = 0,
  DDRUMErrorEventErrorCategoryANR = 1,
  DDRUMErrorEventErrorCategoryAppHang = 2,
  DDRUMErrorEventErrorCategoryException = 3,
  DDRUMErrorEventErrorCategoryWatchdogTermination = 4,
  DDRUMErrorEventErrorCategoryMemoryWarning = 5,
};

enum DDRUMErrorEventErrorCausesSource : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMErrorEventErrorCauses")
@interface DDRUMErrorEventErrorCauses : NSObject
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorCausesSource source;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorCausesSource, open) {
  DDRUMErrorEventErrorCausesSourceNetwork = 0,
  DDRUMErrorEventErrorCausesSourceSource = 1,
  DDRUMErrorEventErrorCausesSourceConsole = 2,
  DDRUMErrorEventErrorCausesSourceLogger = 3,
  DDRUMErrorEventErrorCausesSourceAgent = 4,
  DDRUMErrorEventErrorCausesSourceWebview = 5,
  DDRUMErrorEventErrorCausesSourceCustom = 6,
  DDRUMErrorEventErrorCausesSourceReport = 7,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorHandling, open) {
  DDRUMErrorEventErrorHandlingNone = 0,
  DDRUMErrorEventErrorHandlingHandled = 1,
  DDRUMErrorEventErrorHandlingUnhandled = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventErrorMeta")
@interface DDRUMErrorEventErrorMeta : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable codeType;
@property (nonatomic, readonly, copy) NSString * _Nullable exceptionCodes;
@property (nonatomic, readonly, copy) NSString * _Nullable exceptionType;
@property (nonatomic, readonly, copy) NSString * _Nullable incidentIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nullable parentProcess;
@property (nonatomic, readonly, copy) NSString * _Nullable path;
@property (nonatomic, readonly, copy) NSString * _Nullable process;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceRUMMethod : NSInteger;
@class DDRUMErrorEventErrorResourceProvider;

SWIFT_CLASS("_TtC11DatadogObjc28DDRUMErrorEventErrorResource")
@interface DDRUMErrorEventErrorResource : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceRUMMethod method;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull statusCode;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc36DDRUMErrorEventErrorResourceProvider")
@interface DDRUMErrorEventErrorResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceProviderProviderType, open) {
  DDRUMErrorEventErrorResourceProviderProviderTypeNone = 0,
  DDRUMErrorEventErrorResourceProviderProviderTypeAd = 1,
  DDRUMErrorEventErrorResourceProviderProviderTypeAdvertising = 2,
  DDRUMErrorEventErrorResourceProviderProviderTypeAnalytics = 3,
  DDRUMErrorEventErrorResourceProviderProviderTypeCdn = 4,
  DDRUMErrorEventErrorResourceProviderProviderTypeContent = 5,
  DDRUMErrorEventErrorResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMErrorEventErrorResourceProviderProviderTypeFirstParty = 7,
  DDRUMErrorEventErrorResourceProviderProviderTypeHosting = 8,
  DDRUMErrorEventErrorResourceProviderProviderTypeMarketing = 9,
  DDRUMErrorEventErrorResourceProviderProviderTypeOther = 10,
  DDRUMErrorEventErrorResourceProviderProviderTypeSocial = 11,
  DDRUMErrorEventErrorResourceProviderProviderTypeTagManager = 12,
  DDRUMErrorEventErrorResourceProviderProviderTypeUtility = 13,
  DDRUMErrorEventErrorResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceRUMMethod, open) {
  DDRUMErrorEventErrorResourceRUMMethodPost = 0,
  DDRUMErrorEventErrorResourceRUMMethodGet = 1,
  DDRUMErrorEventErrorResourceRUMMethodHead = 2,
  DDRUMErrorEventErrorResourceRUMMethodPut = 3,
  DDRUMErrorEventErrorResourceRUMMethodDelete = 4,
  DDRUMErrorEventErrorResourceRUMMethodPatch = 5,
  DDRUMErrorEventErrorResourceRUMMethodTrace = 6,
  DDRUMErrorEventErrorResourceRUMMethodOptions = 7,
  DDRUMErrorEventErrorResourceRUMMethodConnect = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorSource, open) {
  DDRUMErrorEventErrorSourceNetwork = 0,
  DDRUMErrorEventErrorSourceSource = 1,
  DDRUMErrorEventErrorSourceConsole = 2,
  DDRUMErrorEventErrorSourceLogger = 3,
  DDRUMErrorEventErrorSourceAgent = 4,
  DDRUMErrorEventErrorSourceWebview = 5,
  DDRUMErrorEventErrorSourceCustom = 6,
  DDRUMErrorEventErrorSourceReport = 7,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorSourceType, open) {
  DDRUMErrorEventErrorSourceTypeNone = 0,
  DDRUMErrorEventErrorSourceTypeAndroid = 1,
  DDRUMErrorEventErrorSourceTypeBrowser = 2,
  DDRUMErrorEventErrorSourceTypeIos = 3,
  DDRUMErrorEventErrorSourceTypeReactNative = 4,
  DDRUMErrorEventErrorSourceTypeFlutter = 5,
  DDRUMErrorEventErrorSourceTypeRoku = 6,
  DDRUMErrorEventErrorSourceTypeNdk = 7,
  DDRUMErrorEventErrorSourceTypeIosIl2cpp = 8,
  DDRUMErrorEventErrorSourceTypeNdkIl2cpp = 9,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMErrorEventErrorThreads")
@interface DDRUMErrorEventErrorThreads : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull crashed;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull stack;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMErrorEventFeatureFlags")
@interface DDRUMErrorEventFeatureFlags : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull featureFlagsInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMErrorEventFreeze")
@interface DDRUMErrorEventFreeze : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventRUMCITest")
@interface DDRUMErrorEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventRUMConnectivityCellular;
enum DDRUMErrorEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMErrorEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventRUMConnectivity")
@interface DDRUMErrorEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc38DDRUMErrorEventRUMConnectivityCellular")
@interface DDRUMErrorEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityEffectiveType, open) {
  DDRUMErrorEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMErrorEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMErrorEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMErrorEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMErrorEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityInterfaces, open) {
  DDRUMErrorEventRUMConnectivityInterfacesNone = 0,
  DDRUMErrorEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMErrorEventRUMConnectivityInterfacesCellular = 2,
  DDRUMErrorEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMErrorEventRUMConnectivityInterfacesWifi = 4,
  DDRUMErrorEventRUMConnectivityInterfacesWimax = 5,
  DDRUMErrorEventRUMConnectivityInterfacesMixed = 6,
  DDRUMErrorEventRUMConnectivityInterfacesOther = 7,
  DDRUMErrorEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMErrorEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityStatus, open) {
  DDRUMErrorEventRUMConnectivityStatusConnected = 0,
  DDRUMErrorEventRUMConnectivityStatusNotConnected = 1,
  DDRUMErrorEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMErrorEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventRUMDevice")
@interface DDRUMErrorEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMDeviceRUMDeviceType, open) {
  DDRUMErrorEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMErrorEventRUMEventAttributes")
@interface DDRUMErrorEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMErrorEventRUMOperatingSystem")
@interface DDRUMErrorEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMErrorEventRUMSyntheticsTest")
@interface DDRUMErrorEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventRUMUser")
@interface DDRUMErrorEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventSession")
@interface DDRUMErrorEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMErrorEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventSessionRUMSessionType, open) {
  DDRUMErrorEventSessionRUMSessionTypeUser = 0,
  DDRUMErrorEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMErrorEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventSource, open) {
  DDRUMErrorEventSourceNone = 0,
  DDRUMErrorEventSourceAndroid = 1,
  DDRUMErrorEventSourceIos = 2,
  DDRUMErrorEventSourceBrowser = 3,
  DDRUMErrorEventSourceFlutter = 4,
  DDRUMErrorEventSourceReactNative = 5,
  DDRUMErrorEventSourceRoku = 6,
  DDRUMErrorEventSourceUnity = 7,
  DDRUMErrorEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc19DDRUMErrorEventView")
@interface DDRUMErrorEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable inForeground;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorSource, open) {
/// Error originated in the source code.
  DDRUMErrorSourceSource = 0,
/// Error originated in the network layer.
  DDRUMErrorSourceNetwork = 1,
/// Error originated in a webview.
  DDRUMErrorSourceWebview = 2,
/// Error originated in a web console (used by bridges).
  DDRUMErrorSourceConsole = 3,
/// Custom error source.
  DDRUMErrorSourceCustom = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMFirstPartyHostsTracing")
@interface DDRUMFirstPartyHostsTracing : NSObject
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventDD;
@class DDRUMLongTaskEventAccount;
@class DDRUMLongTaskEventAction;
@class DDRUMLongTaskEventApplication;
@class DDRUMLongTaskEventRUMCITest;
@class DDRUMLongTaskEventRUMConnectivity;
@class DDRUMLongTaskEventContainer;
@class DDRUMLongTaskEventRUMEventAttributes;
@class DDRUMLongTaskEventRUMDevice;
@class DDRUMLongTaskEventDisplay;
@class DDRUMLongTaskEventLongTask;
@class DDRUMLongTaskEventRUMOperatingSystem;
@class DDRUMLongTaskEventSession;
enum DDRUMLongTaskEventSource : NSInteger;
@class DDRUMLongTaskEventRUMSyntheticsTest;
@class DDRUMLongTaskEventRUMUser;
@class DDRUMLongTaskEventView;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMLongTaskEvent")
@interface DDRUMLongTaskEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventLongTask * _Nonnull longTask;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMLongTaskEventSource source;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventAccount")
@interface DDRUMLongTaskEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventActionRUMActionID;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMLongTaskEventAction")
@interface DDRUMLongTaskEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventActionRUMActionID * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMLongTaskEventActionRUMActionID")
@interface DDRUMLongTaskEventActionRUMActionID : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable string;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMLongTaskEventApplication")
@interface DDRUMLongTaskEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventContainerSource : NSInteger;
@class DDRUMLongTaskEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventContainer")
@interface DDRUMLongTaskEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMLongTaskEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventContainerSource, open) {
  DDRUMLongTaskEventContainerSourceAndroid = 0,
  DDRUMLongTaskEventContainerSourceIos = 1,
  DDRUMLongTaskEventContainerSourceBrowser = 2,
  DDRUMLongTaskEventContainerSourceFlutter = 3,
  DDRUMLongTaskEventContainerSourceReactNative = 4,
  DDRUMLongTaskEventContainerSourceRoku = 5,
  DDRUMLongTaskEventContainerSourceUnity = 6,
  DDRUMLongTaskEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMLongTaskEventContainerView")
@interface DDRUMLongTaskEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventDDConfiguration;
@class DDRUMLongTaskEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMLongTaskEventDD")
@interface DDRUMLongTaskEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable discarded;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventDDConfiguration")
@interface DDRUMLongTaskEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventDDSessionPlan : NSInteger;
enum DDRUMLongTaskEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventDDSession")
@interface DDRUMLongTaskEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMLongTaskEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMLongTaskEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventDDSessionPlan, open) {
  DDRUMLongTaskEventDDSessionPlanNone = 0,
  DDRUMLongTaskEventDDSessionPlanPlan1 = 1,
  DDRUMLongTaskEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventDDSessionRUMSessionPrecondition, open) {
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMLongTaskEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventDisplay")
@interface DDRUMLongTaskEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventDisplayViewport")
@interface DDRUMLongTaskEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventLongTaskEntryType : NSInteger;
@class DDRUMLongTaskEventLongTaskScripts;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMLongTaskEventLongTask")
@interface DDRUMLongTaskEventLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable blockingDuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly) enum DDRUMLongTaskEventLongTaskEntryType entryType;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstUiEventTimestamp;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isFrozenFrame;
@property (nonatomic, readonly, strong) NSNumber * _Nullable renderStart;
@property (nonatomic, readonly, copy) NSArray<DDRUMLongTaskEventLongTaskScripts *> * _Nullable scripts;
@property (nonatomic, readonly, strong) NSNumber * _Nullable startTime;
@property (nonatomic, readonly, strong) NSNumber * _Nullable styleAndLayoutStart;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventLongTaskEntryType, open) {
  DDRUMLongTaskEventLongTaskEntryTypeNone = 0,
  DDRUMLongTaskEventLongTaskEntryTypeLongTask = 1,
  DDRUMLongTaskEventLongTaskEntryTypeLongAnimationFrame = 2,
};

enum DDRUMLongTaskEventLongTaskScriptsInvokerType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventLongTaskScripts")
@interface DDRUMLongTaskEventLongTaskScripts : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable duration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable executionStart;
@property (nonatomic, readonly, strong) NSNumber * _Nullable forcedStyleAndLayoutDuration;
@property (nonatomic, readonly, copy) NSString * _Nullable invoker;
@property (nonatomic, readonly) enum DDRUMLongTaskEventLongTaskScriptsInvokerType invokerType;
@property (nonatomic, readonly, strong) NSNumber * _Nullable pauseDuration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable sourceCharPosition;
@property (nonatomic, readonly, copy) NSString * _Nullable sourceFunctionName;
@property (nonatomic, readonly, copy) NSString * _Nullable sourceUrl;
@property (nonatomic, readonly, strong) NSNumber * _Nullable startTime;
@property (nonatomic, readonly, copy) NSString * _Nullable windowAttribution;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventLongTaskScriptsInvokerType, open) {
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeNone = 0,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeUserCallback = 1,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeEventListener = 2,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeResolvePromise = 3,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeRejectPromise = 4,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeClassicScript = 5,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeModuleScript = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventRUMCITest")
@interface DDRUMLongTaskEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventRUMConnectivityCellular;
enum DDRUMLongTaskEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMLongTaskEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventRUMConnectivity")
@interface DDRUMLongTaskEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMLongTaskEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMLongTaskEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc41DDRUMLongTaskEventRUMConnectivityCellular")
@interface DDRUMLongTaskEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMConnectivityEffectiveType, open) {
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMConnectivityInterfaces, open) {
  DDRUMLongTaskEventRUMConnectivityInterfacesNone = 0,
  DDRUMLongTaskEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMLongTaskEventRUMConnectivityInterfacesCellular = 2,
  DDRUMLongTaskEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMLongTaskEventRUMConnectivityInterfacesWifi = 4,
  DDRUMLongTaskEventRUMConnectivityInterfacesWimax = 5,
  DDRUMLongTaskEventRUMConnectivityInterfacesMixed = 6,
  DDRUMLongTaskEventRUMConnectivityInterfacesOther = 7,
  DDRUMLongTaskEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMLongTaskEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMConnectivityStatus, open) {
  DDRUMLongTaskEventRUMConnectivityStatusConnected = 0,
  DDRUMLongTaskEventRUMConnectivityStatusNotConnected = 1,
  DDRUMLongTaskEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMLongTaskEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventRUMDevice")
@interface DDRUMLongTaskEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMLongTaskEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMDeviceRUMDeviceType, open) {
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMLongTaskEventRUMEventAttributes")
@interface DDRUMLongTaskEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMLongTaskEventRUMOperatingSystem")
@interface DDRUMLongTaskEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMLongTaskEventRUMSyntheticsTest")
@interface DDRUMLongTaskEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventRUMUser")
@interface DDRUMLongTaskEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventSession")
@interface DDRUMLongTaskEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMLongTaskEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventSessionRUMSessionType, open) {
  DDRUMLongTaskEventSessionRUMSessionTypeUser = 0,
  DDRUMLongTaskEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMLongTaskEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventSource, open) {
  DDRUMLongTaskEventSourceNone = 0,
  DDRUMLongTaskEventSourceAndroid = 1,
  DDRUMLongTaskEventSourceIos = 2,
  DDRUMLongTaskEventSourceBrowser = 3,
  DDRUMLongTaskEventSourceFlutter = 4,
  DDRUMLongTaskEventSourceReactNative = 5,
  DDRUMLongTaskEventSourceRoku = 6,
  DDRUMLongTaskEventSourceUnity = 7,
  DDRUMLongTaskEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMLongTaskEventView")
@interface DDRUMLongTaskEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMMethod, open) {
  DDRUMMethodPost = 0,
  DDRUMMethodGet = 1,
  DDRUMMethodHead = 2,
  DDRUMMethodPut = 3,
  DDRUMMethodDelete = 4,
  DDRUMMethodPatch = 5,
  DDRUMMethodConnect = 6,
  DDRUMMethodTrace = 7,
  DDRUMMethodOptions = 8,
};

@class NSURLRequest;
@class NSURLSessionTaskMetrics;
@class NSURLResponse;
enum DDRUMResourceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc12DDRUMMonitor")
@interface DDRUMMonitor : NSObject
+ (DDRUMMonitor * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)currentSessionIDWithCompletion:(void (^ _Nonnull)(NSString * _Nullable))completion;
- (void)stopSession;
- (void)startViewWithViewController:(UIViewController * _Nonnull)viewController name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithViewController:(UIViewController * _Nonnull)viewController attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startViewWithKey:(NSString * _Nonnull)key name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithKey:(NSString * _Nonnull)key attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addTimingWithName:(NSString * _Nonnull)name;
- (void)addErrorWithMessage:(NSString * _Nonnull)message stack:(NSString * _Nullable)stack source:(enum DDRUMErrorSource)source attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addErrorWithError:(NSError * _Nonnull)error source:(enum DDRUMErrorSource)source attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceWithResourceKey:(NSString * _Nonnull)resourceKey request:(NSURLRequest * _Nonnull)request attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceWithResourceKey:(NSString * _Nonnull)resourceKey url:(NSURL * _Nonnull)url attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceWithResourceKey:(NSString * _Nonnull)resourceKey httpMethod:(enum DDRUMMethod)httpMethod urlString:(NSString * _Nonnull)urlString attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addResourceMetricsWithResourceKey:(NSString * _Nonnull)resourceKey metrics:(NSURLSessionTaskMetrics * _Nonnull)metrics attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithResourceKey:(NSString * _Nonnull)resourceKey response:(NSURLResponse * _Nonnull)response size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithResourceKey:(NSString * _Nonnull)resourceKey statusCode:(NSNumber * _Nullable)statusCode kind:(enum DDRUMResourceType)kind size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey error:(NSError * _Nonnull)error response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey message:(NSString * _Nonnull)message response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startActionWithType:(enum DDRUMActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopActionWithType:(enum DDRUMActionType)type name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addActionWithType:(enum DDRUMActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)addAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (void)removeAttributesForKeys:(NSArray<NSString *> * _Nonnull)keys;
- (void)addFeatureFlagEvaluationWithName:(NSString * _Nonnull)name value:(id _Nonnull)value;
@property (nonatomic) BOOL debug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventDD;
@class DDRUMResourceEventAccount;
@class DDRUMResourceEventAction;
@class DDRUMResourceEventApplication;
@class DDRUMResourceEventRUMCITest;
@class DDRUMResourceEventRUMConnectivity;
@class DDRUMResourceEventContainer;
@class DDRUMResourceEventRUMEventAttributes;
@class DDRUMResourceEventRUMDevice;
@class DDRUMResourceEventDisplay;
@class DDRUMResourceEventRUMOperatingSystem;
@class DDRUMResourceEventResource;
@class DDRUMResourceEventSession;
enum DDRUMResourceEventSource : NSInteger;
@class DDRUMResourceEventRUMSyntheticsTest;
@class DDRUMResourceEventRUMUser;
@class DDRUMResourceEventView;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMResourceEvent")
@interface DDRUMResourceEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMResourceEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMResourceEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMResourceEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMResourceEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMResourceEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, strong) DDRUMResourceEventResource * _Nonnull resource;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMResourceEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMResourceEventSource source;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMResourceEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventAccount")
@interface DDRUMResourceEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventActionRUMActionID;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMResourceEventAction")
@interface DDRUMResourceEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventActionRUMActionID * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventActionRUMActionID")
@interface DDRUMResourceEventActionRUMActionID : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable string;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventApplication")
@interface DDRUMResourceEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventContainerSource : NSInteger;
@class DDRUMResourceEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventContainer")
@interface DDRUMResourceEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMResourceEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMResourceEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventContainerSource, open) {
  DDRUMResourceEventContainerSourceAndroid = 0,
  DDRUMResourceEventContainerSourceIos = 1,
  DDRUMResourceEventContainerSourceBrowser = 2,
  DDRUMResourceEventContainerSourceFlutter = 3,
  DDRUMResourceEventContainerSourceReactNative = 4,
  DDRUMResourceEventContainerSourceRoku = 5,
  DDRUMResourceEventContainerSourceUnity = 6,
  DDRUMResourceEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMResourceEventContainerView")
@interface DDRUMResourceEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventDDConfiguration;
@class DDRUMResourceEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMResourceEventDD")
@interface DDRUMResourceEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMResourceEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable discarded;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nullable rulePsr;
@property (nonatomic, readonly, strong) DDRUMResourceEventDDSession * _Nullable session;
@property (nonatomic, readonly, copy) NSString * _Nullable spanId;
@property (nonatomic, readonly, copy) NSString * _Nullable traceId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventDDConfiguration")
@interface DDRUMResourceEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventDDSessionPlan : NSInteger;
enum DDRUMResourceEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventDDSession")
@interface DDRUMResourceEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMResourceEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMResourceEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventDDSessionPlan, open) {
  DDRUMResourceEventDDSessionPlanNone = 0,
  DDRUMResourceEventDDSessionPlanPlan1 = 1,
  DDRUMResourceEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventDDSessionRUMSessionPrecondition, open) {
  DDRUMResourceEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMResourceEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMResourceEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMResourceEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMResourceEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMResourceEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMResourceEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMResourceEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMResourceEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventDisplay")
@interface DDRUMResourceEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventDisplayViewport")
@interface DDRUMResourceEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventRUMCITest")
@interface DDRUMResourceEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventRUMConnectivityCellular;
enum DDRUMResourceEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMResourceEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventRUMConnectivity")
@interface DDRUMResourceEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc41DDRUMResourceEventRUMConnectivityCellular")
@interface DDRUMResourceEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityEffectiveType, open) {
  DDRUMResourceEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMResourceEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMResourceEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMResourceEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMResourceEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityInterfaces, open) {
  DDRUMResourceEventRUMConnectivityInterfacesNone = 0,
  DDRUMResourceEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMResourceEventRUMConnectivityInterfacesCellular = 2,
  DDRUMResourceEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMResourceEventRUMConnectivityInterfacesWifi = 4,
  DDRUMResourceEventRUMConnectivityInterfacesWimax = 5,
  DDRUMResourceEventRUMConnectivityInterfacesMixed = 6,
  DDRUMResourceEventRUMConnectivityInterfacesOther = 7,
  DDRUMResourceEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMResourceEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityStatus, open) {
  DDRUMResourceEventRUMConnectivityStatusConnected = 0,
  DDRUMResourceEventRUMConnectivityStatusNotConnected = 1,
  DDRUMResourceEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMResourceEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventRUMDevice")
@interface DDRUMResourceEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMDeviceRUMDeviceType, open) {
  DDRUMResourceEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMResourceEventRUMEventAttributes")
@interface DDRUMResourceEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMResourceEventRUMOperatingSystem")
@interface DDRUMResourceEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventRUMSyntheticsTest")
@interface DDRUMResourceEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventRUMUser")
@interface DDRUMResourceEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventResourceConnect;
enum DDRUMResourceEventResourceDeliveryType : NSInteger;
@class DDRUMResourceEventResourceDNS;
@class DDRUMResourceEventResourceDownload;
@class DDRUMResourceEventResourceFirstByte;
@class DDRUMResourceEventResourceGraphql;
enum DDRUMResourceEventResourceRUMMethod : NSInteger;
@class DDRUMResourceEventResourceProvider;
@class DDRUMResourceEventResourceRedirect;
enum DDRUMResourceEventResourceRenderBlockingStatus : NSInteger;
@class DDRUMResourceEventResourceSSL;
enum DDRUMResourceEventResourceResourceType : NSInteger;
@class DDRUMResourceEventResourceWorker;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMResourceEventResource")
@interface DDRUMResourceEventResource : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceConnect * _Nullable connect;
@property (nonatomic, readonly, strong) NSNumber * _Nullable decodedBodySize;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceDeliveryType deliveryType;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDNS * _Nullable dns;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDownload * _Nullable download;
@property (nonatomic, readonly, strong) NSNumber * _Nullable duration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable encodedBodySize;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceFirstByte * _Nullable firstByte;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceGraphql * _Nullable graphql;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceRUMMethod method;
@property (nonatomic, readonly, copy) NSString * _Nullable protocol;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceRedirect * _Nullable redirect;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceRenderBlockingStatus renderBlockingStatus;
@property (nonatomic, readonly, strong) NSNumber * _Nullable size;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceSSL * _Nullable ssl;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCode;
@property (nonatomic, readonly, strong) NSNumber * _Nullable transferSize;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceResourceType type;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceWorker * _Nullable worker;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventResourceConnect")
@interface DDRUMResourceEventResourceConnect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceDNS")
@interface DDRUMResourceEventResourceDNS : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceDeliveryType, open) {
  DDRUMResourceEventResourceDeliveryTypeNone = 0,
  DDRUMResourceEventResourceDeliveryTypeCache = 1,
  DDRUMResourceEventResourceDeliveryTypeNavigationalPrefetch = 2,
  DDRUMResourceEventResourceDeliveryTypeOther = 3,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceDownload")
@interface DDRUMResourceEventResourceDownload : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventResourceFirstByte")
@interface DDRUMResourceEventResourceFirstByte : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventResourceGraphqlOperationType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventResourceGraphql")
@interface DDRUMResourceEventResourceGraphql : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable operationName;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceGraphqlOperationType operationType;
@property (nonatomic, copy) NSString * _Nullable payload;
@property (nonatomic, copy) NSString * _Nullable variables;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceGraphqlOperationType, open) {
  DDRUMResourceEventResourceGraphqlOperationTypeQuery = 0,
  DDRUMResourceEventResourceGraphqlOperationTypeMutation = 1,
  DDRUMResourceEventResourceGraphqlOperationTypeSubscription = 2,
};

enum DDRUMResourceEventResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceProvider")
@interface DDRUMResourceEventResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceProviderProviderType, open) {
  DDRUMResourceEventResourceProviderProviderTypeNone = 0,
  DDRUMResourceEventResourceProviderProviderTypeAd = 1,
  DDRUMResourceEventResourceProviderProviderTypeAdvertising = 2,
  DDRUMResourceEventResourceProviderProviderTypeAnalytics = 3,
  DDRUMResourceEventResourceProviderProviderTypeCdn = 4,
  DDRUMResourceEventResourceProviderProviderTypeContent = 5,
  DDRUMResourceEventResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMResourceEventResourceProviderProviderTypeFirstParty = 7,
  DDRUMResourceEventResourceProviderProviderTypeHosting = 8,
  DDRUMResourceEventResourceProviderProviderTypeMarketing = 9,
  DDRUMResourceEventResourceProviderProviderTypeOther = 10,
  DDRUMResourceEventResourceProviderProviderTypeSocial = 11,
  DDRUMResourceEventResourceProviderProviderTypeTagManager = 12,
  DDRUMResourceEventResourceProviderProviderTypeUtility = 13,
  DDRUMResourceEventResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceRUMMethod, open) {
  DDRUMResourceEventResourceRUMMethodNone = 0,
  DDRUMResourceEventResourceRUMMethodPost = 1,
  DDRUMResourceEventResourceRUMMethodGet = 2,
  DDRUMResourceEventResourceRUMMethodHead = 3,
  DDRUMResourceEventResourceRUMMethodPut = 4,
  DDRUMResourceEventResourceRUMMethodDelete = 5,
  DDRUMResourceEventResourceRUMMethodPatch = 6,
  DDRUMResourceEventResourceRUMMethodTrace = 7,
  DDRUMResourceEventResourceRUMMethodOptions = 8,
  DDRUMResourceEventResourceRUMMethodConnect = 9,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceRedirect")
@interface DDRUMResourceEventResourceRedirect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceRenderBlockingStatus, open) {
  DDRUMResourceEventResourceRenderBlockingStatusNone = 0,
  DDRUMResourceEventResourceRenderBlockingStatusBlocking = 1,
  DDRUMResourceEventResourceRenderBlockingStatusNonBlocking = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceResourceType, open) {
  DDRUMResourceEventResourceResourceTypeDocument = 0,
  DDRUMResourceEventResourceResourceTypeXhr = 1,
  DDRUMResourceEventResourceResourceTypeBeacon = 2,
  DDRUMResourceEventResourceResourceTypeFetch = 3,
  DDRUMResourceEventResourceResourceTypeCss = 4,
  DDRUMResourceEventResourceResourceTypeJs = 5,
  DDRUMResourceEventResourceResourceTypeImage = 6,
  DDRUMResourceEventResourceResourceTypeFont = 7,
  DDRUMResourceEventResourceResourceTypeMedia = 8,
  DDRUMResourceEventResourceResourceTypeOther = 9,
  DDRUMResourceEventResourceResourceTypeNative = 10,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceSSL")
@interface DDRUMResourceEventResourceSSL : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMResourceEventResourceWorker")
@interface DDRUMResourceEventResourceWorker : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventSession")
@interface DDRUMResourceEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMResourceEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventSessionRUMSessionType, open) {
  DDRUMResourceEventSessionRUMSessionTypeUser = 0,
  DDRUMResourceEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMResourceEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventSource, open) {
  DDRUMResourceEventSourceNone = 0,
  DDRUMResourceEventSourceAndroid = 1,
  DDRUMResourceEventSourceIos = 2,
  DDRUMResourceEventSourceBrowser = 3,
  DDRUMResourceEventSourceFlutter = 4,
  DDRUMResourceEventSourceReactNative = 5,
  DDRUMResourceEventSourceRoku = 6,
  DDRUMResourceEventSourceUnity = 7,
  DDRUMResourceEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMResourceEventView")
@interface DDRUMResourceEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceType, open) {
  DDRUMResourceTypeImage = 0,
  DDRUMResourceTypeXhr = 1,
  DDRUMResourceTypeBeacon = 2,
  DDRUMResourceTypeCss = 3,
  DDRUMResourceTypeDocument = 4,
  DDRUMResourceTypeFetch = 5,
  DDRUMResourceTypeFont = 6,
  DDRUMResourceTypeJs = 7,
  DDRUMResourceTypeMedia = 8,
  DDRUMResourceTypeOther = 9,
  DDRUMResourceTypeNative = 10,
};


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMURLSessionTracking")
@interface DDRUMURLSessionTracking : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setFirstPartyHostsTracing:(DDRUMFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing;
- (void)setResourceAttributesProvider:(NSDictionary<NSString *, id> * _Nullable (^ _Nonnull)(NSURLRequest * _Nonnull, NSURLResponse * _Nullable, NSData * _Nullable, NSError * _Nullable))provider;
@end


SWIFT_CLASS("_TtC11DatadogObjc9DDRUMView")
@interface DDRUMView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// Initializes the RUM View description.
/// \param name the RUM View name, appearing as <code>VIEW NAME</code> in RUM Explorer.
///
/// \param attributes additional attributes to associate with the RUM View.
///
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventDD;
@class DDRUMViewEventAccount;
@class DDRUMViewEventApplication;
@class DDRUMViewEventRUMCITest;
@class DDRUMViewEventRUMConnectivity;
@class DDRUMViewEventContainer;
@class DDRUMViewEventRUMEventAttributes;
@class DDRUMViewEventRUMDevice;
@class DDRUMViewEventDisplay;
@class DDRUMViewEventFeatureFlags;
@class DDRUMViewEventRUMOperatingSystem;
@class DDRUMViewEventPrivacy;
@class DDRUMViewEventSession;
enum DDRUMViewEventSource : NSInteger;
@class DDRUMViewEventRUMSyntheticsTest;
@class DDRUMViewEventRUMUser;
@class DDRUMViewEventView;

SWIFT_CLASS("_TtC11DatadogObjc14DDRUMViewEvent")
@interface DDRUMViewEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMViewEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMViewEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMViewEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMViewEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMViewEventFeatureFlags * _Nullable featureFlags;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, strong) DDRUMViewEventPrivacy * _Nullable privacy;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMViewEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMViewEventSource source;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMViewEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventAccount")
@interface DDRUMViewEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMViewEventApplication")
@interface DDRUMViewEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventContainerSource : NSInteger;
@class DDRUMViewEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventContainer")
@interface DDRUMViewEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMViewEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMViewEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventContainerSource, open) {
  DDRUMViewEventContainerSourceAndroid = 0,
  DDRUMViewEventContainerSourceIos = 1,
  DDRUMViewEventContainerSourceBrowser = 2,
  DDRUMViewEventContainerSourceFlutter = 3,
  DDRUMViewEventContainerSourceReactNative = 4,
  DDRUMViewEventContainerSourceRoku = 5,
  DDRUMViewEventContainerSourceUnity = 6,
  DDRUMViewEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMViewEventContainerView")
@interface DDRUMViewEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventDDConfiguration;
@class DDRUMViewEventDDPageStates;
@class DDRUMViewEventDDReplayStats;
@class DDRUMViewEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc16DDRUMViewEventDD")
@interface DDRUMViewEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMViewEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull documentVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, copy) NSArray<DDRUMViewEventDDPageStates *> * _Nullable pageStates;
@property (nonatomic, readonly, strong) DDRUMViewEventDDReplayStats * _Nullable replayStats;
@property (nonatomic, readonly, strong) DDRUMViewEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventDDConfiguration")
@interface DDRUMViewEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable startSessionReplayRecordingManually;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventDDPageStatesState : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventDDPageStates")
@interface DDRUMViewEventDDPageStates : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
@property (nonatomic, readonly) enum DDRUMViewEventDDPageStatesState state;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventDDPageStatesState, open) {
  DDRUMViewEventDDPageStatesStateActive = 0,
  DDRUMViewEventDDPageStatesStatePassive = 1,
  DDRUMViewEventDDPageStatesStateHidden = 2,
  DDRUMViewEventDDPageStatesStateFrozen = 3,
  DDRUMViewEventDDPageStatesStateTerminated = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMViewEventDDReplayStats")
@interface DDRUMViewEventDDReplayStats : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable recordsCount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable segmentsCount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable segmentsTotalRawSize;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventDDSessionPlan : NSInteger;
enum DDRUMViewEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventDDSession")
@interface DDRUMViewEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMViewEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMViewEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventDDSessionPlan, open) {
  DDRUMViewEventDDSessionPlanNone = 0,
  DDRUMViewEventDDSessionPlanPlan1 = 1,
  DDRUMViewEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventDDSessionRUMSessionPrecondition, open) {
  DDRUMViewEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMViewEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMViewEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMViewEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMViewEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMViewEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMViewEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMViewEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMViewEventDisplayScroll;
@class DDRUMViewEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventDisplay")
@interface DDRUMViewEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventDisplayScroll * _Nullable scroll;
@property (nonatomic, readonly, strong) DDRUMViewEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMViewEventDisplayScroll")
@interface DDRUMViewEventDisplayScroll : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxDepth;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxDepthScrollTop;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxScrollHeight;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxScrollHeightTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventDisplayViewport")
@interface DDRUMViewEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventFeatureFlags")
@interface DDRUMViewEventFeatureFlags : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull featureFlagsInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventPrivacyReplayLevel : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventPrivacy")
@interface DDRUMViewEventPrivacy : NSObject
@property (nonatomic, readonly) enum DDRUMViewEventPrivacyReplayLevel replayLevel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventPrivacyReplayLevel, open) {
  DDRUMViewEventPrivacyReplayLevelAllow = 0,
  DDRUMViewEventPrivacyReplayLevelMask = 1,
  DDRUMViewEventPrivacyReplayLevelMaskUserInput = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventRUMCITest")
@interface DDRUMViewEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventRUMConnectivityCellular;
enum DDRUMViewEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMViewEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventRUMConnectivity")
@interface DDRUMViewEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMViewEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMViewEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc37DDRUMViewEventRUMConnectivityCellular")
@interface DDRUMViewEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityEffectiveType, open) {
  DDRUMViewEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMViewEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMViewEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMViewEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMViewEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityInterfaces, open) {
  DDRUMViewEventRUMConnectivityInterfacesNone = 0,
  DDRUMViewEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMViewEventRUMConnectivityInterfacesCellular = 2,
  DDRUMViewEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMViewEventRUMConnectivityInterfacesWifi = 4,
  DDRUMViewEventRUMConnectivityInterfacesWimax = 5,
  DDRUMViewEventRUMConnectivityInterfacesMixed = 6,
  DDRUMViewEventRUMConnectivityInterfacesOther = 7,
  DDRUMViewEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMViewEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityStatus, open) {
  DDRUMViewEventRUMConnectivityStatusConnected = 0,
  DDRUMViewEventRUMConnectivityStatusNotConnected = 1,
  DDRUMViewEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMViewEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventRUMDevice")
@interface DDRUMViewEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMViewEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMDeviceRUMDeviceType, open) {
  DDRUMViewEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMViewEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMViewEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMViewEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMViewEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMViewEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMViewEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventRUMEventAttributes")
@interface DDRUMViewEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventRUMOperatingSystem")
@interface DDRUMViewEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMViewEventRUMSyntheticsTest")
@interface DDRUMViewEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventRUMUser")
@interface DDRUMViewEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventSession")
@interface DDRUMViewEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isActive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable sampledForReplay;
@property (nonatomic, readonly) enum DDRUMViewEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventSessionRUMSessionType, open) {
  DDRUMViewEventSessionRUMSessionTypeUser = 0,
  DDRUMViewEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMViewEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventSource, open) {
  DDRUMViewEventSourceNone = 0,
  DDRUMViewEventSourceAndroid = 1,
  DDRUMViewEventSourceIos = 2,
  DDRUMViewEventSourceBrowser = 3,
  DDRUMViewEventSourceFlutter = 4,
  DDRUMViewEventSourceReactNative = 5,
  DDRUMViewEventSourceRoku = 6,
  DDRUMViewEventSourceUnity = 7,
  DDRUMViewEventSourceKotlinMultiplatform = 8,
};

@class DDRUMViewEventViewAction;
@class DDRUMViewEventViewCrash;
@class DDRUMViewEventViewError;
@class DDRUMViewEventViewFlutterBuildTime;
@class DDRUMViewEventViewFlutterRasterTime;
@class DDRUMViewEventViewFrozenFrame;
@class DDRUMViewEventViewFrustration;
@class DDRUMViewEventViewInForegroundPeriods;
@class DDRUMViewEventViewJsRefreshRate;
enum DDRUMViewEventViewLoadingType : NSInteger;
@class DDRUMViewEventViewLongTask;
@class DDRUMViewEventViewPerformance;
@class DDRUMViewEventViewResource;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMViewEventView")
@interface DDRUMViewEventView : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewAction * _Nonnull action;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cpuTicksCount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cpuTicksPerSecond;
@property (nonatomic, readonly, strong) DDRUMViewEventViewCrash * _Nullable crash;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cumulativeLayoutShift;
@property (nonatomic, readonly, copy) NSString * _Nullable cumulativeLayoutShiftTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cumulativeLayoutShiftTime;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nullable customTimings;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domComplete;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domContentLoaded;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domInteractive;
@property (nonatomic, readonly, strong) DDRUMViewEventViewError * _Nonnull error;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstByte;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstContentfulPaint;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputDelay;
@property (nonatomic, readonly, copy) NSString * _Nullable firstInputTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFlutterBuildTime * _Nullable flutterBuildTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFlutterRasterTime * _Nullable flutterRasterTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFrozenFrame * _Nullable frozenFrame;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFrustration * _Nullable frustration;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSArray<DDRUMViewEventViewInForegroundPeriods *> * _Nullable inForegroundPeriods;
@property (nonatomic, readonly, strong) NSNumber * _Nullable interactionToNextPaint;
@property (nonatomic, readonly, copy) NSString * _Nullable interactionToNextPaintTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable interactionToNextPaintTime;
@property (nonatomic, readonly, strong) NSNumber * _Nullable interactionToNextViewTime;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isActive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isSlowRendered;
@property (nonatomic, readonly, strong) DDRUMViewEventViewJsRefreshRate * _Nullable jsRefreshRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable largestContentfulPaint;
@property (nonatomic, readonly, copy) NSString * _Nullable largestContentfulPaintTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadEvent;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly) enum DDRUMViewEventViewLoadingType loadingType;
@property (nonatomic, readonly, strong) DDRUMViewEventViewLongTask * _Nullable longTask;
@property (nonatomic, readonly, strong) NSNumber * _Nullable memoryAverage;
@property (nonatomic, readonly, strong) NSNumber * _Nullable memoryMax;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, readonly, strong) NSNumber * _Nullable networkSettledTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformance * _Nullable performance;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, readonly, strong) NSNumber * _Nullable refreshRateAverage;
@property (nonatomic, readonly, strong) NSNumber * _Nullable refreshRateMin;
@property (nonatomic, readonly, strong) DDRUMViewEventViewResource * _Nonnull resource;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timeSpent;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMViewEventViewAction")
@interface DDRUMViewEventViewAction : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewCrash")
@interface DDRUMViewEventViewCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewError")
@interface DDRUMViewEventViewError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMViewEventViewFlutterBuildTime")
@interface DDRUMViewEventViewFlutterBuildTime : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull average;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull max;
@property (nonatomic, readonly, strong) NSNumber * _Nullable metricMax;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull min;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMViewEventViewFlutterRasterTime")
@interface DDRUMViewEventViewFlutterRasterTime : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull average;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull max;
@property (nonatomic, readonly, strong) NSNumber * _Nullable metricMax;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull min;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventViewFrozenFrame")
@interface DDRUMViewEventViewFrozenFrame : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventViewFrustration")
@interface DDRUMViewEventViewFrustration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc37DDRUMViewEventViewInForegroundPeriods")
@interface DDRUMViewEventViewInForegroundPeriods : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMViewEventViewJsRefreshRate")
@interface DDRUMViewEventViewJsRefreshRate : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull average;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull max;
@property (nonatomic, readonly, strong) NSNumber * _Nullable metricMax;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull min;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventViewLoadingType, open) {
  DDRUMViewEventViewLoadingTypeNone = 0,
  DDRUMViewEventViewLoadingTypeInitialLoad = 1,
  DDRUMViewEventViewLoadingTypeRouteChange = 2,
  DDRUMViewEventViewLoadingTypeActivityDisplay = 3,
  DDRUMViewEventViewLoadingTypeActivityRedisplay = 4,
  DDRUMViewEventViewLoadingTypeFragmentDisplay = 5,
  DDRUMViewEventViewLoadingTypeFragmentRedisplay = 6,
  DDRUMViewEventViewLoadingTypeViewControllerDisplay = 7,
  DDRUMViewEventViewLoadingTypeViewControllerRedisplay = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewLongTask")
@interface DDRUMViewEventViewLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventViewPerformanceCLS;
@class DDRUMViewEventViewPerformanceFBC;
@class DDRUMViewEventViewPerformanceFCP;
@class DDRUMViewEventViewPerformanceFID;
@class DDRUMViewEventViewPerformanceINP;
@class DDRUMViewEventViewPerformanceLCP;

SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventViewPerformance")
@interface DDRUMViewEventViewPerformance : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceCLS * _Nullable cls;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceFBC * _Nullable fbc;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceFCP * _Nullable fcp;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceFID * _Nullable fid;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceINP * _Nullable inp;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceLCP * _Nullable lcp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventViewPerformanceCLSCurrentRect;
@class DDRUMViewEventViewPerformanceCLSPreviousRect;

SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceCLS")
@interface DDRUMViewEventViewPerformanceCLS : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceCLSCurrentRect * _Nullable currentRect;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceCLSPreviousRect * _Nullable previousRect;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull score;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc43DDRUMViewEventViewPerformanceCLSCurrentRect")
@interface DDRUMViewEventViewPerformanceCLSCurrentRect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull x;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull y;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc44DDRUMViewEventViewPerformanceCLSPreviousRect")
@interface DDRUMViewEventViewPerformanceCLSPreviousRect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull x;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull y;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceFBC")
@interface DDRUMViewEventViewPerformanceFBC : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceFCP")
@interface DDRUMViewEventViewPerformanceFCP : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceFID")
@interface DDRUMViewEventViewPerformanceFID : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceINP")
@interface DDRUMViewEventViewPerformanceINP : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceLCP")
@interface DDRUMViewEventViewPerformanceLCP : NSObject
@property (nonatomic, copy) NSString * _Nullable resourceUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewResource")
@interface DDRUMViewEventViewResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventDD;
@class DDRUMVitalEventAccount;
@class DDRUMVitalEventApplication;
@class DDRUMVitalEventRUMCITest;
@class DDRUMVitalEventRUMConnectivity;
@class DDRUMVitalEventContainer;
@class DDRUMVitalEventRUMEventAttributes;
@class DDRUMVitalEventRUMDevice;
@class DDRUMVitalEventDisplay;
@class DDRUMVitalEventRUMOperatingSystem;
@class DDRUMVitalEventSession;
enum DDRUMVitalEventSource : NSInteger;
@class DDRUMVitalEventRUMSyntheticsTest;
@class DDRUMVitalEventRUMUser;
@class DDRUMVitalEventView;
@class DDRUMVitalEventVital;

SWIFT_CLASS("_TtC11DatadogObjc15DDRUMVitalEvent")
@interface DDRUMVitalEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMVitalEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMVitalEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMVitalEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMVitalEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMVitalEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMVitalEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMVitalEventSource source;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMVitalEventView * _Nonnull view;
@property (nonatomic, readonly, strong) DDRUMVitalEventVital * _Nonnull vital;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventAccount")
@interface DDRUMVitalEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMVitalEventApplication")
@interface DDRUMVitalEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventContainerSource : NSInteger;
@class DDRUMVitalEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventContainer")
@interface DDRUMVitalEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMVitalEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMVitalEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventContainerSource, open) {
  DDRUMVitalEventContainerSourceAndroid = 0,
  DDRUMVitalEventContainerSourceIos = 1,
  DDRUMVitalEventContainerSourceBrowser = 2,
  DDRUMVitalEventContainerSourceFlutter = 3,
  DDRUMVitalEventContainerSourceReactNative = 4,
  DDRUMVitalEventContainerSourceRoku = 5,
  DDRUMVitalEventContainerSourceUnity = 6,
  DDRUMVitalEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMVitalEventContainerView")
@interface DDRUMVitalEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventDDConfiguration;
@class DDRUMVitalEventDDSession;
@class DDRUMVitalEventDDVital;

SWIFT_CLASS("_TtC11DatadogObjc17DDRUMVitalEventDD")
@interface DDRUMVitalEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMVitalEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMVitalEventDDSession * _Nullable session;
@property (nonatomic, readonly, strong) DDRUMVitalEventDDVital * _Nullable vital;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMVitalEventDDConfiguration")
@interface DDRUMVitalEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventDDSessionPlan : NSInteger;
enum DDRUMVitalEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventDDSession")
@interface DDRUMVitalEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMVitalEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMVitalEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventDDSessionPlan, open) {
  DDRUMVitalEventDDSessionPlanNone = 0,
  DDRUMVitalEventDDSessionPlanPlan1 = 1,
  DDRUMVitalEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventDDSessionRUMSessionPrecondition, open) {
  DDRUMVitalEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMVitalEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMVitalEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMVitalEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMVitalEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMVitalEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMVitalEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMVitalEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventDDVital")
@interface DDRUMVitalEventDDVital : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable computedValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventDisplay")
@interface DDRUMVitalEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMVitalEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMVitalEventDisplayViewport")
@interface DDRUMVitalEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventRUMCITest")
@interface DDRUMVitalEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventRUMConnectivityCellular;
enum DDRUMVitalEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMVitalEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc30DDRUMVitalEventRUMConnectivity")
@interface DDRUMVitalEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMVitalEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMVitalEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc38DDRUMVitalEventRUMConnectivityCellular")
@interface DDRUMVitalEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMConnectivityEffectiveType, open) {
  DDRUMVitalEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMVitalEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMVitalEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMVitalEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMVitalEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMConnectivityInterfaces, open) {
  DDRUMVitalEventRUMConnectivityInterfacesNone = 0,
  DDRUMVitalEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMVitalEventRUMConnectivityInterfacesCellular = 2,
  DDRUMVitalEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMVitalEventRUMConnectivityInterfacesWifi = 4,
  DDRUMVitalEventRUMConnectivityInterfacesWimax = 5,
  DDRUMVitalEventRUMConnectivityInterfacesMixed = 6,
  DDRUMVitalEventRUMConnectivityInterfacesOther = 7,
  DDRUMVitalEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMVitalEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMConnectivityStatus, open) {
  DDRUMVitalEventRUMConnectivityStatusConnected = 0,
  DDRUMVitalEventRUMConnectivityStatusNotConnected = 1,
  DDRUMVitalEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMVitalEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventRUMDevice")
@interface DDRUMVitalEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMVitalEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMDeviceRUMDeviceType, open) {
  DDRUMVitalEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMVitalEventRUMEventAttributes")
@interface DDRUMVitalEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMVitalEventRUMOperatingSystem")
@interface DDRUMVitalEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMVitalEventRUMSyntheticsTest")
@interface DDRUMVitalEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventRUMUser")
@interface DDRUMVitalEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventSession")
@interface DDRUMVitalEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMVitalEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventSessionRUMSessionType, open) {
  DDRUMVitalEventSessionRUMSessionTypeUser = 0,
  DDRUMVitalEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMVitalEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventSource, open) {
  DDRUMVitalEventSourceNone = 0,
  DDRUMVitalEventSourceAndroid = 1,
  DDRUMVitalEventSourceIos = 2,
  DDRUMVitalEventSourceBrowser = 3,
  DDRUMVitalEventSourceFlutter = 4,
  DDRUMVitalEventSourceReactNative = 5,
  DDRUMVitalEventSourceRoku = 6,
  DDRUMVitalEventSourceUnity = 7,
  DDRUMVitalEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc19DDRUMVitalEventView")
@interface DDRUMVitalEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventVitalVitalType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMVitalEventVital")
@interface DDRUMVitalEventVital : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nullable custom;
@property (nonatomic, readonly, copy) NSString * _Nullable vitalDescription;
@property (nonatomic, readonly, strong) NSNumber * _Nullable duration;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMVitalEventVitalVitalType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventVitalVitalType, open) {
  DDRUMVitalEventVitalVitalTypeDuration = 0,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalsFrequency, open) {
  DDRUMVitalsFrequencyFrequent = 0,
  DDRUMVitalsFrequencyAverage = 1,
  DDRUMVitalsFrequencyRare = 2,
  DDRUMVitalsFrequencyNever = 3,
};

typedef SWIFT_ENUM(NSInteger, DDSDKVerbosityLevel, open) {
  DDSDKVerbosityLevelNone = 0,
  DDSDKVerbosityLevelDebug = 1,
  DDSDKVerbosityLevelWarn = 2,
  DDSDKVerbosityLevelError = 3,
  DDSDKVerbosityLevelCritical = 4,
};


SWIFT_PROTOCOL("_TtP11DatadogObjc20DDServerDateProvider_")
@protocol DDServerDateProvider
/// Start the clock synchronisation with NTP server.
/// Calls the <code>completion</code> by passing it the server time offset when the synchronization succeeds or<code>nil</code> if it fails.
- (void)synchronizeWithUpdate:(void (^ _Nonnull)(NSTimeInterval))update;
@end


SWIFT_CLASS("_TtC11DatadogObjc6DDSite")
@interface DDSite : NSObject
+ (DDSite * _Nonnull)us1 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)us3 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)us5 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)eu1 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)ap1 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)us1_fed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryConfigurationEventDD;
@class DDTelemetryConfigurationEventAction;
@class DDTelemetryConfigurationEventApplication;
@class DDTelemetryConfigurationEventSession;
enum DDTelemetryConfigurationEventSource : NSInteger;
@class DDTelemetryConfigurationEventTelemetry;
@class DDTelemetryConfigurationEventView;

SWIFT_CLASS("_TtC11DatadogObjc29DDTelemetryConfigurationEvent")
@interface DDTelemetryConfigurationEvent : NSObject
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventApplication * _Nullable application;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) NSNumber * _Nullable effectiveSampleRate;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable experimentalFeatures;
@property (nonatomic, readonly, copy) NSString * _Nonnull service;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventSession * _Nullable session;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventSource source;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetry * _Nonnull telemetry;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventView * _Nullable view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDTelemetryConfigurationEventAction")
@interface DDTelemetryConfigurationEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc40DDTelemetryConfigurationEventApplication")
@interface DDTelemetryConfigurationEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDTelemetryConfigurationEventDD")
@interface DDTelemetryConfigurationEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc36DDTelemetryConfigurationEventSession")
@interface DDTelemetryConfigurationEventSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventSource, open) {
  DDTelemetryConfigurationEventSourceAndroid = 0,
  DDTelemetryConfigurationEventSourceIos = 1,
  DDTelemetryConfigurationEventSourceBrowser = 2,
  DDTelemetryConfigurationEventSourceFlutter = 3,
  DDTelemetryConfigurationEventSourceReactNative = 4,
  DDTelemetryConfigurationEventSourceUnity = 5,
  DDTelemetryConfigurationEventSourceKotlinMultiplatform = 6,
};

@class DDTelemetryConfigurationEventTelemetryConfiguration;
@class DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice;
@class DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem;

SWIFT_CLASS("_TtC11DatadogObjc38DDTelemetryConfigurationEventTelemetry")
@interface DDTelemetryConfigurationEventTelemetry : NSObject
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryConfiguration * _Nonnull configuration;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull telemetryInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs;
@class DDTelemetryConfigurationEventTelemetryConfigurationForwardReports;
@class DDTelemetryConfigurationEventTelemetryConfigurationPlugins;
enum DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistence : NSInteger;
enum DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjection : NSInteger;
enum DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsent : NSInteger;
enum DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategy : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc51DDTelemetryConfigurationEventTelemetryConfiguration")
@interface DDTelemetryConfigurationEventTelemetryConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable actionNameAttribute;
@property (nonatomic, readonly, strong) NSNumber * _Nullable allowFallbackToLocalStorage;
@property (nonatomic, readonly, strong) NSNumber * _Nullable allowUntrustedEvents;
@property (nonatomic, readonly, strong) NSNumber * _Nullable appHangThreshold;
@property (nonatomic, readonly, strong) NSNumber * _Nullable backgroundTasksEnabled;
@property (nonatomic, readonly, strong) NSNumber * _Nullable batchProcessingLevel;
@property (nonatomic, readonly, strong) NSNumber * _Nullable batchSize;
@property (nonatomic, readonly, strong) NSNumber * _Nullable batchUploadFrequency;
@property (nonatomic, readonly, strong) NSNumber * _Nullable compressIntakeRequests;
@property (nonatomic, copy) NSString * _Nullable dartVersion;
@property (nonatomic, copy) NSString * _Nullable defaultPrivacyLevel;
@property (nonatomic, strong) NSNumber * _Nullable enablePrivacyForActionName;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs * _Nullable forwardConsoleLogs;
@property (nonatomic, readonly, strong) NSNumber * _Nullable forwardErrorsToLogs;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryConfigurationForwardReports * _Nullable forwardReports;
@property (nonatomic, copy) NSString * _Nullable imagePrivacyLevel;
@property (nonatomic, copy) NSString * _Nullable initializationType;
@property (nonatomic, readonly, strong) NSNumber * _Nullable invTimeThresholdMs;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isMainProcess;
@property (nonatomic, strong) NSNumber * _Nullable mobileVitalsUpdatePeriod;
@property (nonatomic, copy) NSArray<DDTelemetryConfigurationEventTelemetryConfigurationPlugins *> * _Nullable plugins;
@property (nonatomic, readonly, strong) NSNumber * _Nullable premiumSampleRate;
@property (nonatomic, copy) NSString * _Nullable reactNativeVersion;
@property (nonatomic, copy) NSString * _Nullable reactVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nullable replaySampleRate;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable selectedTracingPropagators;
@property (nonatomic, strong) NSNumber * _Nullable sendLogsAfterSessionExpiration;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistence sessionPersistence;
@property (nonatomic, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionSampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable silentMultipleInit;
@property (nonatomic, strong) NSNumber * _Nullable startRecordingImmediately;
@property (nonatomic, strong) NSNumber * _Nullable startSessionReplayRecordingManually;
@property (nonatomic, readonly, strong) NSNumber * _Nullable storeContextsAcrossPages;
@property (nonatomic, readonly, strong) NSNumber * _Nullable telemetryConfigurationSampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable telemetrySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable telemetryUsageSampleRate;
@property (nonatomic, copy) NSString * _Nullable textAndInputPrivacyLevel;
@property (nonatomic, readonly, strong) NSNumber * _Nullable tnsTimeThresholdMs;
@property (nonatomic, copy) NSString * _Nullable touchPrivacyLevel;
@property (nonatomic) enum DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjection traceContextInjection;
@property (nonatomic, readonly, strong) NSNumber * _Nullable traceSampleRate;
@property (nonatomic, copy) NSString * _Nullable tracerApi;
@property (nonatomic, copy) NSString * _Nullable tracerApiVersion;
@property (nonatomic, strong) NSNumber * _Nullable trackAnonymousUser;
@property (nonatomic, strong) NSNumber * _Nullable trackBackgroundEvents;
@property (nonatomic, strong) NSNumber * _Nullable trackCrossPlatformLongTasks;
@property (nonatomic, strong) NSNumber * _Nullable trackErrors;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable trackFeatureFlagsForEvents;
@property (nonatomic, strong) NSNumber * _Nullable trackFlutterPerformance;
@property (nonatomic, strong) NSNumber * _Nullable trackFrustrations;
@property (nonatomic, strong) NSNumber * _Nullable trackInteractions;
@property (nonatomic, strong) NSNumber * _Nullable trackLongTask;
@property (nonatomic, strong) NSNumber * _Nullable trackNativeErrors;
@property (nonatomic, strong) NSNumber * _Nullable trackNativeLongTasks;
@property (nonatomic, strong) NSNumber * _Nullable trackNativeViews;
@property (nonatomic, strong) NSNumber * _Nullable trackNetworkRequests;
@property (nonatomic, strong) NSNumber * _Nullable trackResources;
@property (nonatomic, readonly, strong) NSNumber * _Nullable trackSessionAcrossSubdomains;
@property (nonatomic, strong) NSNumber * _Nullable trackUserInteractions;
@property (nonatomic, strong) NSNumber * _Nullable trackViewsManually;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsent trackingConsent;
@property (nonatomic, copy) NSString * _Nullable unityVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useAllowedTracingOrigins;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useAllowedTracingUrls;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useBeforeSend;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useCrossSiteSessionCookie;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useExcludedActivityUrls;
@property (nonatomic, strong) NSNumber * _Nullable useFirstPartyHosts;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useLocalEncryption;
@property (nonatomic, readonly, strong) NSNumber * _Nullable usePartitionedCrossSiteSessionCookie;
@property (nonatomic, strong) NSNumber * _Nullable usePciIntake;
@property (nonatomic, strong) NSNumber * _Nullable useProxy;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useSecureSessionCookie;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useTracing;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useWorkerUrl;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategy viewTrackingStrategy;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc69DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs")
@interface DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs : NSObject
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
@property (nonatomic, readonly, copy) NSString * _Nullable string;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc65DDTelemetryConfigurationEventTelemetryConfigurationForwardReports")
@interface DDTelemetryConfigurationEventTelemetryConfigurationForwardReports : NSObject
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
@property (nonatomic, readonly, copy) NSString * _Nullable string;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc58DDTelemetryConfigurationEventTelemetryConfigurationPlugins")
@interface DDTelemetryConfigurationEventTelemetryConfigurationPlugins : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull pluginsInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagators, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsDatadog = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsB3 = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsB3multi = 3,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsTracecontext = 4,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistence, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistenceNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistenceLocalStorage = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistenceCookie = 2,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjection, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjectionNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjectionAll = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjectionSampled = 2,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEvents, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsVital = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsResource = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsAction = 3,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsLongTask = 4,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsent, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentGranted = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentNotGranted = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentPending = 3,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategy, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyActivityViewTrackingStrategy = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyFragmentViewTrackingStrategy = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyMixedViewTrackingStrategy = 3,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyNavigationViewTrackingStrategy = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc56DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice")
@interface DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc65DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem")
@interface DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDTelemetryConfigurationEventView")
@interface DDTelemetryConfigurationEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryDebugEventDD;
@class DDTelemetryDebugEventAction;
@class DDTelemetryDebugEventApplication;
@class DDTelemetryDebugEventSession;
enum DDTelemetryDebugEventSource : NSInteger;
@class DDTelemetryDebugEventTelemetry;
@class DDTelemetryDebugEventView;

SWIFT_CLASS("_TtC11DatadogObjc21DDTelemetryDebugEvent")
@interface DDTelemetryDebugEvent : NSObject
@property (nonatomic, readonly, strong) DDTelemetryDebugEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventApplication * _Nullable application;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) NSNumber * _Nullable effectiveSampleRate;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable experimentalFeatures;
@property (nonatomic, readonly, copy) NSString * _Nonnull service;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventSession * _Nullable session;
@property (nonatomic, readonly) enum DDTelemetryDebugEventSource source;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventTelemetry * _Nonnull telemetry;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventView * _Nullable view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDTelemetryDebugEventAction")
@interface DDTelemetryDebugEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDTelemetryDebugEventApplication")
@interface DDTelemetryDebugEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDTelemetryDebugEventDD")
@interface DDTelemetryDebugEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDTelemetryDebugEventSession")
@interface DDTelemetryDebugEventSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryDebugEventSource, open) {
  DDTelemetryDebugEventSourceAndroid = 0,
  DDTelemetryDebugEventSourceIos = 1,
  DDTelemetryDebugEventSourceBrowser = 2,
  DDTelemetryDebugEventSourceFlutter = 3,
  DDTelemetryDebugEventSourceReactNative = 4,
  DDTelemetryDebugEventSourceUnity = 5,
  DDTelemetryDebugEventSourceKotlinMultiplatform = 6,
};

@class DDTelemetryDebugEventTelemetryRUMTelemetryDevice;
@class DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem;

SWIFT_CLASS("_TtC11DatadogObjc30DDTelemetryDebugEventTelemetry")
@interface DDTelemetryDebugEventTelemetry : NSObject
@property (nonatomic, readonly, strong) DDTelemetryDebugEventTelemetryRUMTelemetryDevice * _Nullable device;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull telemetryInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc48DDTelemetryDebugEventTelemetryRUMTelemetryDevice")
@interface DDTelemetryDebugEventTelemetryRUMTelemetryDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc57DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem")
@interface DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDTelemetryDebugEventView")
@interface DDTelemetryDebugEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryErrorEventDD;
@class DDTelemetryErrorEventAction;
@class DDTelemetryErrorEventApplication;
@class DDTelemetryErrorEventSession;
enum DDTelemetryErrorEventSource : NSInteger;
@class DDTelemetryErrorEventTelemetry;
@class DDTelemetryErrorEventView;

SWIFT_CLASS("_TtC11DatadogObjc21DDTelemetryErrorEvent")
@interface DDTelemetryErrorEvent : NSObject
@property (nonatomic, readonly, strong) DDTelemetryErrorEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventApplication * _Nullable application;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) NSNumber * _Nullable effectiveSampleRate;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable experimentalFeatures;
@property (nonatomic, readonly, copy) NSString * _Nonnull service;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventSession * _Nullable session;
@property (nonatomic, readonly) enum DDTelemetryErrorEventSource source;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetry * _Nonnull telemetry;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventView * _Nullable view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDTelemetryErrorEventAction")
@interface DDTelemetryErrorEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDTelemetryErrorEventApplication")
@interface DDTelemetryErrorEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDTelemetryErrorEventDD")
@interface DDTelemetryErrorEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDTelemetryErrorEventSession")
@interface DDTelemetryErrorEventSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryErrorEventSource, open) {
  DDTelemetryErrorEventSourceAndroid = 0,
  DDTelemetryErrorEventSourceIos = 1,
  DDTelemetryErrorEventSourceBrowser = 2,
  DDTelemetryErrorEventSourceFlutter = 3,
  DDTelemetryErrorEventSourceReactNative = 4,
  DDTelemetryErrorEventSourceUnity = 5,
  DDTelemetryErrorEventSourceKotlinMultiplatform = 6,
};

@class DDTelemetryErrorEventTelemetryRUMTelemetryDevice;
@class DDTelemetryErrorEventTelemetryError;
@class DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem;

SWIFT_CLASS("_TtC11DatadogObjc30DDTelemetryErrorEventTelemetry")
@interface DDTelemetryErrorEventTelemetry : NSObject
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetryRUMTelemetryDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetryError * _Nullable error;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull telemetryInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDTelemetryErrorEventTelemetryError")
@interface DDTelemetryErrorEventTelemetryError : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable kind;
@property (nonatomic, readonly, copy) NSString * _Nullable stack;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc48DDTelemetryErrorEventTelemetryRUMTelemetryDevice")
@interface DDTelemetryErrorEventTelemetryRUMTelemetryDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc57DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem")
@interface DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDTelemetryErrorEventView")
@interface DDTelemetryErrorEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTraceConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc7DDTrace")
@interface DDTrace : NSObject
+ (void)enableWith:(DDTraceConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DDTraceURLSessionTracking;

SWIFT_CLASS("_TtC11DatadogObjc20DDTraceConfiguration")
@interface DDTraceConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) float sampleRate;
@property (nonatomic, copy) NSString * _Nullable service;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tags;
- (void)setURLSessionTracking:(DDTraceURLSessionTracking * _Nonnull)tracking;
@property (nonatomic) BOOL bundleWithRumEnabled;
@property (nonatomic) BOOL networkInfoEnabled;
@property (nonatomic, copy) NSURL * _Nullable customEndpoint;
@end

/// Defines whether the trace context should be injected into all requests or only sampled ones.
typedef SWIFT_ENUM(NSInteger, DDTraceContextInjection, open) {
/// Injects trace context into all requests irrespective of the sampling decision.
  DDTraceContextInjectionAll = 0,
/// Injects trace context only into sampled requests.
  DDTraceContextInjectionSampled = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDTraceFirstPartyHostsTracing")
@interface DDTraceFirstPartyHostsTracing : NSObject
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Available strategies for sampling trace propagation headers.
SWIFT_CLASS("_TtC11DatadogObjc23DDTraceSamplingStrategy")
@interface DDTraceSamplingStrategy : NSObject
/// Trace propagation headers will be sampled same as propagated span.
/// Use this option to leverage head-based sampling, where the decision to keep or drop the trace
/// is determined from the first span of the trace, the head, when the trace is created. With <code>.headBased</code>
/// strategy, this decision is propagated through the request context to downstream services.
+ (DDTraceSamplingStrategy * _Nonnull)headBased SWIFT_WARN_UNUSED_RESULT;
/// Trace propagation headers will be sampled independently from sampling decision in propagated span.
/// Use this option to apply the provided <code>sampleRate</code> for determining the decision to keep or drop the trace
/// in downstream services independently of sampling their parent span.
+ (DDTraceSamplingStrategy * _Nonnull)customWithSampleRate:(float)sampleRate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDTraceURLSessionTracking")
@interface DDTraceURLSessionTracking : NSObject
- (nonnull instancetype)initWithFirstPartyHostsTracing:(DDTraceFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing OBJC_DESIGNATED_INITIALIZER;
- (void)setFirstPartyHostsTracing:(DDTraceFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OTSpan;
@protocol OTSpanContext;

/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTTracer.h
SWIFT_PROTOCOL("_TtP11DatadogObjc8OTTracer_")
@protocol OTTracer
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS("_TtC11DatadogObjc8DDTracer")
@interface DDTracer : NSObject <OTTracer>
+ (id <OTTracer> _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc19DDTracingHeaderType")
@interface DDTracingHeaderType : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull datadog;)
+ (DDTracingHeaderType * _Nonnull)datadog SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull b3multi;)
+ (DDTracingHeaderType * _Nonnull)b3multi SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull b3;)
+ (DDTracingHeaderType * _Nonnull)b3 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull tracecontext;)
+ (DDTracingHeaderType * _Nonnull)tracecontext SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc17DDTrackingConsent")
@interface DDTrackingConsent : NSObject
+ (DDTrackingConsent * _Nonnull)granted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)notGranted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)pending SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_PROTOCOL("_TtP11DatadogObjc28DDUIPressRUMActionsPredicate_")
@protocol DDUIPressRUMActionsPredicate
/// The predicate deciding if the RUM Action should be recorded.
/// \param type the <code>UIPress.PressType</code> which received the action.
///
/// \param targetView an instance of the <code>UIView</code> which received the action.
///
///
/// returns:
/// RUM Action if it should be recorded, <code>nil</code> otherwise.
- (DDRUMAction * _Nullable)rumActionWithPress:(enum UIPressType)type targetView:(UIView * _Nonnull)targetView SWIFT_WARN_UNUSED_RESULT;
@end


@class DDURLSessionInstrumentationConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc27DDURLSessionInstrumentation")
@interface DDURLSessionInstrumentation : NSObject
/// Enables URLSession instrumentation.
/// \param configuration Configuration of the feature.
///
+ (void)enableWithConfiguration:(DDURLSessionInstrumentationConfiguration * _Nonnull)configuration;
/// Disables URLSession instrumentation.
/// \param delegateClass The delegate class to unbind.
///
+ (void)disableWithDelegateClass:(Class <NSURLSessionDataDelegate> _Nonnull)delegateClass;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DDURLSessionInstrumentationFirstPartyHostsTracing;

/// Configuration of URLSession instrumentation.
SWIFT_CLASS("_TtC11DatadogObjc40DDURLSessionInstrumentationConfiguration")
@interface DDURLSessionInstrumentationConfiguration : NSObject
- (nonnull instancetype)initWithDelegateClass:(Class <NSURLSessionDataDelegate> _Nonnull)delegateClass OBJC_DESIGNATED_INITIALIZER;
/// Sets additional first party hosts to consider in the interception.
- (void)setFirstPartyHostsTracing:(DDURLSessionInstrumentationFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing;
/// The delegate class to be used to swizzle URLSessionTaskDelegate & URLSessionDataDelegate methods.
@property (nonatomic) Class <NSURLSessionDataDelegate> _Nonnull delegateClass;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Defines configuration for first-party hosts in distributed tracing.
SWIFT_CLASS("_TtC11DatadogObjc49DDURLSessionInstrumentationFirstPartyHostsTracing")
@interface DDURLSessionInstrumentationFirstPartyHostsTracing : NSObject
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDUploadFrequency, open) {
  DDUploadFrequencyFrequent = 0,
  DDUploadFrequencyAverage = 1,
  DDUploadFrequencyRare = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDW3CHTTPHeadersWriter")
@interface DDW3CHTTPHeadersWriter : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull traceHeaderFields;
- (nonnull instancetype)initWithSamplingRate:(float)samplingRate SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc2OT")
@interface OT : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull formatTextMap;)
+ (NSString * _Nonnull)formatTextMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpan.h
SWIFT_PROTOCOL("_TtP11DatadogObjc6OTSpan_")
@protocol OTSpan
@property (nonatomic, readonly, strong) id <OTSpanContext> _Nonnull context;
@property (nonatomic, readonly, strong) id <OTTracer> _Nonnull tracer;
- (void)setOperationName:(NSString * _Nonnull)operationName;
- (void)setTag:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)setTag:(NSString * _Nonnull)key numberValue:(NSNumber * _Nonnull)numberValue;
- (void)setTag:(NSString * _Nonnull)key boolValue:(BOOL)boolValue;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields timestamp:(NSDate * _Nullable)timestamp;
- (id <OTSpan> _Nonnull)setBaggageItem:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getBaggageItem:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setError:(NSError * _Nonnull)error;
- (void)setErrorWithKind:(NSString * _Nonnull)kind message:(NSString * _Nonnull)message stack:(NSString * _Nullable)stack;
- (void)finish;
- (void)finishWithTime:(NSDate * _Nullable)finishTime;
- (id <OTSpan> _Nonnull)setActive;
@end


/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpanContext.h
SWIFT_PROTOCOL("_TtP11DatadogObjc13OTSpanContext_")
@protocol OTSpanContext
- (void)forEachBaggageItem:(SWIFT_NOESCAPE BOOL (^ _Nonnull)(NSString * _Nonnull, NSString * _Nonnull))callback;
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef DATADOGOBJC_SWIFT_H
#define DATADOGOBJC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DatadogObjc",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
enum DDInjectEncoding : NSInteger;
@class DDTraceSamplingStrategy;
enum DDTraceContextInjection : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDB3HTTPHeadersWriter")
@interface DDB3HTTPHeadersWriter : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull traceHeaderFields;
- (nonnull instancetype)initWithSamplingRate:(float)samplingRate injectEncoding:(enum DDInjectEncoding)injectEncoding SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSampleRate:(float)sampleRate injectEncoding:(enum DDInjectEncoding)injectEncoding OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy injectEncoding:(enum DDInjectEncoding)injectEncoding traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDBatchProcessingLevel, open) {
  DDBatchProcessingLevelLow = 0,
  DDBatchProcessingLevelMedium = 1,
  DDBatchProcessingLevelHigh = 2,
};

typedef SWIFT_ENUM(NSInteger, DDBatchSize, open) {
  DDBatchSizeSmall = 0,
  DDBatchSizeMedium = 1,
  DDBatchSizeLarge = 2,
};

@class DDSite;
enum DDUploadFrequency : NSInteger;
@protocol DDDataEncryption;
@protocol DDServerDateProvider;
@class NSBundle;

SWIFT_CLASS("_TtC11DatadogObjc15DDConfiguration")
@interface DDConfiguration : NSObject
/// Either the RUM client token (which supports RUM, Logging and APM) or regular client token, only for Logging and APM.
@property (nonatomic, copy) NSString * _Nonnull clientToken;
/// The environment name which will be sent to Datadog. This can be used
/// To filter events on different environments (e.g. “staging” or “production”).
@property (nonatomic, copy) NSString * _Nonnull env;
/// The Datadog server site where data is sent.
/// Default value is <code>.us1</code>.
@property (nonatomic, strong) DDSite * _Nonnull site;
/// The service name associated with data send to Datadog.
/// Default value is set to application bundle identifier.
@property (nonatomic, copy) NSString * _Nullable service;
/// The preferred size of batched data uploaded to Datadog servers.
/// This value impacts the size and number of requests performed by the SDK.
/// <code>.medium</code> by default.
@property (nonatomic) enum DDBatchSize batchSize;
/// The preferred frequency of uploading data to Datadog servers.
/// This value impacts the frequency of performing network requests by the SDK.
/// <code>.average</code> by default.
@property (nonatomic) enum DDUploadFrequency uploadFrequency;
///
@property (nonatomic) enum DDBatchProcessingLevel batchProcessingLevel;
/// Proxy configuration attributes.
/// This can be used to a enable a custom proxy for uploading tracked data to Datadog’s intake.
@property (nonatomic, copy) NSDictionary * _Nullable proxyConfiguration;
/// Sets Data encryption to use for on-disk data persistency by providing an object
/// complying with <code>DataEncryption</code> protocol.
- (void)setEncryption:(id <DDDataEncryption> _Nonnull)encryption;
/// A custom NTP synchronization interface.
/// By default, the Datadog SDK synchronizes with dedicated NTP pools provided by the
/// https://www.ntppool.org/ . Using different pools or setting a no-op <code>ServerDateProvider</code>
/// implementation will result in desynchronization of the SDK instance and the Datadog servers.
/// This can lead to significant time shift in RUM sessions or distributed traces.
- (void)setServerDateProvider:(id <DDServerDateProvider> _Nonnull)serverDateProvider;
/// The bundle object that contains the current executable.
@property (nonatomic, strong) NSBundle * _Nonnull bundle;
/// Sets additional configuration attributes.
/// This can be used to tweak internal features of the SDK and shouldn’t be considered as a part of public API.
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull additionalConfiguration;
/// Flag that determines if UIApplication methods <a href="https://developer.apple.com/documentation/uikit/uiapplication/1623031-beginbackgroundtaskwithexpiratio"><code>beginBackgroundTask(expirationHandler:)</code></a> and <a href="https://developer.apple.com/documentation/uikit/uiapplication/1622970-endbackgroundtask"><code>endBackgroundTask:</code></a>
/// are utilized to perform background uploads. It may extend the amount of time the app is operating in background by 30 seconds.
/// Tasks are normally stopped when there’s nothing to upload or when encountering any upload blocker such us no internet connection or low battery.
/// <code>false</code> by default.
@property (nonatomic) BOOL backgroundTasksEnabled;
/// Creates a Datadog SDK Configuration object.
/// \param clientToken Either the RUM client token (which supports RUM, Logging and APM) or regular client token,
/// only for Logging and APM.
///
/// \param env The environment name which will be sent to Datadog. This can be used
/// To filter events on different environments (e.g. “staging” or “production”).
///
- (nonnull instancetype)initWithClientToken:(NSString * _Nonnull)clientToken env:(NSString * _Nonnull)env OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDCoreLoggerLevel, open) {
  DDCoreLoggerLevelDebug = 0,
  DDCoreLoggerLevelWarn = 1,
  DDCoreLoggerLevelError = 2,
  DDCoreLoggerLevelCritical = 3,
};

@class NSData;

SWIFT_PROTOCOL("_TtP11DatadogObjc16DDDataEncryption_")
@protocol DDDataEncryption
/// Encrypts given <code>Data</code> with user-chosen encryption.
/// \param data Data to encrypt.
///
///
/// returns:
/// The encrypted data.
- (NSData * _Nullable)encryptWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Decrypts given <code>Data</code> with user-chosen encryption.
/// Beware that data to decrypt could be encrypted in a previous
/// app launch, so implementation should be aware of the case when decryption could
/// fail (for example, key used for encryption is different from key used for decryption, if
/// they are unique for every app launch).
/// \param data Data to decrypt.
///
///
/// returns:
/// The decrypted data.
- (NSData * _Nullable)decryptWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

@class DDTrackingConsent;
enum DDSDKVerbosityLevel : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc9DDDatadog")
@interface DDDatadog : NSObject
+ (void)initializeWithConfiguration:(DDConfiguration * _Nonnull)configuration trackingConsent:(DDTrackingConsent * _Nonnull)trackingConsent;
+ (void)setVerbosityLevel:(enum DDSDKVerbosityLevel)verbosityLevel;
+ (enum DDSDKVerbosityLevel)verbosityLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setUserInfoWithUserId:(NSString * _Nonnull)userId name:(NSString * _Nullable)name email:(NSString * _Nullable)email extraInfo:(NSDictionary<NSString *, id> * _Nonnull)extraInfo;
+ (void)setUserInfoWithId:(NSString * _Nullable)id name:(NSString * _Nullable)name email:(NSString * _Nullable)email extraInfo:(NSDictionary<NSString *, id> * _Nonnull)extraInfo SWIFT_DEPRECATED_MSG("UserInfo id property is now mandatory.");
+ (void)addUserExtraInfo:(NSDictionary<NSString *, id> * _Nonnull)extraInfo;
+ (void)setTrackingConsentWithConsent:(DDTrackingConsent * _Nonnull)consent;
+ (BOOL)isInitialized SWIFT_WARN_UNUSED_RESULT;
+ (void)stopInstance;
+ (void)clearAllData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class DDRUMAction;

SWIFT_PROTOCOL("_TtP11DatadogObjc28DDUITouchRUMActionsPredicate_")
@protocol DDUITouchRUMActionsPredicate
/// The predicate deciding if the RUM Action should be recorded.
/// \param targetView an instance of the <code>UIView</code> which received the action.
///
///
/// returns:
/// RUM Action if it should be recorded, <code>nil</code> otherwise.
- (DDRUMAction * _Nullable)rumActionWithTargetView:(UIView * _Nonnull)targetView SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP11DatadogObjc26DDUIKitRUMActionsPredicate_")
@protocol DDUIKitRUMActionsPredicate <DDUITouchRUMActionsPredicate>
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDDefaultUIKitRUMActionsPredicate")
@interface DDDefaultUIKitRUMActionsPredicate : NSObject <DDUIKitRUMActionsPredicate>
- (DDRUMAction * _Nullable)rumActionWithTargetView:(UIView * _Nonnull)targetView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@class DDRUMView;

SWIFT_PROTOCOL("_TtP11DatadogObjc24DDUIKitRUMViewsPredicate_")
@protocol DDUIKitRUMViewsPredicate
/// The predicate deciding if the RUM View should be started or ended for given instance of the <code>UIViewController</code>.
/// \param viewController an instance of the view controller noticed by the SDK.
///
///
/// returns:
/// RUM View parameters if received view controller should start/end the RUM View, <code>nil</code> otherwise.
- (DDRUMView * _Nullable)rumViewFor:(UIViewController * _Nonnull)viewController SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDDefaultUIKitRUMViewsPredicate")
@interface DDDefaultUIKitRUMViewsPredicate : NSObject <DDUIKitRUMViewsPredicate>
- (DDRUMView * _Nullable)rumViewFor:(UIViewController * _Nonnull)viewController SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc19DDHTTPHeadersWriter")
@interface DDHTTPHeadersWriter : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull traceHeaderFields;
- (nonnull instancetype)initWithSamplingRate:(float)samplingRate SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDInjectEncoding, open) {
  DDInjectEncodingMultiple = 0,
  DDInjectEncodingSingle = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc16DDInternalLogger")
@interface DDInternalLogger : NSObject
/// Function printing <code>String</code> content to console. Intended to be used only by SDK components.
+ (void)consolePrint:(NSString * _Nonnull)message :(enum DDCoreLoggerLevel)level;
+ (void)telemetryDebugWithId:(NSString * _Nonnull)id message:(NSString * _Nonnull)message;
+ (void)telemetryErrorWithId:(NSString * _Nonnull)id message:(NSString * _Nonnull)message kind:(NSString * _Nullable)kind stack:(NSString * _Nullable)stack;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDate;
enum DDLogEventStatus : NSInteger;
@class DDLogEventError;
@class DDLogEventDd;
@class DDLogEventOperatingSystem;
@class DDLogEventUserInfo;
@class DDLogEventNetworkConnectionInfo;
@class DDLogEventCarrierInfo;
@class DDLogEventAttributes;

SWIFT_CLASS("_TtC11DatadogObjc10DDLogEvent")
@interface DDLogEvent : NSObject
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly) enum DDLogEventStatus status;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDLogEventError * _Nullable error;
@property (nonatomic, readonly, copy) NSString * _Nonnull serviceName;
@property (nonatomic, readonly, copy) NSString * _Nonnull environment;
@property (nonatomic, readonly, copy) NSString * _Nonnull loggerName;
@property (nonatomic, readonly, copy) NSString * _Nonnull loggerVersion;
@property (nonatomic, readonly, copy) NSString * _Nullable threadName;
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationVersion;
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationBuildNumber;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable variant;
@property (nonatomic, readonly, strong) DDLogEventDd * _Nonnull dd;
@property (nonatomic, readonly, strong) DDLogEventOperatingSystem * _Nonnull os;
@property (nonatomic, readonly, strong) DDLogEventUserInfo * _Nonnull userInfo;
@property (nonatomic, readonly, strong) DDLogEventNetworkConnectionInfo * _Nullable networkConnectionInfo;
@property (nonatomic, readonly, strong) DDLogEventCarrierInfo * _Nullable mobileCarrierInfo;
@property (nonatomic, readonly, strong) DDLogEventAttributes * _Nonnull attributes;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable tags;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc20DDLogEventAttributes")
@interface DDLogEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull userAttributes;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDLogEventBinaryImage")
@interface DDLogEventBinaryImage : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable arch;
@property (nonatomic, readonly) BOOL isSystem;
@property (nonatomic, readonly, copy) NSString * _Nullable loadAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable maxAddress;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDLogEventRadioAccessTechnology : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDLogEventCarrierInfo")
@interface DDLogEventCarrierInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable carrierISOCountryCode;
@property (nonatomic, readonly) BOOL carrierAllowsVOIP;
@property (nonatomic, readonly) enum DDLogEventRadioAccessTechnology radioAccessTechnology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDLogEventDeviceInfo;

SWIFT_CLASS("_TtC11DatadogObjc12DDLogEventDd")
@interface DDLogEventDd : NSObject
@property (nonatomic, readonly, strong) DDLogEventDeviceInfo * _Nonnull device;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc20DDLogEventDeviceInfo")
@interface DDLogEventDeviceInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull brand;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull model;
@property (nonatomic, readonly, copy) NSString * _Nonnull architecture;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc15DDLogEventError")
@interface DDLogEventError : NSObject
@property (nonatomic, copy) NSString * _Nullable kind;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, copy) NSString * _Nonnull sourceType;
@property (nonatomic, copy) NSString * _Nullable fingerprint;
@property (nonatomic, copy) NSArray<DDLogEventBinaryImage *> * _Nullable binaryImages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDLogEventInterface, open) {
  DDLogEventInterfaceWifi = 0,
  DDLogEventInterfaceWiredEthernet = 1,
  DDLogEventInterfaceCellular = 2,
  DDLogEventInterfaceLoopback = 3,
  DDLogEventInterfaceOther = 4,
};

enum DDLogEventReachability : NSInteger;
@class NSNumber;

SWIFT_CLASS("_TtC11DatadogObjc31DDLogEventNetworkConnectionInfo")
@interface DDLogEventNetworkConnectionInfo : NSObject
@property (nonatomic, readonly) enum DDLogEventReachability reachability;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable availableInterfaces;
@property (nonatomic, readonly, strong) NSNumber * _Nullable supportsIPv4;
@property (nonatomic, readonly, strong) NSNumber * _Nullable supportsIPv6;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isExpensive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isConstrained;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDLogEventOperatingSystem")
@interface DDLogEventOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nullable build;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDLogEventRadioAccessTechnology, open) {
  DDLogEventRadioAccessTechnologyGPRS = 0,
  DDLogEventRadioAccessTechnologyEdge = 1,
  DDLogEventRadioAccessTechnologyWCDMA = 2,
  DDLogEventRadioAccessTechnologyHSDPA = 3,
  DDLogEventRadioAccessTechnologyHSUPA = 4,
  DDLogEventRadioAccessTechnologyCDMA1x = 5,
  DDLogEventRadioAccessTechnologyCDMAEVDORev0 = 6,
  DDLogEventRadioAccessTechnologyCDMAEVDORevA = 7,
  DDLogEventRadioAccessTechnologyCDMAEVDORevB = 8,
  DDLogEventRadioAccessTechnologyEHRPD = 9,
  DDLogEventRadioAccessTechnologyLTE = 10,
  DDLogEventRadioAccessTechnologyUnknown = 11,
};

typedef SWIFT_ENUM(NSInteger, DDLogEventReachability, open) {
  DDLogEventReachabilityYes = 0,
  DDLogEventReachabilityMaybe = 1,
  DDLogEventReachabilityNo = 2,
};

typedef SWIFT_ENUM(NSInteger, DDLogEventStatus, open) {
  DDLogEventStatusDebug = 0,
  DDLogEventStatusInfo = 1,
  DDLogEventStatusNotice = 2,
  DDLogEventStatusWarn = 3,
  DDLogEventStatusError = 4,
  DDLogEventStatusCritical = 5,
  DDLogEventStatusEmergency = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc18DDLogEventUserInfo")
@interface DDLogEventUserInfo : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull extraInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDLogLevel, open) {
  DDLogLevelDebug = 0,
  DDLogLevelInfo = 1,
  DDLogLevelNotice = 2,
  DDLogLevelWarn = 3,
  DDLogLevelError = 4,
  DDLogLevelCritical = 5,
};

@class NSError;
@class DDLoggerConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc8DDLogger")
@interface DDLogger : NSObject
- (void)debug:(NSString * _Nonnull)message;
- (void)debug:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)debug:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message;
- (void)info:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)info:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message;
- (void)notice:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)notice:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message;
- (void)warn:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)warn:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message;
- (void)error:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)error:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message;
- (void)critical:(NSString * _Nonnull)message attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)critical:(NSString * _Nonnull)message error:(NSError * _Nonnull)error attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (void)addTagWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)removeTagWithKey:(NSString * _Nonnull)key;
- (void)addWithTag:(NSString * _Nonnull)tag;
- (void)removeWithTag:(NSString * _Nonnull)tag;
+ (DDLogger * _Nonnull)createWith:(DDLoggerConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDLoggerConfiguration")
@interface DDLoggerConfiguration : NSObject
/// The service name  (default value is set to application bundle identifier)
@property (nonatomic, copy) NSString * _Nullable service;
/// The logger custom name (default value is set to main bundle identifier)
@property (nonatomic, copy) NSString * _Nullable name;
/// Enriches logs with network connection info.
/// This means: reachability status, connection type, mobile carrier name and many more will be added to each log.
/// For full list of network info attributes see <code>NetworkConnectionInfo</code> and <code>CarrierInfo</code>.
/// <code>false</code> by default
@property (nonatomic) BOOL networkInfoEnabled;
/// Enables the logs integration with RUM.
/// If enabled all the logs will be enriched with the current RUM View information and
/// it will be possible to see all the logs sent during a specific View lifespan in the RUM Explorer.
/// <code>true</code> by default
@property (nonatomic) BOOL bundleWithRumEnabled;
/// Enables the logs integration with active span API from Tracing.
/// If enabled all the logs will be bundled with the <code>DatadogTracer.shared().activeSpan</code> trace and
/// it will be possible to see all the logs sent during that specific trace.
/// <code>true</code> by default
@property (nonatomic) BOOL bundleWithTraceEnabled;
/// Sets the sampling rate for logging.
/// The sampling rate must be a value between <code>0</code> and <code>100</code>. A value of <code>0</code> means no logs will be processed, <code>100</code>
/// means all logs will be processed.
/// By default sampling is disabled, meaning that all logs are being processed).
@property (nonatomic) float remoteSampleRate;
/// Enables  logs to be printed to debugger console.
/// <code>false</code> by default.
@property (nonatomic) BOOL printLogsToConsole;
/// Set the minim log level reported to Datadog servers.
/// Any log with a level equal or above the threshold will be sent.
/// Note: this setting doesn’t impact logs printed to the console if <code>printLogsToConsole(_:)</code>
/// is used - all logs will be printed, no matter of their level.
/// <code>DDLogLevel.debug</code> by default
@property (nonatomic) enum DDLogLevel remoteLogThreshold;
/// Creates a Logger Configuration.
/// \param service The service name  (default value is set to application bundle identifier)
///
/// \param name The logger custom name (default value is set to main bundle identifier)
///
/// \param networkInfoEnabled Enriches logs with network connection info. <code>false</code> by default.
///
/// \param bundleWithRumEnabled Enables the logs integration with RUM. <code>true</code> by default.
///
/// \param bundleWithTraceEnabled Enables the logs integration with active span API from Tracing. <code>true</code> by default
///
/// \param remoteSampleRate The sample rate for remote logging. <em>When set to <code>0</code>, no log entries will be sent to Datadog servers.</em>
///
/// \param remoteLogThreshold Set the minimum log level reported to Datadog servers. .debug by default.
///
/// \param printLogsToConsole Format to use when printing logs to console - either <code>.short</code> or <code>.json</code>.
///
- (nonnull instancetype)initWithService:(NSString * _Nullable)service name:(NSString * _Nullable)name networkInfoEnabled:(BOOL)networkInfoEnabled bundleWithRumEnabled:(BOOL)bundleWithRumEnabled bundleWithTraceEnabled:(BOOL)bundleWithTraceEnabled remoteSampleRate:(float)remoteSampleRate remoteLogThreshold:(enum DDLogLevel)remoteLogThreshold printLogsToConsole:(BOOL)printLogsToConsole OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDLogsConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc6DDLogs")
@interface DDLogs : NSObject
+ (void)enableWith:(DDLogsConfiguration * _Nonnull)configuration;
+ (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
+ (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

SWIFT_CLASS("_TtC11DatadogObjc19DDLogsConfiguration")
@interface DDLogsConfiguration : NSObject
/// Overrides the custom server endpoint where Logs are sent.
@property (nonatomic, copy) NSURL * _Nullable customEndpoint;
/// Creates a Logs configuration object.
/// \param customEndpoint Overrides the custom server endpoint where Logs are sent.
///
- (nonnull instancetype)initWithCustomEndpoint:(NSURL * _Nullable)customEndpoint OBJC_DESIGNATED_INITIALIZER;
/// Sets the custom mapper for <code>DDLogEvent</code>. This can be used to modify logs before they are send to Datadog.
/// The implementation should obtain a mutable version of the <code>DDLogEvent</code>, modify it and return it. Returning <code>nil</code> will result
/// with dropping the Log event entirely, so it won’t be send to Datadog.
- (void)setEventMapper:(DDLogEvent * _Nullable (^ _Nonnull)(DDLogEvent * _Nonnull))mapper;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTracingHeaderType;

SWIFT_CLASS("_TtC11DatadogObjc22DDNSURLSessionDelegate") SWIFT_DEPRECATED_MSG("Use `URLSessionInstrumentation.enable(with:)` instead.")
@interface DDNSURLSessionDelegate : NSObject <NSURLSessionDataDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAdditionalFirstPartyHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)additionalFirstPartyHostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAdditionalFirstPartyHosts:(NSSet<NSString *> * _Nonnull)additionalFirstPartyHosts;
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDOTelHTTPHeadersWriter") SWIFT_DEPRECATED_MSG("", "_TtC11DatadogObjc21DDB3HTTPHeadersWriter")
@interface DDOTelHTTPHeadersWriter : DDB3HTTPHeadersWriter
- (nonnull instancetype)initWithSampleRate:(float)sampleRate injectEncoding:(enum DDInjectEncoding)injectEncoding OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.", "DDB3HTTPHeadersWriter");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy injectEncoding:(enum DDInjectEncoding)injectEncoding traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
@end

@class DDRUMConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc5DDRUM")
@interface DDRUM : NSObject
+ (void)enableWith:(DDRUMConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11DatadogObjc11DDRUMAction")
@interface DDRUMAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// Initializes the RUM Action description.
/// \param name the RUM Action name, appearing as <code>ACTION NAME</code> in RUM Explorer.
///
/// \param attributes additional attributes to associate with the RUM Action.
///
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventDD;
@class DDRUMActionEventAccount;
@class DDRUMActionEventAction;
@class DDRUMActionEventApplication;
@class DDRUMActionEventRUMCITest;
@class DDRUMActionEventRUMConnectivity;
@class DDRUMActionEventContainer;
@class DDRUMActionEventRUMEventAttributes;
@class DDRUMActionEventRUMDevice;
@class DDRUMActionEventDisplay;
@class DDRUMActionEventRUMOperatingSystem;
@class DDRUMActionEventSession;
enum DDRUMActionEventSource : NSInteger;
@class DDRUMActionEventRUMSyntheticsTest;
@class DDRUMActionEventRUMUser;
@class DDRUMActionEventView;

SWIFT_CLASS("_TtC11DatadogObjc16DDRUMActionEvent")
@interface DDRUMActionEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMActionEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMActionEventAction * _Nonnull action;
@property (nonatomic, readonly, strong) DDRUMActionEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMActionEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMActionEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMActionEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMActionEventSource source;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMActionEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMActionEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventAccount")
@interface DDRUMActionEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventActionCrash;
@class DDRUMActionEventActionError;
@class DDRUMActionEventActionFrustration;
@class DDRUMActionEventActionLongTask;
@class DDRUMActionEventActionResource;
@class DDRUMActionEventActionTarget;
enum DDRUMActionEventActionActionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMActionEventAction")
@interface DDRUMActionEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventActionCrash * _Nullable crash;
@property (nonatomic, readonly, strong) DDRUMActionEventActionError * _Nullable error;
@property (nonatomic, readonly, strong) DDRUMActionEventActionFrustration * _Nullable frustration;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly, strong) DDRUMActionEventActionLongTask * _Nullable longTask;
@property (nonatomic, readonly, strong) DDRUMActionEventActionResource * _Nullable resource;
@property (nonatomic, readonly, strong) DDRUMActionEventActionTarget * _Nullable target;
@property (nonatomic, readonly) enum DDRUMActionEventActionActionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventActionActionType, open) {
  DDRUMActionEventActionActionTypeCustom = 0,
  DDRUMActionEventActionActionTypeClick = 1,
  DDRUMActionEventActionActionTypeTap = 2,
  DDRUMActionEventActionActionTypeScroll = 3,
  DDRUMActionEventActionActionTypeSwipe = 4,
  DDRUMActionEventActionActionTypeApplicationStart = 5,
  DDRUMActionEventActionActionTypeBack = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionCrash")
@interface DDRUMActionEventActionCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventActionError")
@interface DDRUMActionEventActionError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMActionEventActionFrustration")
@interface DDRUMActionEventActionFrustration : NSObject
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventActionFrustrationFrustrationType, open) {
  DDRUMActionEventActionFrustrationFrustrationTypeRageClick = 0,
  DDRUMActionEventActionFrustrationFrustrationTypeDeadClick = 1,
  DDRUMActionEventActionFrustrationFrustrationTypeErrorClick = 2,
  DDRUMActionEventActionFrustrationFrustrationTypeRageTap = 3,
  DDRUMActionEventActionFrustrationFrustrationTypeErrorTap = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionLongTask")
@interface DDRUMActionEventActionLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventActionResource")
@interface DDRUMActionEventActionResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMActionEventActionTarget")
@interface DDRUMActionEventActionTarget : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMActionEventApplication")
@interface DDRUMActionEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventContainerSource : NSInteger;
@class DDRUMActionEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventContainer")
@interface DDRUMActionEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMActionEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMActionEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventContainerSource, open) {
  DDRUMActionEventContainerSourceAndroid = 0,
  DDRUMActionEventContainerSourceIos = 1,
  DDRUMActionEventContainerSourceBrowser = 2,
  DDRUMActionEventContainerSourceFlutter = 3,
  DDRUMActionEventContainerSourceReactNative = 4,
  DDRUMActionEventContainerSourceRoku = 5,
  DDRUMActionEventContainerSourceUnity = 6,
  DDRUMActionEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMActionEventContainerView")
@interface DDRUMActionEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventDDAction;
@class DDRUMActionEventDDConfiguration;
@class DDRUMActionEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMActionEventDD")
@interface DDRUMActionEventDD : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDDAction * _Nullable action;
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMActionEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMActionEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventDDActionNameSource : NSInteger;
@class DDRUMActionEventDDActionPosition;
@class DDRUMActionEventDDActionTarget;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMActionEventDDAction")
@interface DDRUMActionEventDDAction : NSObject
@property (nonatomic) enum DDRUMActionEventDDActionNameSource nameSource;
@property (nonatomic, readonly, strong) DDRUMActionEventDDActionPosition * _Nullable position;
@property (nonatomic, readonly, strong) DDRUMActionEventDDActionTarget * _Nullable target;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventDDActionNameSource, open) {
  DDRUMActionEventDDActionNameSourceNone = 0,
  DDRUMActionEventDDActionNameSourceCustomAttribute = 1,
  DDRUMActionEventDDActionNameSourceMaskPlaceholder = 2,
  DDRUMActionEventDDActionNameSourceStandardAttribute = 3,
  DDRUMActionEventDDActionNameSourceTextContent = 4,
  DDRUMActionEventDDActionNameSourceMaskDisallowed = 5,
  DDRUMActionEventDDActionNameSourceBlank = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMActionEventDDActionPosition")
@interface DDRUMActionEventDDActionPosition : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull x;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull y;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMActionEventDDActionTarget")
@interface DDRUMActionEventDDActionTarget : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable height;
@property (nonatomic, readonly, copy) NSString * _Nullable selector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventDDConfiguration")
@interface DDRUMActionEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventDDSessionPlan : NSInteger;
enum DDRUMActionEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventDDSession")
@interface DDRUMActionEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMActionEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMActionEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventDDSessionPlan, open) {
  DDRUMActionEventDDSessionPlanNone = 0,
  DDRUMActionEventDDSessionPlanPlan1 = 1,
  DDRUMActionEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventDDSessionRUMSessionPrecondition, open) {
  DDRUMActionEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMActionEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMActionEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMActionEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMActionEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMActionEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMActionEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMActionEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMActionEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventDisplay")
@interface DDRUMActionEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventDisplayViewport")
@interface DDRUMActionEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventRUMCITest")
@interface DDRUMActionEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMActionEventRUMConnectivityCellular;
enum DDRUMActionEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMActionEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc31DDRUMActionEventRUMConnectivity")
@interface DDRUMActionEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMActionEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMActionEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMActionEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc39DDRUMActionEventRUMConnectivityCellular")
@interface DDRUMActionEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityEffectiveType, open) {
  DDRUMActionEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMActionEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMActionEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMActionEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMActionEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityInterfaces, open) {
  DDRUMActionEventRUMConnectivityInterfacesNone = 0,
  DDRUMActionEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMActionEventRUMConnectivityInterfacesCellular = 2,
  DDRUMActionEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMActionEventRUMConnectivityInterfacesWifi = 4,
  DDRUMActionEventRUMConnectivityInterfacesWimax = 5,
  DDRUMActionEventRUMConnectivityInterfacesMixed = 6,
  DDRUMActionEventRUMConnectivityInterfacesOther = 7,
  DDRUMActionEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMActionEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMConnectivityStatus, open) {
  DDRUMActionEventRUMConnectivityStatusConnected = 0,
  DDRUMActionEventRUMConnectivityStatusNotConnected = 1,
  DDRUMActionEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMActionEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMActionEventRUMDevice")
@interface DDRUMActionEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMActionEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventRUMDeviceRUMDeviceType, open) {
  DDRUMActionEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMActionEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMActionEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMActionEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMActionEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMActionEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMActionEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMActionEventRUMEventAttributes")
@interface DDRUMActionEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMActionEventRUMOperatingSystem")
@interface DDRUMActionEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMActionEventRUMSyntheticsTest")
@interface DDRUMActionEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventRUMUser")
@interface DDRUMActionEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMActionEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMActionEventSession")
@interface DDRUMActionEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMActionEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventSessionRUMSessionType, open) {
  DDRUMActionEventSessionRUMSessionTypeUser = 0,
  DDRUMActionEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMActionEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMActionEventSource, open) {
  DDRUMActionEventSourceNone = 0,
  DDRUMActionEventSourceAndroid = 1,
  DDRUMActionEventSourceIos = 2,
  DDRUMActionEventSourceBrowser = 3,
  DDRUMActionEventSourceFlutter = 4,
  DDRUMActionEventSourceReactNative = 5,
  DDRUMActionEventSourceRoku = 6,
  DDRUMActionEventSourceUnity = 7,
  DDRUMActionEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc20DDRUMActionEventView")
@interface DDRUMActionEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable inForeground;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMActionType, open) {
  DDRUMActionTypeTap = 0,
  DDRUMActionTypeScroll = 1,
  DDRUMActionTypeSwipe = 2,
  DDRUMActionTypeCustom = 3,
};

@class DDRUMURLSessionTracking;
enum DDRUMVitalsFrequency : NSInteger;
@class DDRUMViewEvent;
@class DDRUMResourceEvent;
@class DDRUMErrorEvent;
@class DDRUMLongTaskEvent;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMConfiguration")
@interface DDRUMConfiguration : NSObject
- (nonnull instancetype)initWithApplicationID:(NSString * _Nonnull)applicationID OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull applicationID;
@property (nonatomic) float sessionSampleRate;
@property (nonatomic) float telemetrySampleRate;
@property (nonatomic, strong) id <DDUIKitRUMViewsPredicate> _Nullable uiKitViewsPredicate;
@property (nonatomic, strong) id <DDUIKitRUMActionsPredicate> _Nullable uiKitActionsPredicate;
- (void)setURLSessionTracking:(DDRUMURLSessionTracking * _Nonnull)tracking;
@property (nonatomic) BOOL trackFrustrations;
@property (nonatomic) BOOL trackBackgroundEvents;
@property (nonatomic) BOOL trackWatchdogTerminations;
@property (nonatomic) NSTimeInterval longTaskThreshold;
@property (nonatomic) NSTimeInterval appHangThreshold;
@property (nonatomic) enum DDRUMVitalsFrequency vitalsUpdateFrequency;
- (void)setViewEventMapper:(DDRUMViewEvent * _Nonnull (^ _Nonnull)(DDRUMViewEvent * _Nonnull))mapper;
- (void)setResourceEventMapper:(DDRUMResourceEvent * _Nullable (^ _Nonnull)(DDRUMResourceEvent * _Nonnull))mapper;
- (void)setActionEventMapper:(DDRUMActionEvent * _Nullable (^ _Nonnull)(DDRUMActionEvent * _Nonnull))mapper;
- (void)setErrorEventMapper:(DDRUMErrorEvent * _Nullable (^ _Nonnull)(DDRUMErrorEvent * _Nonnull))mapper;
- (void)setLongTaskEventMapper:(DDRUMLongTaskEvent * _Nullable (^ _Nonnull)(DDRUMLongTaskEvent * _Nonnull))mapper;
@property (nonatomic, copy) void (^ _Nullable onSessionStart)(NSString * _Nonnull, BOOL);
@property (nonatomic, copy) NSURL * _Nullable customEndpoint;
@property (nonatomic) BOOL trackAnonymousUser;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventDD;
@class DDRUMErrorEventAccount;
@class DDRUMErrorEventAction;
@class DDRUMErrorEventApplication;
@class DDRUMErrorEventRUMCITest;
@class DDRUMErrorEventRUMConnectivity;
@class DDRUMErrorEventContainer;
@class DDRUMErrorEventRUMEventAttributes;
@class DDRUMErrorEventRUMDevice;
@class DDRUMErrorEventDisplay;
@class DDRUMErrorEventError;
@class DDRUMErrorEventFeatureFlags;
@class DDRUMErrorEventFreeze;
@class DDRUMErrorEventRUMOperatingSystem;
@class DDRUMErrorEventSession;
enum DDRUMErrorEventSource : NSInteger;
@class DDRUMErrorEventRUMSyntheticsTest;
@class DDRUMErrorEventRUMUser;
@class DDRUMErrorEventView;

SWIFT_CLASS("_TtC11DatadogObjc15DDRUMErrorEvent")
@interface DDRUMErrorEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMErrorEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMErrorEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMErrorEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMErrorEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMErrorEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMErrorEventError * _Nonnull error;
@property (nonatomic, readonly, strong) DDRUMErrorEventFeatureFlags * _Nullable featureFlags;
@property (nonatomic, readonly, strong) DDRUMErrorEventFreeze * _Nullable freeze;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMErrorEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMErrorEventSource source;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMErrorEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventAccount")
@interface DDRUMErrorEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventActionRUMActionID;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMErrorEventAction")
@interface DDRUMErrorEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventActionRUMActionID * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMErrorEventActionRUMActionID")
@interface DDRUMErrorEventActionRUMActionID : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable string;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMErrorEventApplication")
@interface DDRUMErrorEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventContainerSource : NSInteger;
@class DDRUMErrorEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventContainer")
@interface DDRUMErrorEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMErrorEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventContainerSource, open) {
  DDRUMErrorEventContainerSourceAndroid = 0,
  DDRUMErrorEventContainerSourceIos = 1,
  DDRUMErrorEventContainerSourceBrowser = 2,
  DDRUMErrorEventContainerSourceFlutter = 3,
  DDRUMErrorEventContainerSourceReactNative = 4,
  DDRUMErrorEventContainerSourceRoku = 5,
  DDRUMErrorEventContainerSourceUnity = 6,
  DDRUMErrorEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMErrorEventContainerView")
@interface DDRUMErrorEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventDDConfiguration;
@class DDRUMErrorEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc17DDRUMErrorEventDD")
@interface DDRUMErrorEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMErrorEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMErrorEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventDDConfiguration")
@interface DDRUMErrorEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventDDSessionPlan : NSInteger;
enum DDRUMErrorEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventDDSession")
@interface DDRUMErrorEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMErrorEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventDDSessionPlan, open) {
  DDRUMErrorEventDDSessionPlanNone = 0,
  DDRUMErrorEventDDSessionPlanPlan1 = 1,
  DDRUMErrorEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventDDSessionRUMSessionPrecondition, open) {
  DDRUMErrorEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMErrorEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMErrorEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMErrorEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMErrorEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMErrorEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMErrorEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMErrorEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMErrorEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventDisplay")
@interface DDRUMErrorEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventDisplayViewport")
@interface DDRUMErrorEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventErrorBinaryImages;
enum DDRUMErrorEventErrorCategory : NSInteger;
@class DDRUMErrorEventErrorCauses;
@class DDRUMErrorEventErrorCSP;
enum DDRUMErrorEventErrorHandling : NSInteger;
@class DDRUMErrorEventErrorMeta;
@class DDRUMErrorEventErrorResource;
enum DDRUMErrorEventErrorSource : NSInteger;
enum DDRUMErrorEventErrorSourceType : NSInteger;
@class DDRUMErrorEventErrorThreads;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMErrorEventError")
@interface DDRUMErrorEventError : NSObject
@property (nonatomic, readonly, copy) NSArray<DDRUMErrorEventErrorBinaryImages *> * _Nullable binaryImages;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorCategory category;
@property (nonatomic, copy) NSArray<DDRUMErrorEventErrorCauses *> * _Nullable causes;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorCSP * _Nullable csp;
@property (nonatomic, copy) NSString * _Nullable fingerprint;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorHandling handling;
@property (nonatomic, readonly, copy) NSString * _Nullable handlingStack;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isCrash;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorMeta * _Nullable meta;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResource * _Nullable resource;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorSource source;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorSourceType sourceType;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, readonly, copy) NSArray<DDRUMErrorEventErrorThreads *> * _Nullable threads;
@property (nonatomic, readonly, strong) NSNumber * _Nullable timeSinceAppStart;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, readonly, strong) NSNumber * _Nullable wasTruncated;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMErrorEventErrorBinaryImages")
@interface DDRUMErrorEventErrorBinaryImages : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable arch;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull isSystem;
@property (nonatomic, readonly, copy) NSString * _Nullable loadAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable maxAddress;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull uuid;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorCSPDisposition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMErrorEventErrorCSP")
@interface DDRUMErrorEventErrorCSP : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventErrorCSPDisposition disposition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorCSPDisposition, open) {
  DDRUMErrorEventErrorCSPDispositionNone = 0,
  DDRUMErrorEventErrorCSPDispositionEnforce = 1,
  DDRUMErrorEventErrorCSPDispositionReport = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorCategory, open) {
  DDRUMErrorEventErrorCategoryNone = 0,
  DDRUMErrorEventErrorCategoryANR = 1,
  DDRUMErrorEventErrorCategoryAppHang = 2,
  DDRUMErrorEventErrorCategoryException = 3,
  DDRUMErrorEventErrorCategoryWatchdogTermination = 4,
  DDRUMErrorEventErrorCategoryMemoryWarning = 5,
};

enum DDRUMErrorEventErrorCausesSource : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMErrorEventErrorCauses")
@interface DDRUMErrorEventErrorCauses : NSObject
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorCausesSource source;
@property (nonatomic, copy) NSString * _Nullable stack;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorCausesSource, open) {
  DDRUMErrorEventErrorCausesSourceNetwork = 0,
  DDRUMErrorEventErrorCausesSourceSource = 1,
  DDRUMErrorEventErrorCausesSourceConsole = 2,
  DDRUMErrorEventErrorCausesSourceLogger = 3,
  DDRUMErrorEventErrorCausesSourceAgent = 4,
  DDRUMErrorEventErrorCausesSourceWebview = 5,
  DDRUMErrorEventErrorCausesSourceCustom = 6,
  DDRUMErrorEventErrorCausesSourceReport = 7,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorHandling, open) {
  DDRUMErrorEventErrorHandlingNone = 0,
  DDRUMErrorEventErrorHandlingHandled = 1,
  DDRUMErrorEventErrorHandlingUnhandled = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventErrorMeta")
@interface DDRUMErrorEventErrorMeta : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable codeType;
@property (nonatomic, readonly, copy) NSString * _Nullable exceptionCodes;
@property (nonatomic, readonly, copy) NSString * _Nullable exceptionType;
@property (nonatomic, readonly, copy) NSString * _Nullable incidentIdentifier;
@property (nonatomic, readonly, copy) NSString * _Nullable parentProcess;
@property (nonatomic, readonly, copy) NSString * _Nullable path;
@property (nonatomic, readonly, copy) NSString * _Nullable process;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceRUMMethod : NSInteger;
@class DDRUMErrorEventErrorResourceProvider;

SWIFT_CLASS("_TtC11DatadogObjc28DDRUMErrorEventErrorResource")
@interface DDRUMErrorEventErrorResource : NSObject
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceRUMMethod method;
@property (nonatomic, readonly, strong) DDRUMErrorEventErrorResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull statusCode;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventErrorResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc36DDRUMErrorEventErrorResourceProvider")
@interface DDRUMErrorEventErrorResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMErrorEventErrorResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceProviderProviderType, open) {
  DDRUMErrorEventErrorResourceProviderProviderTypeNone = 0,
  DDRUMErrorEventErrorResourceProviderProviderTypeAd = 1,
  DDRUMErrorEventErrorResourceProviderProviderTypeAdvertising = 2,
  DDRUMErrorEventErrorResourceProviderProviderTypeAnalytics = 3,
  DDRUMErrorEventErrorResourceProviderProviderTypeCdn = 4,
  DDRUMErrorEventErrorResourceProviderProviderTypeContent = 5,
  DDRUMErrorEventErrorResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMErrorEventErrorResourceProviderProviderTypeFirstParty = 7,
  DDRUMErrorEventErrorResourceProviderProviderTypeHosting = 8,
  DDRUMErrorEventErrorResourceProviderProviderTypeMarketing = 9,
  DDRUMErrorEventErrorResourceProviderProviderTypeOther = 10,
  DDRUMErrorEventErrorResourceProviderProviderTypeSocial = 11,
  DDRUMErrorEventErrorResourceProviderProviderTypeTagManager = 12,
  DDRUMErrorEventErrorResourceProviderProviderTypeUtility = 13,
  DDRUMErrorEventErrorResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorResourceRUMMethod, open) {
  DDRUMErrorEventErrorResourceRUMMethodPost = 0,
  DDRUMErrorEventErrorResourceRUMMethodGet = 1,
  DDRUMErrorEventErrorResourceRUMMethodHead = 2,
  DDRUMErrorEventErrorResourceRUMMethodPut = 3,
  DDRUMErrorEventErrorResourceRUMMethodDelete = 4,
  DDRUMErrorEventErrorResourceRUMMethodPatch = 5,
  DDRUMErrorEventErrorResourceRUMMethodTrace = 6,
  DDRUMErrorEventErrorResourceRUMMethodOptions = 7,
  DDRUMErrorEventErrorResourceRUMMethodConnect = 8,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorSource, open) {
  DDRUMErrorEventErrorSourceNetwork = 0,
  DDRUMErrorEventErrorSourceSource = 1,
  DDRUMErrorEventErrorSourceConsole = 2,
  DDRUMErrorEventErrorSourceLogger = 3,
  DDRUMErrorEventErrorSourceAgent = 4,
  DDRUMErrorEventErrorSourceWebview = 5,
  DDRUMErrorEventErrorSourceCustom = 6,
  DDRUMErrorEventErrorSourceReport = 7,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventErrorSourceType, open) {
  DDRUMErrorEventErrorSourceTypeNone = 0,
  DDRUMErrorEventErrorSourceTypeAndroid = 1,
  DDRUMErrorEventErrorSourceTypeBrowser = 2,
  DDRUMErrorEventErrorSourceTypeIos = 3,
  DDRUMErrorEventErrorSourceTypeReactNative = 4,
  DDRUMErrorEventErrorSourceTypeFlutter = 5,
  DDRUMErrorEventErrorSourceTypeRoku = 6,
  DDRUMErrorEventErrorSourceTypeNdk = 7,
  DDRUMErrorEventErrorSourceTypeIosIl2cpp = 8,
  DDRUMErrorEventErrorSourceTypeNdkIl2cpp = 9,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMErrorEventErrorThreads")
@interface DDRUMErrorEventErrorThreads : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull crashed;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull stack;
@property (nonatomic, readonly, copy) NSString * _Nullable state;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMErrorEventFeatureFlags")
@interface DDRUMErrorEventFeatureFlags : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull featureFlagsInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMErrorEventFreeze")
@interface DDRUMErrorEventFreeze : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventRUMCITest")
@interface DDRUMErrorEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMErrorEventRUMConnectivityCellular;
enum DDRUMErrorEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMErrorEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc30DDRUMErrorEventRUMConnectivity")
@interface DDRUMErrorEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMErrorEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc38DDRUMErrorEventRUMConnectivityCellular")
@interface DDRUMErrorEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityEffectiveType, open) {
  DDRUMErrorEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMErrorEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMErrorEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMErrorEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMErrorEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityInterfaces, open) {
  DDRUMErrorEventRUMConnectivityInterfacesNone = 0,
  DDRUMErrorEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMErrorEventRUMConnectivityInterfacesCellular = 2,
  DDRUMErrorEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMErrorEventRUMConnectivityInterfacesWifi = 4,
  DDRUMErrorEventRUMConnectivityInterfacesWimax = 5,
  DDRUMErrorEventRUMConnectivityInterfacesMixed = 6,
  DDRUMErrorEventRUMConnectivityInterfacesOther = 7,
  DDRUMErrorEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMErrorEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMConnectivityStatus, open) {
  DDRUMErrorEventRUMConnectivityStatusConnected = 0,
  DDRUMErrorEventRUMConnectivityStatusNotConnected = 1,
  DDRUMErrorEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMErrorEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMErrorEventRUMDevice")
@interface DDRUMErrorEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMErrorEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventRUMDeviceRUMDeviceType, open) {
  DDRUMErrorEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMErrorEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMErrorEventRUMEventAttributes")
@interface DDRUMErrorEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMErrorEventRUMOperatingSystem")
@interface DDRUMErrorEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMErrorEventRUMSyntheticsTest")
@interface DDRUMErrorEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventRUMUser")
@interface DDRUMErrorEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMErrorEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMErrorEventSession")
@interface DDRUMErrorEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMErrorEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventSessionRUMSessionType, open) {
  DDRUMErrorEventSessionRUMSessionTypeUser = 0,
  DDRUMErrorEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMErrorEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMErrorEventSource, open) {
  DDRUMErrorEventSourceNone = 0,
  DDRUMErrorEventSourceAndroid = 1,
  DDRUMErrorEventSourceIos = 2,
  DDRUMErrorEventSourceBrowser = 3,
  DDRUMErrorEventSourceFlutter = 4,
  DDRUMErrorEventSourceReactNative = 5,
  DDRUMErrorEventSourceRoku = 6,
  DDRUMErrorEventSourceUnity = 7,
  DDRUMErrorEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc19DDRUMErrorEventView")
@interface DDRUMErrorEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable inForeground;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMErrorSource, open) {
/// Error originated in the source code.
  DDRUMErrorSourceSource = 0,
/// Error originated in the network layer.
  DDRUMErrorSourceNetwork = 1,
/// Error originated in a webview.
  DDRUMErrorSourceWebview = 2,
/// Error originated in a web console (used by bridges).
  DDRUMErrorSourceConsole = 3,
/// Custom error source.
  DDRUMErrorSourceCustom = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMFirstPartyHostsTracing")
@interface DDRUMFirstPartyHostsTracing : NSObject
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventDD;
@class DDRUMLongTaskEventAccount;
@class DDRUMLongTaskEventAction;
@class DDRUMLongTaskEventApplication;
@class DDRUMLongTaskEventRUMCITest;
@class DDRUMLongTaskEventRUMConnectivity;
@class DDRUMLongTaskEventContainer;
@class DDRUMLongTaskEventRUMEventAttributes;
@class DDRUMLongTaskEventRUMDevice;
@class DDRUMLongTaskEventDisplay;
@class DDRUMLongTaskEventLongTask;
@class DDRUMLongTaskEventRUMOperatingSystem;
@class DDRUMLongTaskEventSession;
enum DDRUMLongTaskEventSource : NSInteger;
@class DDRUMLongTaskEventRUMSyntheticsTest;
@class DDRUMLongTaskEventRUMUser;
@class DDRUMLongTaskEventView;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMLongTaskEvent")
@interface DDRUMLongTaskEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventLongTask * _Nonnull longTask;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMLongTaskEventSource source;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventAccount")
@interface DDRUMLongTaskEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventActionRUMActionID;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMLongTaskEventAction")
@interface DDRUMLongTaskEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventActionRUMActionID * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMLongTaskEventActionRUMActionID")
@interface DDRUMLongTaskEventActionRUMActionID : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable string;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMLongTaskEventApplication")
@interface DDRUMLongTaskEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventContainerSource : NSInteger;
@class DDRUMLongTaskEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventContainer")
@interface DDRUMLongTaskEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMLongTaskEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventContainerSource, open) {
  DDRUMLongTaskEventContainerSourceAndroid = 0,
  DDRUMLongTaskEventContainerSourceIos = 1,
  DDRUMLongTaskEventContainerSourceBrowser = 2,
  DDRUMLongTaskEventContainerSourceFlutter = 3,
  DDRUMLongTaskEventContainerSourceReactNative = 4,
  DDRUMLongTaskEventContainerSourceRoku = 5,
  DDRUMLongTaskEventContainerSourceUnity = 6,
  DDRUMLongTaskEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMLongTaskEventContainerView")
@interface DDRUMLongTaskEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventDDConfiguration;
@class DDRUMLongTaskEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMLongTaskEventDD")
@interface DDRUMLongTaskEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable discarded;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventDDConfiguration")
@interface DDRUMLongTaskEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventDDSessionPlan : NSInteger;
enum DDRUMLongTaskEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventDDSession")
@interface DDRUMLongTaskEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMLongTaskEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMLongTaskEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventDDSessionPlan, open) {
  DDRUMLongTaskEventDDSessionPlanNone = 0,
  DDRUMLongTaskEventDDSessionPlanPlan1 = 1,
  DDRUMLongTaskEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventDDSessionRUMSessionPrecondition, open) {
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMLongTaskEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMLongTaskEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventDisplay")
@interface DDRUMLongTaskEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventDisplayViewport")
@interface DDRUMLongTaskEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventLongTaskEntryType : NSInteger;
@class DDRUMLongTaskEventLongTaskScripts;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMLongTaskEventLongTask")
@interface DDRUMLongTaskEventLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable blockingDuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly) enum DDRUMLongTaskEventLongTaskEntryType entryType;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstUiEventTimestamp;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isFrozenFrame;
@property (nonatomic, readonly, strong) NSNumber * _Nullable renderStart;
@property (nonatomic, readonly, copy) NSArray<DDRUMLongTaskEventLongTaskScripts *> * _Nullable scripts;
@property (nonatomic, readonly, strong) NSNumber * _Nullable startTime;
@property (nonatomic, readonly, strong) NSNumber * _Nullable styleAndLayoutStart;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventLongTaskEntryType, open) {
  DDRUMLongTaskEventLongTaskEntryTypeNone = 0,
  DDRUMLongTaskEventLongTaskEntryTypeLongTask = 1,
  DDRUMLongTaskEventLongTaskEntryTypeLongAnimationFrame = 2,
};

enum DDRUMLongTaskEventLongTaskScriptsInvokerType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventLongTaskScripts")
@interface DDRUMLongTaskEventLongTaskScripts : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable duration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable executionStart;
@property (nonatomic, readonly, strong) NSNumber * _Nullable forcedStyleAndLayoutDuration;
@property (nonatomic, readonly, copy) NSString * _Nullable invoker;
@property (nonatomic, readonly) enum DDRUMLongTaskEventLongTaskScriptsInvokerType invokerType;
@property (nonatomic, readonly, strong) NSNumber * _Nullable pauseDuration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable sourceCharPosition;
@property (nonatomic, readonly, copy) NSString * _Nullable sourceFunctionName;
@property (nonatomic, readonly, copy) NSString * _Nullable sourceUrl;
@property (nonatomic, readonly, strong) NSNumber * _Nullable startTime;
@property (nonatomic, readonly, copy) NSString * _Nullable windowAttribution;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventLongTaskScriptsInvokerType, open) {
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeNone = 0,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeUserCallback = 1,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeEventListener = 2,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeResolvePromise = 3,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeRejectPromise = 4,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeClassicScript = 5,
  DDRUMLongTaskEventLongTaskScriptsInvokerTypeModuleScript = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventRUMCITest")
@interface DDRUMLongTaskEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMLongTaskEventRUMConnectivityCellular;
enum DDRUMLongTaskEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMLongTaskEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMLongTaskEventRUMConnectivity")
@interface DDRUMLongTaskEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMLongTaskEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMLongTaskEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMLongTaskEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc41DDRUMLongTaskEventRUMConnectivityCellular")
@interface DDRUMLongTaskEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMConnectivityEffectiveType, open) {
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMLongTaskEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMConnectivityInterfaces, open) {
  DDRUMLongTaskEventRUMConnectivityInterfacesNone = 0,
  DDRUMLongTaskEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMLongTaskEventRUMConnectivityInterfacesCellular = 2,
  DDRUMLongTaskEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMLongTaskEventRUMConnectivityInterfacesWifi = 4,
  DDRUMLongTaskEventRUMConnectivityInterfacesWimax = 5,
  DDRUMLongTaskEventRUMConnectivityInterfacesMixed = 6,
  DDRUMLongTaskEventRUMConnectivityInterfacesOther = 7,
  DDRUMLongTaskEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMLongTaskEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMConnectivityStatus, open) {
  DDRUMLongTaskEventRUMConnectivityStatusConnected = 0,
  DDRUMLongTaskEventRUMConnectivityStatusNotConnected = 1,
  DDRUMLongTaskEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMLongTaskEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMLongTaskEventRUMDevice")
@interface DDRUMLongTaskEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMLongTaskEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventRUMDeviceRUMDeviceType, open) {
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMLongTaskEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMLongTaskEventRUMEventAttributes")
@interface DDRUMLongTaskEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMLongTaskEventRUMOperatingSystem")
@interface DDRUMLongTaskEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMLongTaskEventRUMSyntheticsTest")
@interface DDRUMLongTaskEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventRUMUser")
@interface DDRUMLongTaskEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMLongTaskEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMLongTaskEventSession")
@interface DDRUMLongTaskEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMLongTaskEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventSessionRUMSessionType, open) {
  DDRUMLongTaskEventSessionRUMSessionTypeUser = 0,
  DDRUMLongTaskEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMLongTaskEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMLongTaskEventSource, open) {
  DDRUMLongTaskEventSourceNone = 0,
  DDRUMLongTaskEventSourceAndroid = 1,
  DDRUMLongTaskEventSourceIos = 2,
  DDRUMLongTaskEventSourceBrowser = 3,
  DDRUMLongTaskEventSourceFlutter = 4,
  DDRUMLongTaskEventSourceReactNative = 5,
  DDRUMLongTaskEventSourceRoku = 6,
  DDRUMLongTaskEventSourceUnity = 7,
  DDRUMLongTaskEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMLongTaskEventView")
@interface DDRUMLongTaskEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMMethod, open) {
  DDRUMMethodPost = 0,
  DDRUMMethodGet = 1,
  DDRUMMethodHead = 2,
  DDRUMMethodPut = 3,
  DDRUMMethodDelete = 4,
  DDRUMMethodPatch = 5,
  DDRUMMethodConnect = 6,
  DDRUMMethodTrace = 7,
  DDRUMMethodOptions = 8,
};

@class NSURLRequest;
@class NSURLSessionTaskMetrics;
@class NSURLResponse;
enum DDRUMResourceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc12DDRUMMonitor")
@interface DDRUMMonitor : NSObject
+ (DDRUMMonitor * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)currentSessionIDWithCompletion:(void (^ _Nonnull)(NSString * _Nullable))completion;
- (void)stopSession;
- (void)startViewWithViewController:(UIViewController * _Nonnull)viewController name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithViewController:(UIViewController * _Nonnull)viewController attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startViewWithKey:(NSString * _Nonnull)key name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopViewWithKey:(NSString * _Nonnull)key attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addTimingWithName:(NSString * _Nonnull)name;
- (void)addErrorWithMessage:(NSString * _Nonnull)message stack:(NSString * _Nullable)stack source:(enum DDRUMErrorSource)source attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addErrorWithError:(NSError * _Nonnull)error source:(enum DDRUMErrorSource)source attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceWithResourceKey:(NSString * _Nonnull)resourceKey request:(NSURLRequest * _Nonnull)request attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceWithResourceKey:(NSString * _Nonnull)resourceKey url:(NSURL * _Nonnull)url attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startResourceWithResourceKey:(NSString * _Nonnull)resourceKey httpMethod:(enum DDRUMMethod)httpMethod urlString:(NSString * _Nonnull)urlString attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addResourceMetricsWithResourceKey:(NSString * _Nonnull)resourceKey metrics:(NSURLSessionTaskMetrics * _Nonnull)metrics attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithResourceKey:(NSString * _Nonnull)resourceKey response:(NSURLResponse * _Nonnull)response size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithResourceKey:(NSString * _Nonnull)resourceKey statusCode:(NSNumber * _Nullable)statusCode kind:(enum DDRUMResourceType)kind size:(NSNumber * _Nullable)size attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey error:(NSError * _Nonnull)error response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopResourceWithErrorWithResourceKey:(NSString * _Nonnull)resourceKey message:(NSString * _Nonnull)message response:(NSURLResponse * _Nullable)response attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)startActionWithType:(enum DDRUMActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)stopActionWithType:(enum DDRUMActionType)type name:(NSString * _Nullable)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addActionWithType:(enum DDRUMActionType)type name:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)addAttributeForKey:(NSString * _Nonnull)key value:(id _Nonnull)value;
- (void)addAttributes:(NSDictionary<NSString *, id> * _Nonnull)attributes;
- (void)removeAttributeForKey:(NSString * _Nonnull)key;
- (void)removeAttributesForKeys:(NSArray<NSString *> * _Nonnull)keys;
- (void)addFeatureFlagEvaluationWithName:(NSString * _Nonnull)name value:(id _Nonnull)value;
@property (nonatomic) BOOL debug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventDD;
@class DDRUMResourceEventAccount;
@class DDRUMResourceEventAction;
@class DDRUMResourceEventApplication;
@class DDRUMResourceEventRUMCITest;
@class DDRUMResourceEventRUMConnectivity;
@class DDRUMResourceEventContainer;
@class DDRUMResourceEventRUMEventAttributes;
@class DDRUMResourceEventRUMDevice;
@class DDRUMResourceEventDisplay;
@class DDRUMResourceEventRUMOperatingSystem;
@class DDRUMResourceEventResource;
@class DDRUMResourceEventSession;
enum DDRUMResourceEventSource : NSInteger;
@class DDRUMResourceEventRUMSyntheticsTest;
@class DDRUMResourceEventRUMUser;
@class DDRUMResourceEventView;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMResourceEvent")
@interface DDRUMResourceEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMResourceEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMResourceEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDRUMResourceEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMResourceEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMResourceEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, strong) DDRUMResourceEventResource * _Nonnull resource;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMResourceEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMResourceEventSource source;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMResourceEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventAccount")
@interface DDRUMResourceEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventActionRUMActionID;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMResourceEventAction")
@interface DDRUMResourceEventAction : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventActionRUMActionID * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventActionRUMActionID")
@interface DDRUMResourceEventActionRUMActionID : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable string;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventApplication")
@interface DDRUMResourceEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventContainerSource : NSInteger;
@class DDRUMResourceEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventContainer")
@interface DDRUMResourceEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMResourceEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMResourceEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventContainerSource, open) {
  DDRUMResourceEventContainerSourceAndroid = 0,
  DDRUMResourceEventContainerSourceIos = 1,
  DDRUMResourceEventContainerSourceBrowser = 2,
  DDRUMResourceEventContainerSourceFlutter = 3,
  DDRUMResourceEventContainerSourceReactNative = 4,
  DDRUMResourceEventContainerSourceRoku = 5,
  DDRUMResourceEventContainerSourceUnity = 6,
  DDRUMResourceEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMResourceEventContainerView")
@interface DDRUMResourceEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventDDConfiguration;
@class DDRUMResourceEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMResourceEventDD")
@interface DDRUMResourceEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMResourceEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable discarded;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nullable rulePsr;
@property (nonatomic, readonly, strong) DDRUMResourceEventDDSession * _Nullable session;
@property (nonatomic, readonly, copy) NSString * _Nullable spanId;
@property (nonatomic, readonly, copy) NSString * _Nullable traceId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventDDConfiguration")
@interface DDRUMResourceEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventDDSessionPlan : NSInteger;
enum DDRUMResourceEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventDDSession")
@interface DDRUMResourceEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMResourceEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMResourceEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventDDSessionPlan, open) {
  DDRUMResourceEventDDSessionPlanNone = 0,
  DDRUMResourceEventDDSessionPlanPlan1 = 1,
  DDRUMResourceEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventDDSessionRUMSessionPrecondition, open) {
  DDRUMResourceEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMResourceEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMResourceEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMResourceEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMResourceEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMResourceEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMResourceEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMResourceEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMResourceEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventDisplay")
@interface DDRUMResourceEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventDisplayViewport")
@interface DDRUMResourceEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventRUMCITest")
@interface DDRUMResourceEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventRUMConnectivityCellular;
enum DDRUMResourceEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMResourceEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventRUMConnectivity")
@interface DDRUMResourceEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc41DDRUMResourceEventRUMConnectivityCellular")
@interface DDRUMResourceEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityEffectiveType, open) {
  DDRUMResourceEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMResourceEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMResourceEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMResourceEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMResourceEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityInterfaces, open) {
  DDRUMResourceEventRUMConnectivityInterfacesNone = 0,
  DDRUMResourceEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMResourceEventRUMConnectivityInterfacesCellular = 2,
  DDRUMResourceEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMResourceEventRUMConnectivityInterfacesWifi = 4,
  DDRUMResourceEventRUMConnectivityInterfacesWimax = 5,
  DDRUMResourceEventRUMConnectivityInterfacesMixed = 6,
  DDRUMResourceEventRUMConnectivityInterfacesOther = 7,
  DDRUMResourceEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMResourceEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMConnectivityStatus, open) {
  DDRUMResourceEventRUMConnectivityStatusConnected = 0,
  DDRUMResourceEventRUMConnectivityStatusNotConnected = 1,
  DDRUMResourceEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMResourceEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc27DDRUMResourceEventRUMDevice")
@interface DDRUMResourceEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMResourceEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventRUMDeviceRUMDeviceType, open) {
  DDRUMResourceEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMResourceEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMResourceEventRUMEventAttributes")
@interface DDRUMResourceEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc36DDRUMResourceEventRUMOperatingSystem")
@interface DDRUMResourceEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventRUMSyntheticsTest")
@interface DDRUMResourceEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventRUMUser")
@interface DDRUMResourceEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMResourceEventResourceConnect;
enum DDRUMResourceEventResourceDeliveryType : NSInteger;
@class DDRUMResourceEventResourceDNS;
@class DDRUMResourceEventResourceDownload;
@class DDRUMResourceEventResourceFirstByte;
@class DDRUMResourceEventResourceGraphql;
enum DDRUMResourceEventResourceRUMMethod : NSInteger;
@class DDRUMResourceEventResourceProvider;
@class DDRUMResourceEventResourceRedirect;
enum DDRUMResourceEventResourceRenderBlockingStatus : NSInteger;
@class DDRUMResourceEventResourceSSL;
enum DDRUMResourceEventResourceResourceType : NSInteger;
@class DDRUMResourceEventResourceWorker;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMResourceEventResource")
@interface DDRUMResourceEventResource : NSObject
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceConnect * _Nullable connect;
@property (nonatomic, readonly, strong) NSNumber * _Nullable decodedBodySize;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceDeliveryType deliveryType;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDNS * _Nullable dns;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceDownload * _Nullable download;
@property (nonatomic, readonly, strong) NSNumber * _Nullable duration;
@property (nonatomic, readonly, strong) NSNumber * _Nullable encodedBodySize;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceFirstByte * _Nullable firstByte;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceGraphql * _Nullable graphql;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceRUMMethod method;
@property (nonatomic, readonly, copy) NSString * _Nullable protocol;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceProvider * _Nullable provider;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceRedirect * _Nullable redirect;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceRenderBlockingStatus renderBlockingStatus;
@property (nonatomic, readonly, strong) NSNumber * _Nullable size;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceSSL * _Nullable ssl;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCode;
@property (nonatomic, readonly, strong) NSNumber * _Nullable transferSize;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceResourceType type;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, readonly, strong) DDRUMResourceEventResourceWorker * _Nullable worker;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventResourceConnect")
@interface DDRUMResourceEventResourceConnect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceDNS")
@interface DDRUMResourceEventResourceDNS : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceDeliveryType, open) {
  DDRUMResourceEventResourceDeliveryTypeNone = 0,
  DDRUMResourceEventResourceDeliveryTypeCache = 1,
  DDRUMResourceEventResourceDeliveryTypeNavigationalPrefetch = 2,
  DDRUMResourceEventResourceDeliveryTypeOther = 3,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceDownload")
@interface DDRUMResourceEventResourceDownload : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMResourceEventResourceFirstByte")
@interface DDRUMResourceEventResourceFirstByte : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventResourceGraphqlOperationType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc33DDRUMResourceEventResourceGraphql")
@interface DDRUMResourceEventResourceGraphql : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable operationName;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceGraphqlOperationType operationType;
@property (nonatomic, copy) NSString * _Nullable payload;
@property (nonatomic, copy) NSString * _Nullable variables;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceGraphqlOperationType, open) {
  DDRUMResourceEventResourceGraphqlOperationTypeQuery = 0,
  DDRUMResourceEventResourceGraphqlOperationTypeMutation = 1,
  DDRUMResourceEventResourceGraphqlOperationTypeSubscription = 2,
};

enum DDRUMResourceEventResourceProviderProviderType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceProvider")
@interface DDRUMResourceEventResourceProvider : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMResourceEventResourceProviderProviderType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceProviderProviderType, open) {
  DDRUMResourceEventResourceProviderProviderTypeNone = 0,
  DDRUMResourceEventResourceProviderProviderTypeAd = 1,
  DDRUMResourceEventResourceProviderProviderTypeAdvertising = 2,
  DDRUMResourceEventResourceProviderProviderTypeAnalytics = 3,
  DDRUMResourceEventResourceProviderProviderTypeCdn = 4,
  DDRUMResourceEventResourceProviderProviderTypeContent = 5,
  DDRUMResourceEventResourceProviderProviderTypeCustomerSuccess = 6,
  DDRUMResourceEventResourceProviderProviderTypeFirstParty = 7,
  DDRUMResourceEventResourceProviderProviderTypeHosting = 8,
  DDRUMResourceEventResourceProviderProviderTypeMarketing = 9,
  DDRUMResourceEventResourceProviderProviderTypeOther = 10,
  DDRUMResourceEventResourceProviderProviderTypeSocial = 11,
  DDRUMResourceEventResourceProviderProviderTypeTagManager = 12,
  DDRUMResourceEventResourceProviderProviderTypeUtility = 13,
  DDRUMResourceEventResourceProviderProviderTypeVideo = 14,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceRUMMethod, open) {
  DDRUMResourceEventResourceRUMMethodNone = 0,
  DDRUMResourceEventResourceRUMMethodPost = 1,
  DDRUMResourceEventResourceRUMMethodGet = 2,
  DDRUMResourceEventResourceRUMMethodHead = 3,
  DDRUMResourceEventResourceRUMMethodPut = 4,
  DDRUMResourceEventResourceRUMMethodDelete = 5,
  DDRUMResourceEventResourceRUMMethodPatch = 6,
  DDRUMResourceEventResourceRUMMethodTrace = 7,
  DDRUMResourceEventResourceRUMMethodOptions = 8,
  DDRUMResourceEventResourceRUMMethodConnect = 9,
};


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMResourceEventResourceRedirect")
@interface DDRUMResourceEventResourceRedirect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceRenderBlockingStatus, open) {
  DDRUMResourceEventResourceRenderBlockingStatusNone = 0,
  DDRUMResourceEventResourceRenderBlockingStatusBlocking = 1,
  DDRUMResourceEventResourceRenderBlockingStatusNonBlocking = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventResourceResourceType, open) {
  DDRUMResourceEventResourceResourceTypeDocument = 0,
  DDRUMResourceEventResourceResourceTypeXhr = 1,
  DDRUMResourceEventResourceResourceTypeBeacon = 2,
  DDRUMResourceEventResourceResourceTypeFetch = 3,
  DDRUMResourceEventResourceResourceTypeCss = 4,
  DDRUMResourceEventResourceResourceTypeJs = 5,
  DDRUMResourceEventResourceResourceTypeImage = 6,
  DDRUMResourceEventResourceResourceTypeFont = 7,
  DDRUMResourceEventResourceResourceTypeMedia = 8,
  DDRUMResourceEventResourceResourceTypeOther = 9,
  DDRUMResourceEventResourceResourceTypeNative = 10,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMResourceEventResourceSSL")
@interface DDRUMResourceEventResourceSSL : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMResourceEventResourceWorker")
@interface DDRUMResourceEventResourceWorker : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMResourceEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc25DDRUMResourceEventSession")
@interface DDRUMResourceEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMResourceEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventSessionRUMSessionType, open) {
  DDRUMResourceEventSessionRUMSessionTypeUser = 0,
  DDRUMResourceEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMResourceEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMResourceEventSource, open) {
  DDRUMResourceEventSourceNone = 0,
  DDRUMResourceEventSourceAndroid = 1,
  DDRUMResourceEventSourceIos = 2,
  DDRUMResourceEventSourceBrowser = 3,
  DDRUMResourceEventSourceFlutter = 4,
  DDRUMResourceEventSourceReactNative = 5,
  DDRUMResourceEventSourceRoku = 6,
  DDRUMResourceEventSourceUnity = 7,
  DDRUMResourceEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMResourceEventView")
@interface DDRUMResourceEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMResourceType, open) {
  DDRUMResourceTypeImage = 0,
  DDRUMResourceTypeXhr = 1,
  DDRUMResourceTypeBeacon = 2,
  DDRUMResourceTypeCss = 3,
  DDRUMResourceTypeDocument = 4,
  DDRUMResourceTypeFetch = 5,
  DDRUMResourceTypeFont = 6,
  DDRUMResourceTypeJs = 7,
  DDRUMResourceTypeMedia = 8,
  DDRUMResourceTypeOther = 9,
  DDRUMResourceTypeNative = 10,
};


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMURLSessionTracking")
@interface DDRUMURLSessionTracking : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setFirstPartyHostsTracing:(DDRUMFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing;
- (void)setResourceAttributesProvider:(NSDictionary<NSString *, id> * _Nullable (^ _Nonnull)(NSURLRequest * _Nonnull, NSURLResponse * _Nullable, NSData * _Nullable, NSError * _Nullable))provider;
@end


SWIFT_CLASS("_TtC11DatadogObjc9DDRUMView")
@interface DDRUMView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// Initializes the RUM View description.
/// \param name the RUM View name, appearing as <code>VIEW NAME</code> in RUM Explorer.
///
/// \param attributes additional attributes to associate with the RUM View.
///
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name attributes:(NSDictionary<NSString *, id> * _Nonnull)attributes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventDD;
@class DDRUMViewEventAccount;
@class DDRUMViewEventApplication;
@class DDRUMViewEventRUMCITest;
@class DDRUMViewEventRUMConnectivity;
@class DDRUMViewEventContainer;
@class DDRUMViewEventRUMEventAttributes;
@class DDRUMViewEventRUMDevice;
@class DDRUMViewEventDisplay;
@class DDRUMViewEventFeatureFlags;
@class DDRUMViewEventRUMOperatingSystem;
@class DDRUMViewEventPrivacy;
@class DDRUMViewEventSession;
enum DDRUMViewEventSource : NSInteger;
@class DDRUMViewEventRUMSyntheticsTest;
@class DDRUMViewEventRUMUser;
@class DDRUMViewEventView;

SWIFT_CLASS("_TtC11DatadogObjc14DDRUMViewEvent")
@interface DDRUMViewEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMViewEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMViewEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMViewEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMViewEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMViewEventFeatureFlags * _Nullable featureFlags;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, strong) DDRUMViewEventPrivacy * _Nullable privacy;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMViewEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMViewEventSource source;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMViewEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMViewEventView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventAccount")
@interface DDRUMViewEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDRUMViewEventApplication")
@interface DDRUMViewEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventContainerSource : NSInteger;
@class DDRUMViewEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventContainer")
@interface DDRUMViewEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMViewEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMViewEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventContainerSource, open) {
  DDRUMViewEventContainerSourceAndroid = 0,
  DDRUMViewEventContainerSourceIos = 1,
  DDRUMViewEventContainerSourceBrowser = 2,
  DDRUMViewEventContainerSourceFlutter = 3,
  DDRUMViewEventContainerSourceReactNative = 4,
  DDRUMViewEventContainerSourceRoku = 5,
  DDRUMViewEventContainerSourceUnity = 6,
  DDRUMViewEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMViewEventContainerView")
@interface DDRUMViewEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventDDConfiguration;
@class DDRUMViewEventDDPageStates;
@class DDRUMViewEventDDReplayStats;
@class DDRUMViewEventDDSession;

SWIFT_CLASS("_TtC11DatadogObjc16DDRUMViewEventDD")
@interface DDRUMViewEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMViewEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull documentVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, copy) NSArray<DDRUMViewEventDDPageStates *> * _Nullable pageStates;
@property (nonatomic, readonly, strong) DDRUMViewEventDDReplayStats * _Nullable replayStats;
@property (nonatomic, readonly, strong) DDRUMViewEventDDSession * _Nullable session;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventDDConfiguration")
@interface DDRUMViewEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable startSessionReplayRecordingManually;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventDDPageStatesState : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventDDPageStates")
@interface DDRUMViewEventDDPageStates : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
@property (nonatomic, readonly) enum DDRUMViewEventDDPageStatesState state;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventDDPageStatesState, open) {
  DDRUMViewEventDDPageStatesStateActive = 0,
  DDRUMViewEventDDPageStatesStatePassive = 1,
  DDRUMViewEventDDPageStatesStateHidden = 2,
  DDRUMViewEventDDPageStatesStateFrozen = 3,
  DDRUMViewEventDDPageStatesStateTerminated = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMViewEventDDReplayStats")
@interface DDRUMViewEventDDReplayStats : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable recordsCount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable segmentsCount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable segmentsTotalRawSize;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventDDSessionPlan : NSInteger;
enum DDRUMViewEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventDDSession")
@interface DDRUMViewEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMViewEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMViewEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventDDSessionPlan, open) {
  DDRUMViewEventDDSessionPlanNone = 0,
  DDRUMViewEventDDSessionPlanPlan1 = 1,
  DDRUMViewEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventDDSessionRUMSessionPrecondition, open) {
  DDRUMViewEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMViewEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMViewEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMViewEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMViewEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMViewEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMViewEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMViewEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};

@class DDRUMViewEventDisplayScroll;
@class DDRUMViewEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventDisplay")
@interface DDRUMViewEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventDisplayScroll * _Nullable scroll;
@property (nonatomic, readonly, strong) DDRUMViewEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDRUMViewEventDisplayScroll")
@interface DDRUMViewEventDisplayScroll : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxDepth;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxDepthScrollTop;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxScrollHeight;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull maxScrollHeightTime;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventDisplayViewport")
@interface DDRUMViewEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventFeatureFlags")
@interface DDRUMViewEventFeatureFlags : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull featureFlagsInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventPrivacyReplayLevel : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventPrivacy")
@interface DDRUMViewEventPrivacy : NSObject
@property (nonatomic, readonly) enum DDRUMViewEventPrivacyReplayLevel replayLevel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventPrivacyReplayLevel, open) {
  DDRUMViewEventPrivacyReplayLevelAllow = 0,
  DDRUMViewEventPrivacyReplayLevelMask = 1,
  DDRUMViewEventPrivacyReplayLevelMaskUserInput = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventRUMCITest")
@interface DDRUMViewEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventRUMConnectivityCellular;
enum DDRUMViewEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMViewEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventRUMConnectivity")
@interface DDRUMViewEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMViewEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMViewEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc37DDRUMViewEventRUMConnectivityCellular")
@interface DDRUMViewEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityEffectiveType, open) {
  DDRUMViewEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMViewEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMViewEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMViewEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMViewEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityInterfaces, open) {
  DDRUMViewEventRUMConnectivityInterfacesNone = 0,
  DDRUMViewEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMViewEventRUMConnectivityInterfacesCellular = 2,
  DDRUMViewEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMViewEventRUMConnectivityInterfacesWifi = 4,
  DDRUMViewEventRUMConnectivityInterfacesWimax = 5,
  DDRUMViewEventRUMConnectivityInterfacesMixed = 6,
  DDRUMViewEventRUMConnectivityInterfacesOther = 7,
  DDRUMViewEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMViewEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMConnectivityStatus, open) {
  DDRUMViewEventRUMConnectivityStatusConnected = 0,
  DDRUMViewEventRUMConnectivityStatusNotConnected = 1,
  DDRUMViewEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMViewEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventRUMDevice")
@interface DDRUMViewEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMViewEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventRUMDeviceRUMDeviceType, open) {
  DDRUMViewEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMViewEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMViewEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMViewEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMViewEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMViewEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMViewEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventRUMEventAttributes")
@interface DDRUMViewEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventRUMOperatingSystem")
@interface DDRUMViewEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMViewEventRUMSyntheticsTest")
@interface DDRUMViewEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventRUMUser")
@interface DDRUMViewEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMViewEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc21DDRUMViewEventSession")
@interface DDRUMViewEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isActive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable sampledForReplay;
@property (nonatomic, readonly) enum DDRUMViewEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventSessionRUMSessionType, open) {
  DDRUMViewEventSessionRUMSessionTypeUser = 0,
  DDRUMViewEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMViewEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventSource, open) {
  DDRUMViewEventSourceNone = 0,
  DDRUMViewEventSourceAndroid = 1,
  DDRUMViewEventSourceIos = 2,
  DDRUMViewEventSourceBrowser = 3,
  DDRUMViewEventSourceFlutter = 4,
  DDRUMViewEventSourceReactNative = 5,
  DDRUMViewEventSourceRoku = 6,
  DDRUMViewEventSourceUnity = 7,
  DDRUMViewEventSourceKotlinMultiplatform = 8,
};

@class DDRUMViewEventViewAction;
@class DDRUMViewEventViewCrash;
@class DDRUMViewEventViewError;
@class DDRUMViewEventViewFlutterBuildTime;
@class DDRUMViewEventViewFlutterRasterTime;
@class DDRUMViewEventViewFrozenFrame;
@class DDRUMViewEventViewFrustration;
@class DDRUMViewEventViewInForegroundPeriods;
@class DDRUMViewEventViewJsRefreshRate;
enum DDRUMViewEventViewLoadingType : NSInteger;
@class DDRUMViewEventViewLongTask;
@class DDRUMViewEventViewPerformance;
@class DDRUMViewEventViewResource;

SWIFT_CLASS("_TtC11DatadogObjc18DDRUMViewEventView")
@interface DDRUMViewEventView : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewAction * _Nonnull action;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cpuTicksCount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cpuTicksPerSecond;
@property (nonatomic, readonly, strong) DDRUMViewEventViewCrash * _Nullable crash;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cumulativeLayoutShift;
@property (nonatomic, readonly, copy) NSString * _Nullable cumulativeLayoutShiftTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable cumulativeLayoutShiftTime;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nullable customTimings;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domComplete;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domContentLoaded;
@property (nonatomic, readonly, strong) NSNumber * _Nullable domInteractive;
@property (nonatomic, readonly, strong) DDRUMViewEventViewError * _Nonnull error;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstByte;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstContentfulPaint;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputDelay;
@property (nonatomic, readonly, copy) NSString * _Nullable firstInputTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable firstInputTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFlutterBuildTime * _Nullable flutterBuildTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFlutterRasterTime * _Nullable flutterRasterTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFrozenFrame * _Nullable frozenFrame;
@property (nonatomic, readonly, strong) DDRUMViewEventViewFrustration * _Nullable frustration;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSArray<DDRUMViewEventViewInForegroundPeriods *> * _Nullable inForegroundPeriods;
@property (nonatomic, readonly, strong) NSNumber * _Nullable interactionToNextPaint;
@property (nonatomic, readonly, copy) NSString * _Nullable interactionToNextPaintTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable interactionToNextPaintTime;
@property (nonatomic, readonly, strong) NSNumber * _Nullable interactionToNextViewTime;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isActive;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isSlowRendered;
@property (nonatomic, readonly, strong) DDRUMViewEventViewJsRefreshRate * _Nullable jsRefreshRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable largestContentfulPaint;
@property (nonatomic, readonly, copy) NSString * _Nullable largestContentfulPaintTargetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadEvent;
@property (nonatomic, readonly, strong) NSNumber * _Nullable loadingTime;
@property (nonatomic, readonly) enum DDRUMViewEventViewLoadingType loadingType;
@property (nonatomic, readonly, strong) DDRUMViewEventViewLongTask * _Nullable longTask;
@property (nonatomic, readonly, strong) NSNumber * _Nullable memoryAverage;
@property (nonatomic, readonly, strong) NSNumber * _Nullable memoryMax;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, readonly, strong) NSNumber * _Nullable networkSettledTime;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformance * _Nullable performance;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, readonly, strong) NSNumber * _Nullable refreshRateAverage;
@property (nonatomic, readonly, strong) NSNumber * _Nullable refreshRateMin;
@property (nonatomic, readonly, strong) DDRUMViewEventViewResource * _Nonnull resource;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timeSpent;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMViewEventViewAction")
@interface DDRUMViewEventViewAction : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewCrash")
@interface DDRUMViewEventViewCrash : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDRUMViewEventViewError")
@interface DDRUMViewEventViewError : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc34DDRUMViewEventViewFlutterBuildTime")
@interface DDRUMViewEventViewFlutterBuildTime : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull average;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull max;
@property (nonatomic, readonly, strong) NSNumber * _Nullable metricMax;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull min;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDRUMViewEventViewFlutterRasterTime")
@interface DDRUMViewEventViewFlutterRasterTime : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull average;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull max;
@property (nonatomic, readonly, strong) NSNumber * _Nullable metricMax;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull min;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventViewFrozenFrame")
@interface DDRUMViewEventViewFrozenFrame : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventViewFrustration")
@interface DDRUMViewEventViewFrustration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc37DDRUMViewEventViewInForegroundPeriods")
@interface DDRUMViewEventViewInForegroundPeriods : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDRUMViewEventViewJsRefreshRate")
@interface DDRUMViewEventViewJsRefreshRate : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull average;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull max;
@property (nonatomic, readonly, strong) NSNumber * _Nullable metricMax;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull min;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMViewEventViewLoadingType, open) {
  DDRUMViewEventViewLoadingTypeNone = 0,
  DDRUMViewEventViewLoadingTypeInitialLoad = 1,
  DDRUMViewEventViewLoadingTypeRouteChange = 2,
  DDRUMViewEventViewLoadingTypeActivityDisplay = 3,
  DDRUMViewEventViewLoadingTypeActivityRedisplay = 4,
  DDRUMViewEventViewLoadingTypeFragmentDisplay = 5,
  DDRUMViewEventViewLoadingTypeFragmentRedisplay = 6,
  DDRUMViewEventViewLoadingTypeViewControllerDisplay = 7,
  DDRUMViewEventViewLoadingTypeViewControllerRedisplay = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewLongTask")
@interface DDRUMViewEventViewLongTask : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventViewPerformanceCLS;
@class DDRUMViewEventViewPerformanceFBC;
@class DDRUMViewEventViewPerformanceFCP;
@class DDRUMViewEventViewPerformanceFID;
@class DDRUMViewEventViewPerformanceINP;
@class DDRUMViewEventViewPerformanceLCP;

SWIFT_CLASS("_TtC11DatadogObjc29DDRUMViewEventViewPerformance")
@interface DDRUMViewEventViewPerformance : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceCLS * _Nullable cls;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceFBC * _Nullable fbc;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceFCP * _Nullable fcp;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceFID * _Nullable fid;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceINP * _Nullable inp;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceLCP * _Nullable lcp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMViewEventViewPerformanceCLSCurrentRect;
@class DDRUMViewEventViewPerformanceCLSPreviousRect;

SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceCLS")
@interface DDRUMViewEventViewPerformanceCLS : NSObject
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceCLSCurrentRect * _Nullable currentRect;
@property (nonatomic, readonly, strong) DDRUMViewEventViewPerformanceCLSPreviousRect * _Nullable previousRect;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull score;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc43DDRUMViewEventViewPerformanceCLSCurrentRect")
@interface DDRUMViewEventViewPerformanceCLSCurrentRect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull x;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull y;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc44DDRUMViewEventViewPerformanceCLSPreviousRect")
@interface DDRUMViewEventViewPerformanceCLSPreviousRect : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull x;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull y;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceFBC")
@interface DDRUMViewEventViewPerformanceFBC : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceFCP")
@interface DDRUMViewEventViewPerformanceFCP : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceFID")
@interface DDRUMViewEventViewPerformanceFID : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceINP")
@interface DDRUMViewEventViewPerformanceINP : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull duration;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nullable timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMViewEventViewPerformanceLCP")
@interface DDRUMViewEventViewPerformanceLCP : NSObject
@property (nonatomic, copy) NSString * _Nullable resourceUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable targetSelector;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull timestamp;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMViewEventViewResource")
@interface DDRUMViewEventViewResource : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull count;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventDD;
@class DDRUMVitalEventAccount;
@class DDRUMVitalEventApplication;
@class DDRUMVitalEventRUMCITest;
@class DDRUMVitalEventRUMConnectivity;
@class DDRUMVitalEventContainer;
@class DDRUMVitalEventRUMEventAttributes;
@class DDRUMVitalEventRUMDevice;
@class DDRUMVitalEventDisplay;
@class DDRUMVitalEventRUMOperatingSystem;
@class DDRUMVitalEventSession;
enum DDRUMVitalEventSource : NSInteger;
@class DDRUMVitalEventRUMSyntheticsTest;
@class DDRUMVitalEventRUMUser;
@class DDRUMVitalEventView;
@class DDRUMVitalEventVital;

SWIFT_CLASS("_TtC11DatadogObjc15DDRUMVitalEvent")
@interface DDRUMVitalEvent : NSObject
@property (nonatomic, readonly, strong) DDRUMVitalEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDRUMVitalEventAccount * _Nullable account;
@property (nonatomic, readonly, strong) DDRUMVitalEventApplication * _Nonnull application;
@property (nonatomic, readonly, copy) NSString * _Nullable buildId;
@property (nonatomic, readonly, copy) NSString * _Nullable buildVersion;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMCITest * _Nullable ciTest;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMConnectivity * _Nullable connectivity;
@property (nonatomic, readonly, strong) DDRUMVitalEventContainer * _Nullable container;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMEventAttributes * _Nullable context;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDRUMVitalEventDisplay * _Nullable display;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nullable service;
@property (nonatomic, readonly, strong) DDRUMVitalEventSession * _Nonnull session;
@property (nonatomic, readonly) enum DDRUMVitalEventSource source;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMSyntheticsTest * _Nullable synthetics;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMUser * _Nullable usr;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
@property (nonatomic, readonly, strong) DDRUMVitalEventView * _Nonnull view;
@property (nonatomic, readonly, strong) DDRUMVitalEventVital * _Nonnull vital;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventAccount")
@interface DDRUMVitalEventAccount : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull accountInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc26DDRUMVitalEventApplication")
@interface DDRUMVitalEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventContainerSource : NSInteger;
@class DDRUMVitalEventContainerView;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventContainer")
@interface DDRUMVitalEventContainer : NSObject
@property (nonatomic, readonly) enum DDRUMVitalEventContainerSource source;
@property (nonatomic, readonly, strong) DDRUMVitalEventContainerView * _Nonnull view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventContainerSource, open) {
  DDRUMVitalEventContainerSourceAndroid = 0,
  DDRUMVitalEventContainerSourceIos = 1,
  DDRUMVitalEventContainerSourceBrowser = 2,
  DDRUMVitalEventContainerSourceFlutter = 3,
  DDRUMVitalEventContainerSourceReactNative = 4,
  DDRUMVitalEventContainerSourceRoku = 5,
  DDRUMVitalEventContainerSourceUnity = 6,
  DDRUMVitalEventContainerSourceKotlinMultiplatform = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc28DDRUMVitalEventContainerView")
@interface DDRUMVitalEventContainerView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventDDConfiguration;
@class DDRUMVitalEventDDSession;
@class DDRUMVitalEventDDVital;

SWIFT_CLASS("_TtC11DatadogObjc17DDRUMVitalEventDD")
@interface DDRUMVitalEventDD : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable browserSdkVersion;
@property (nonatomic, readonly, strong) DDRUMVitalEventDDConfiguration * _Nullable configuration;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
@property (nonatomic, readonly, strong) DDRUMVitalEventDDSession * _Nullable session;
@property (nonatomic, readonly, strong) DDRUMVitalEventDDVital * _Nullable vital;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMVitalEventDDConfiguration")
@interface DDRUMVitalEventDDConfiguration : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull sessionSampleRate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventDDSessionPlan : NSInteger;
enum DDRUMVitalEventDDSessionRUMSessionPrecondition : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventDDSession")
@interface DDRUMVitalEventDDSession : NSObject
@property (nonatomic, readonly) enum DDRUMVitalEventDDSessionPlan plan;
@property (nonatomic, readonly) enum DDRUMVitalEventDDSessionRUMSessionPrecondition sessionPrecondition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventDDSessionPlan, open) {
  DDRUMVitalEventDDSessionPlanNone = 0,
  DDRUMVitalEventDDSessionPlanPlan1 = 1,
  DDRUMVitalEventDDSessionPlanPlan2 = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventDDSessionRUMSessionPrecondition, open) {
  DDRUMVitalEventDDSessionRUMSessionPreconditionNone = 0,
  DDRUMVitalEventDDSessionRUMSessionPreconditionUserAppLaunch = 1,
  DDRUMVitalEventDDSessionRUMSessionPreconditionInactivityTimeout = 2,
  DDRUMVitalEventDDSessionRUMSessionPreconditionMaxDuration = 3,
  DDRUMVitalEventDDSessionRUMSessionPreconditionBackgroundLaunch = 4,
  DDRUMVitalEventDDSessionRUMSessionPreconditionPrewarm = 5,
  DDRUMVitalEventDDSessionRUMSessionPreconditionFromNonInteractiveSession = 6,
  DDRUMVitalEventDDSessionRUMSessionPreconditionExplicitStop = 7,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventDDVital")
@interface DDRUMVitalEventDDVital : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable computedValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventDisplayViewport;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventDisplay")
@interface DDRUMVitalEventDisplay : NSObject
@property (nonatomic, readonly, strong) DDRUMVitalEventDisplayViewport * _Nullable viewport;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc30DDRUMVitalEventDisplayViewport")
@interface DDRUMVitalEventDisplayViewport : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull height;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull width;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventRUMCITest")
@interface DDRUMVitalEventRUMCITest : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull testExecutionId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDRUMVitalEventRUMConnectivityCellular;
enum DDRUMVitalEventRUMConnectivityEffectiveType : NSInteger;
enum DDRUMVitalEventRUMConnectivityStatus : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc30DDRUMVitalEventRUMConnectivity")
@interface DDRUMVitalEventRUMConnectivity : NSObject
@property (nonatomic, readonly, strong) DDRUMVitalEventRUMConnectivityCellular * _Nullable cellular;
@property (nonatomic, readonly) enum DDRUMVitalEventRUMConnectivityEffectiveType effectiveType;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable interfaces;
@property (nonatomic, readonly) enum DDRUMVitalEventRUMConnectivityStatus status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc38DDRUMVitalEventRUMConnectivityCellular")
@interface DDRUMVitalEventRUMConnectivityCellular : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable carrierName;
@property (nonatomic, readonly, copy) NSString * _Nullable technology;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMConnectivityEffectiveType, open) {
  DDRUMVitalEventRUMConnectivityEffectiveTypeNone = 0,
  DDRUMVitalEventRUMConnectivityEffectiveTypeSlow2g = 1,
  DDRUMVitalEventRUMConnectivityEffectiveTypeEffectiveType2g = 2,
  DDRUMVitalEventRUMConnectivityEffectiveTypeEffectiveType3g = 3,
  DDRUMVitalEventRUMConnectivityEffectiveTypeEffectiveType4g = 4,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMConnectivityInterfaces, open) {
  DDRUMVitalEventRUMConnectivityInterfacesNone = 0,
  DDRUMVitalEventRUMConnectivityInterfacesBluetooth = 1,
  DDRUMVitalEventRUMConnectivityInterfacesCellular = 2,
  DDRUMVitalEventRUMConnectivityInterfacesEthernet = 3,
  DDRUMVitalEventRUMConnectivityInterfacesWifi = 4,
  DDRUMVitalEventRUMConnectivityInterfacesWimax = 5,
  DDRUMVitalEventRUMConnectivityInterfacesMixed = 6,
  DDRUMVitalEventRUMConnectivityInterfacesOther = 7,
  DDRUMVitalEventRUMConnectivityInterfacesUnknown = 8,
  DDRUMVitalEventRUMConnectivityInterfacesInterfacesNone = 9,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMConnectivityStatus, open) {
  DDRUMVitalEventRUMConnectivityStatusConnected = 0,
  DDRUMVitalEventRUMConnectivityStatusNotConnected = 1,
  DDRUMVitalEventRUMConnectivityStatusMaybe = 2,
};

enum DDRUMVitalEventRUMDeviceRUMDeviceType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc24DDRUMVitalEventRUMDevice")
@interface DDRUMVitalEventRUMDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMVitalEventRUMDeviceRUMDeviceType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventRUMDeviceRUMDeviceType, open) {
  DDRUMVitalEventRUMDeviceRUMDeviceTypeMobile = 0,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeDesktop = 1,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeTablet = 2,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeTv = 3,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeGamingConsole = 4,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeBot = 5,
  DDRUMVitalEventRUMDeviceRUMDeviceTypeOther = 6,
};


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMVitalEventRUMEventAttributes")
@interface DDRUMVitalEventRUMEventAttributes : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull contextInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDRUMVitalEventRUMOperatingSystem")
@interface DDRUMVitalEventRUMOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionMajor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDRUMVitalEventRUMSyntheticsTest")
@interface DDRUMVitalEventRUMSyntheticsTest : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable injected;
@property (nonatomic, readonly, copy) NSString * _Nonnull resultId;
@property (nonatomic, readonly, copy) NSString * _Nonnull testId;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventRUMUser")
@interface DDRUMVitalEventRUMUser : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anonymousId;
@property (nonatomic, readonly, copy) NSString * _Nullable email;
@property (nonatomic, readonly, copy) NSString * _Nullable id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull usrInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventSessionRUMSessionType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc22DDRUMVitalEventSession")
@interface DDRUMVitalEventSession : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nullable hasReplay;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) enum DDRUMVitalEventSessionRUMSessionType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventSessionRUMSessionType, open) {
  DDRUMVitalEventSessionRUMSessionTypeUser = 0,
  DDRUMVitalEventSessionRUMSessionTypeSynthetics = 1,
  DDRUMVitalEventSessionRUMSessionTypeCiTest = 2,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventSource, open) {
  DDRUMVitalEventSourceNone = 0,
  DDRUMVitalEventSourceAndroid = 1,
  DDRUMVitalEventSourceIos = 2,
  DDRUMVitalEventSourceBrowser = 3,
  DDRUMVitalEventSourceFlutter = 4,
  DDRUMVitalEventSourceReactNative = 5,
  DDRUMVitalEventSourceRoku = 6,
  DDRUMVitalEventSourceUnity = 7,
  DDRUMVitalEventSourceKotlinMultiplatform = 8,
};


SWIFT_CLASS("_TtC11DatadogObjc19DDRUMVitalEventView")
@interface DDRUMVitalEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable referrer;
@property (nonatomic, copy) NSString * _Nonnull url;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum DDRUMVitalEventVitalVitalType : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc20DDRUMVitalEventVital")
@interface DDRUMVitalEventVital : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSNumber *> * _Nullable custom;
@property (nonatomic, readonly, copy) NSString * _Nullable vitalDescription;
@property (nonatomic, readonly, strong) NSNumber * _Nullable duration;
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) enum DDRUMVitalEventVitalVitalType type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDRUMVitalEventVitalVitalType, open) {
  DDRUMVitalEventVitalVitalTypeDuration = 0,
};

typedef SWIFT_ENUM(NSInteger, DDRUMVitalsFrequency, open) {
  DDRUMVitalsFrequencyFrequent = 0,
  DDRUMVitalsFrequencyAverage = 1,
  DDRUMVitalsFrequencyRare = 2,
  DDRUMVitalsFrequencyNever = 3,
};

typedef SWIFT_ENUM(NSInteger, DDSDKVerbosityLevel, open) {
  DDSDKVerbosityLevelNone = 0,
  DDSDKVerbosityLevelDebug = 1,
  DDSDKVerbosityLevelWarn = 2,
  DDSDKVerbosityLevelError = 3,
  DDSDKVerbosityLevelCritical = 4,
};


SWIFT_PROTOCOL("_TtP11DatadogObjc20DDServerDateProvider_")
@protocol DDServerDateProvider
/// Start the clock synchronisation with NTP server.
/// Calls the <code>completion</code> by passing it the server time offset when the synchronization succeeds or<code>nil</code> if it fails.
- (void)synchronizeWithUpdate:(void (^ _Nonnull)(NSTimeInterval))update;
@end


SWIFT_CLASS("_TtC11DatadogObjc6DDSite")
@interface DDSite : NSObject
+ (DDSite * _Nonnull)us1 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)us3 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)us5 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)eu1 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)ap1 SWIFT_WARN_UNUSED_RESULT;
+ (DDSite * _Nonnull)us1_fed SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryConfigurationEventDD;
@class DDTelemetryConfigurationEventAction;
@class DDTelemetryConfigurationEventApplication;
@class DDTelemetryConfigurationEventSession;
enum DDTelemetryConfigurationEventSource : NSInteger;
@class DDTelemetryConfigurationEventTelemetry;
@class DDTelemetryConfigurationEventView;

SWIFT_CLASS("_TtC11DatadogObjc29DDTelemetryConfigurationEvent")
@interface DDTelemetryConfigurationEvent : NSObject
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventApplication * _Nullable application;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) NSNumber * _Nullable effectiveSampleRate;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable experimentalFeatures;
@property (nonatomic, readonly, copy) NSString * _Nonnull service;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventSession * _Nullable session;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventSource source;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetry * _Nonnull telemetry;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventView * _Nullable view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDTelemetryConfigurationEventAction")
@interface DDTelemetryConfigurationEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc40DDTelemetryConfigurationEventApplication")
@interface DDTelemetryConfigurationEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc31DDTelemetryConfigurationEventDD")
@interface DDTelemetryConfigurationEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc36DDTelemetryConfigurationEventSession")
@interface DDTelemetryConfigurationEventSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventSource, open) {
  DDTelemetryConfigurationEventSourceAndroid = 0,
  DDTelemetryConfigurationEventSourceIos = 1,
  DDTelemetryConfigurationEventSourceBrowser = 2,
  DDTelemetryConfigurationEventSourceFlutter = 3,
  DDTelemetryConfigurationEventSourceReactNative = 4,
  DDTelemetryConfigurationEventSourceUnity = 5,
  DDTelemetryConfigurationEventSourceKotlinMultiplatform = 6,
};

@class DDTelemetryConfigurationEventTelemetryConfiguration;
@class DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice;
@class DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem;

SWIFT_CLASS("_TtC11DatadogObjc38DDTelemetryConfigurationEventTelemetry")
@interface DDTelemetryConfigurationEventTelemetry : NSObject
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryConfiguration * _Nonnull configuration;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull telemetryInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs;
@class DDTelemetryConfigurationEventTelemetryConfigurationForwardReports;
@class DDTelemetryConfigurationEventTelemetryConfigurationPlugins;
enum DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistence : NSInteger;
enum DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjection : NSInteger;
enum DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsent : NSInteger;
enum DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategy : NSInteger;

SWIFT_CLASS("_TtC11DatadogObjc51DDTelemetryConfigurationEventTelemetryConfiguration")
@interface DDTelemetryConfigurationEventTelemetryConfiguration : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable actionNameAttribute;
@property (nonatomic, readonly, strong) NSNumber * _Nullable allowFallbackToLocalStorage;
@property (nonatomic, readonly, strong) NSNumber * _Nullable allowUntrustedEvents;
@property (nonatomic, readonly, strong) NSNumber * _Nullable appHangThreshold;
@property (nonatomic, readonly, strong) NSNumber * _Nullable backgroundTasksEnabled;
@property (nonatomic, readonly, strong) NSNumber * _Nullable batchProcessingLevel;
@property (nonatomic, readonly, strong) NSNumber * _Nullable batchSize;
@property (nonatomic, readonly, strong) NSNumber * _Nullable batchUploadFrequency;
@property (nonatomic, readonly, strong) NSNumber * _Nullable compressIntakeRequests;
@property (nonatomic, copy) NSString * _Nullable dartVersion;
@property (nonatomic, copy) NSString * _Nullable defaultPrivacyLevel;
@property (nonatomic, strong) NSNumber * _Nullable enablePrivacyForActionName;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs * _Nullable forwardConsoleLogs;
@property (nonatomic, readonly, strong) NSNumber * _Nullable forwardErrorsToLogs;
@property (nonatomic, readonly, strong) DDTelemetryConfigurationEventTelemetryConfigurationForwardReports * _Nullable forwardReports;
@property (nonatomic, copy) NSString * _Nullable imagePrivacyLevel;
@property (nonatomic, copy) NSString * _Nullable initializationType;
@property (nonatomic, readonly, strong) NSNumber * _Nullable invTimeThresholdMs;
@property (nonatomic, readonly, strong) NSNumber * _Nullable isMainProcess;
@property (nonatomic, strong) NSNumber * _Nullable mobileVitalsUpdatePeriod;
@property (nonatomic, copy) NSArray<DDTelemetryConfigurationEventTelemetryConfigurationPlugins *> * _Nullable plugins;
@property (nonatomic, readonly, strong) NSNumber * _Nullable premiumSampleRate;
@property (nonatomic, copy) NSString * _Nullable reactNativeVersion;
@property (nonatomic, copy) NSString * _Nullable reactVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nullable replaySampleRate;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable selectedTracingPropagators;
@property (nonatomic, strong) NSNumber * _Nullable sendLogsAfterSessionExpiration;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistence sessionPersistence;
@property (nonatomic, strong) NSNumber * _Nullable sessionReplaySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable sessionSampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable silentMultipleInit;
@property (nonatomic, strong) NSNumber * _Nullable startRecordingImmediately;
@property (nonatomic, strong) NSNumber * _Nullable startSessionReplayRecordingManually;
@property (nonatomic, readonly, strong) NSNumber * _Nullable storeContextsAcrossPages;
@property (nonatomic, readonly, strong) NSNumber * _Nullable telemetryConfigurationSampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable telemetrySampleRate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable telemetryUsageSampleRate;
@property (nonatomic, copy) NSString * _Nullable textAndInputPrivacyLevel;
@property (nonatomic, readonly, strong) NSNumber * _Nullable tnsTimeThresholdMs;
@property (nonatomic, copy) NSString * _Nullable touchPrivacyLevel;
@property (nonatomic) enum DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjection traceContextInjection;
@property (nonatomic, readonly, strong) NSNumber * _Nullable traceSampleRate;
@property (nonatomic, copy) NSString * _Nullable tracerApi;
@property (nonatomic, copy) NSString * _Nullable tracerApiVersion;
@property (nonatomic, strong) NSNumber * _Nullable trackAnonymousUser;
@property (nonatomic, strong) NSNumber * _Nullable trackBackgroundEvents;
@property (nonatomic, strong) NSNumber * _Nullable trackCrossPlatformLongTasks;
@property (nonatomic, strong) NSNumber * _Nullable trackErrors;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable trackFeatureFlagsForEvents;
@property (nonatomic, strong) NSNumber * _Nullable trackFlutterPerformance;
@property (nonatomic, strong) NSNumber * _Nullable trackFrustrations;
@property (nonatomic, strong) NSNumber * _Nullable trackInteractions;
@property (nonatomic, strong) NSNumber * _Nullable trackLongTask;
@property (nonatomic, strong) NSNumber * _Nullable trackNativeErrors;
@property (nonatomic, strong) NSNumber * _Nullable trackNativeLongTasks;
@property (nonatomic, strong) NSNumber * _Nullable trackNativeViews;
@property (nonatomic, strong) NSNumber * _Nullable trackNetworkRequests;
@property (nonatomic, strong) NSNumber * _Nullable trackResources;
@property (nonatomic, readonly, strong) NSNumber * _Nullable trackSessionAcrossSubdomains;
@property (nonatomic, strong) NSNumber * _Nullable trackUserInteractions;
@property (nonatomic, strong) NSNumber * _Nullable trackViewsManually;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsent trackingConsent;
@property (nonatomic, copy) NSString * _Nullable unityVersion;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useAllowedTracingOrigins;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useAllowedTracingUrls;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useBeforeSend;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useCrossSiteSessionCookie;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useExcludedActivityUrls;
@property (nonatomic, strong) NSNumber * _Nullable useFirstPartyHosts;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useLocalEncryption;
@property (nonatomic, readonly, strong) NSNumber * _Nullable usePartitionedCrossSiteSessionCookie;
@property (nonatomic, strong) NSNumber * _Nullable usePciIntake;
@property (nonatomic, strong) NSNumber * _Nullable useProxy;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useSecureSessionCookie;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useTracing;
@property (nonatomic, readonly, strong) NSNumber * _Nullable useWorkerUrl;
@property (nonatomic, readonly) enum DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategy viewTrackingStrategy;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc69DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs")
@interface DDTelemetryConfigurationEventTelemetryConfigurationForwardConsoleLogs : NSObject
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
@property (nonatomic, readonly, copy) NSString * _Nullable string;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc65DDTelemetryConfigurationEventTelemetryConfigurationForwardReports")
@interface DDTelemetryConfigurationEventTelemetryConfigurationForwardReports : NSObject
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable stringsArray;
@property (nonatomic, readonly, copy) NSString * _Nullable string;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc58DDTelemetryConfigurationEventTelemetryConfigurationPlugins")
@interface DDTelemetryConfigurationEventTelemetryConfigurationPlugins : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull pluginsInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagators, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsDatadog = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsB3 = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsB3multi = 3,
  DDTelemetryConfigurationEventTelemetryConfigurationSelectedTracingPropagatorsTracecontext = 4,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistence, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistenceNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistenceLocalStorage = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationSessionPersistenceCookie = 2,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjection, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjectionNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjectionAll = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationTraceContextInjectionSampled = 2,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEvents, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsVital = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsResource = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsAction = 3,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackFeatureFlagsForEventsLongTask = 4,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsent, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentGranted = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentNotGranted = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationTrackingConsentPending = 3,
};

typedef SWIFT_ENUM(NSInteger, DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategy, open) {
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyNone = 0,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyActivityViewTrackingStrategy = 1,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyFragmentViewTrackingStrategy = 2,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyMixedViewTrackingStrategy = 3,
  DDTelemetryConfigurationEventTelemetryConfigurationViewTrackingStrategyNavigationViewTrackingStrategy = 4,
};


SWIFT_CLASS("_TtC11DatadogObjc56DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice")
@interface DDTelemetryConfigurationEventTelemetryRUMTelemetryDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc65DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem")
@interface DDTelemetryConfigurationEventTelemetryRUMTelemetryOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc33DDTelemetryConfigurationEventView")
@interface DDTelemetryConfigurationEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryDebugEventDD;
@class DDTelemetryDebugEventAction;
@class DDTelemetryDebugEventApplication;
@class DDTelemetryDebugEventSession;
enum DDTelemetryDebugEventSource : NSInteger;
@class DDTelemetryDebugEventTelemetry;
@class DDTelemetryDebugEventView;

SWIFT_CLASS("_TtC11DatadogObjc21DDTelemetryDebugEvent")
@interface DDTelemetryDebugEvent : NSObject
@property (nonatomic, readonly, strong) DDTelemetryDebugEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventApplication * _Nullable application;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) NSNumber * _Nullable effectiveSampleRate;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable experimentalFeatures;
@property (nonatomic, readonly, copy) NSString * _Nonnull service;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventSession * _Nullable session;
@property (nonatomic, readonly) enum DDTelemetryDebugEventSource source;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventTelemetry * _Nonnull telemetry;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventView * _Nullable view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDTelemetryDebugEventAction")
@interface DDTelemetryDebugEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDTelemetryDebugEventApplication")
@interface DDTelemetryDebugEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDTelemetryDebugEventDD")
@interface DDTelemetryDebugEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDTelemetryDebugEventSession")
@interface DDTelemetryDebugEventSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryDebugEventSource, open) {
  DDTelemetryDebugEventSourceAndroid = 0,
  DDTelemetryDebugEventSourceIos = 1,
  DDTelemetryDebugEventSourceBrowser = 2,
  DDTelemetryDebugEventSourceFlutter = 3,
  DDTelemetryDebugEventSourceReactNative = 4,
  DDTelemetryDebugEventSourceUnity = 5,
  DDTelemetryDebugEventSourceKotlinMultiplatform = 6,
};

@class DDTelemetryDebugEventTelemetryRUMTelemetryDevice;
@class DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem;

SWIFT_CLASS("_TtC11DatadogObjc30DDTelemetryDebugEventTelemetry")
@interface DDTelemetryDebugEventTelemetry : NSObject
@property (nonatomic, readonly, strong) DDTelemetryDebugEventTelemetryRUMTelemetryDevice * _Nullable device;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull telemetryInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc48DDTelemetryDebugEventTelemetryRUMTelemetryDevice")
@interface DDTelemetryDebugEventTelemetryRUMTelemetryDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc57DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem")
@interface DDTelemetryDebugEventTelemetryRUMTelemetryOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDTelemetryDebugEventView")
@interface DDTelemetryDebugEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTelemetryErrorEventDD;
@class DDTelemetryErrorEventAction;
@class DDTelemetryErrorEventApplication;
@class DDTelemetryErrorEventSession;
enum DDTelemetryErrorEventSource : NSInteger;
@class DDTelemetryErrorEventTelemetry;
@class DDTelemetryErrorEventView;

SWIFT_CLASS("_TtC11DatadogObjc21DDTelemetryErrorEvent")
@interface DDTelemetryErrorEvent : NSObject
@property (nonatomic, readonly, strong) DDTelemetryErrorEventDD * _Nonnull dd;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventAction * _Nullable action;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventApplication * _Nullable application;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull date;
@property (nonatomic, readonly, strong) NSNumber * _Nullable effectiveSampleRate;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable experimentalFeatures;
@property (nonatomic, readonly, copy) NSString * _Nonnull service;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventSession * _Nullable session;
@property (nonatomic, readonly) enum DDTelemetryErrorEventSource source;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetry * _Nonnull telemetry;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventView * _Nullable view;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc27DDTelemetryErrorEventAction")
@interface DDTelemetryErrorEventAction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc32DDTelemetryErrorEventApplication")
@interface DDTelemetryErrorEventApplication : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc23DDTelemetryErrorEventDD")
@interface DDTelemetryErrorEventDD : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull formatVersion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc28DDTelemetryErrorEventSession")
@interface DDTelemetryErrorEventSession : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDTelemetryErrorEventSource, open) {
  DDTelemetryErrorEventSourceAndroid = 0,
  DDTelemetryErrorEventSourceIos = 1,
  DDTelemetryErrorEventSourceBrowser = 2,
  DDTelemetryErrorEventSourceFlutter = 3,
  DDTelemetryErrorEventSourceReactNative = 4,
  DDTelemetryErrorEventSourceUnity = 5,
  DDTelemetryErrorEventSourceKotlinMultiplatform = 6,
};

@class DDTelemetryErrorEventTelemetryRUMTelemetryDevice;
@class DDTelemetryErrorEventTelemetryError;
@class DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem;

SWIFT_CLASS("_TtC11DatadogObjc30DDTelemetryErrorEventTelemetry")
@interface DDTelemetryErrorEventTelemetry : NSObject
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetryRUMTelemetryDevice * _Nullable device;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetryError * _Nullable error;
@property (nonatomic, readonly, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, strong) DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem * _Nullable os;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull telemetryInfo;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc35DDTelemetryErrorEventTelemetryError")
@interface DDTelemetryErrorEventTelemetryError : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable kind;
@property (nonatomic, readonly, copy) NSString * _Nullable stack;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc48DDTelemetryErrorEventTelemetryRUMTelemetryDevice")
@interface DDTelemetryErrorEventTelemetryRUMTelemetryDevice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable architecture;
@property (nonatomic, readonly, copy) NSString * _Nullable brand;
@property (nonatomic, readonly, copy) NSString * _Nullable model;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc57DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem")
@interface DDTelemetryErrorEventTelemetryRUMTelemetryOperatingSystem : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable build;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly, copy) NSString * _Nullable version;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDTelemetryErrorEventView")
@interface DDTelemetryErrorEventView : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DDTraceConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc7DDTrace")
@interface DDTrace : NSObject
+ (void)enableWith:(DDTraceConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DDTraceURLSessionTracking;

SWIFT_CLASS("_TtC11DatadogObjc20DDTraceConfiguration")
@interface DDTraceConfiguration : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) float sampleRate;
@property (nonatomic, copy) NSString * _Nullable service;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable tags;
- (void)setURLSessionTracking:(DDTraceURLSessionTracking * _Nonnull)tracking;
@property (nonatomic) BOOL bundleWithRumEnabled;
@property (nonatomic) BOOL networkInfoEnabled;
@property (nonatomic, copy) NSURL * _Nullable customEndpoint;
@end

/// Defines whether the trace context should be injected into all requests or only sampled ones.
typedef SWIFT_ENUM(NSInteger, DDTraceContextInjection, open) {
/// Injects trace context into all requests irrespective of the sampling decision.
  DDTraceContextInjectionAll = 0,
/// Injects trace context only into sampled requests.
  DDTraceContextInjectionSampled = 1,
};


SWIFT_CLASS("_TtC11DatadogObjc29DDTraceFirstPartyHostsTracing")
@interface DDTraceFirstPartyHostsTracing : NSObject
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts sampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Available strategies for sampling trace propagation headers.
SWIFT_CLASS("_TtC11DatadogObjc23DDTraceSamplingStrategy")
@interface DDTraceSamplingStrategy : NSObject
/// Trace propagation headers will be sampled same as propagated span.
/// Use this option to leverage head-based sampling, where the decision to keep or drop the trace
/// is determined from the first span of the trace, the head, when the trace is created. With <code>.headBased</code>
/// strategy, this decision is propagated through the request context to downstream services.
+ (DDTraceSamplingStrategy * _Nonnull)headBased SWIFT_WARN_UNUSED_RESULT;
/// Trace propagation headers will be sampled independently from sampling decision in propagated span.
/// Use this option to apply the provided <code>sampleRate</code> for determining the decision to keep or drop the trace
/// in downstream services independently of sampling their parent span.
+ (DDTraceSamplingStrategy * _Nonnull)customWithSampleRate:(float)sampleRate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc25DDTraceURLSessionTracking")
@interface DDTraceURLSessionTracking : NSObject
- (nonnull instancetype)initWithFirstPartyHostsTracing:(DDTraceFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing OBJC_DESIGNATED_INITIALIZER;
- (void)setFirstPartyHostsTracing:(DDTraceFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OTSpan;
@protocol OTSpanContext;

/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTTracer.h
SWIFT_PROTOCOL("_TtP11DatadogObjc8OTTracer_")
@protocol OTTracer
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS("_TtC11DatadogObjc8DDTracer")
@interface DDTracer : NSObject <OTTracer>
+ (id <OTTracer> _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags SWIFT_WARN_UNUSED_RESULT;
- (id <OTSpan> _Nonnull)startSpan:(NSString * _Nonnull)operationName childOf:(id <OTSpanContext> _Nullable)parent tags:(NSDictionary * _Nullable)tags startTime:(NSDate * _Nullable)startTime SWIFT_WARN_UNUSED_RESULT;
- (BOOL)inject:(id <OTSpanContext> _Nonnull)spanContext format:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (BOOL)extractWithFormat:(NSString * _Nonnull)format carrier:(id _Nonnull)carrier error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc19DDTracingHeaderType")
@interface DDTracingHeaderType : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull datadog;)
+ (DDTracingHeaderType * _Nonnull)datadog SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull b3multi;)
+ (DDTracingHeaderType * _Nonnull)b3multi SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull b3;)
+ (DDTracingHeaderType * _Nonnull)b3 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DDTracingHeaderType * _Nonnull tracecontext;)
+ (DDTracingHeaderType * _Nonnull)tracecontext SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc17DDTrackingConsent")
@interface DDTrackingConsent : NSObject
+ (DDTrackingConsent * _Nonnull)granted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)notGranted SWIFT_WARN_UNUSED_RESULT;
+ (DDTrackingConsent * _Nonnull)pending SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_PROTOCOL("_TtP11DatadogObjc28DDUIPressRUMActionsPredicate_")
@protocol DDUIPressRUMActionsPredicate
/// The predicate deciding if the RUM Action should be recorded.
/// \param type the <code>UIPress.PressType</code> which received the action.
///
/// \param targetView an instance of the <code>UIView</code> which received the action.
///
///
/// returns:
/// RUM Action if it should be recorded, <code>nil</code> otherwise.
- (DDRUMAction * _Nullable)rumActionWithPress:(enum UIPressType)type targetView:(UIView * _Nonnull)targetView SWIFT_WARN_UNUSED_RESULT;
@end


@class DDURLSessionInstrumentationConfiguration;

SWIFT_CLASS("_TtC11DatadogObjc27DDURLSessionInstrumentation")
@interface DDURLSessionInstrumentation : NSObject
/// Enables URLSession instrumentation.
/// \param configuration Configuration of the feature.
///
+ (void)enableWithConfiguration:(DDURLSessionInstrumentationConfiguration * _Nonnull)configuration;
/// Disables URLSession instrumentation.
/// \param delegateClass The delegate class to unbind.
///
+ (void)disableWithDelegateClass:(Class <NSURLSessionDataDelegate> _Nonnull)delegateClass;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DDURLSessionInstrumentationFirstPartyHostsTracing;

/// Configuration of URLSession instrumentation.
SWIFT_CLASS("_TtC11DatadogObjc40DDURLSessionInstrumentationConfiguration")
@interface DDURLSessionInstrumentationConfiguration : NSObject
- (nonnull instancetype)initWithDelegateClass:(Class <NSURLSessionDataDelegate> _Nonnull)delegateClass OBJC_DESIGNATED_INITIALIZER;
/// Sets additional first party hosts to consider in the interception.
- (void)setFirstPartyHostsTracing:(DDURLSessionInstrumentationFirstPartyHostsTracing * _Nonnull)firstPartyHostsTracing;
/// The delegate class to be used to swizzle URLSessionTaskDelegate & URLSessionDataDelegate methods.
@property (nonatomic) Class <NSURLSessionDataDelegate> _Nonnull delegateClass;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Defines configuration for first-party hosts in distributed tracing.
SWIFT_CLASS("_TtC11DatadogObjc49DDURLSessionInstrumentationFirstPartyHostsTracing")
@interface DDURLSessionInstrumentationFirstPartyHostsTracing : NSObject
- (nonnull instancetype)initWithHostsWithHeaderTypes:(NSDictionary<NSString *, NSSet<DDTracingHeaderType *> *> * _Nonnull)hostsWithHeaderTypes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithHosts:(NSSet<NSString *> * _Nonnull)hosts OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DDUploadFrequency, open) {
  DDUploadFrequencyFrequent = 0,
  DDUploadFrequencyAverage = 1,
  DDUploadFrequencyRare = 2,
};


SWIFT_CLASS("_TtC11DatadogObjc22DDW3CHTTPHeadersWriter")
@interface DDW3CHTTPHeadersWriter : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nonnull traceHeaderFields;
- (nonnull instancetype)initWithSamplingRate:(float)samplingRate SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSampleRate:(float)sampleRate OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("This will be removed in future versions of the SDK. Use `init(samplingStrategy: .custom(sampleRate:))` instead.");
- (nonnull instancetype)initWithSamplingStrategy:(DDTraceSamplingStrategy * _Nonnull)samplingStrategy traceContextInjection:(enum DDTraceContextInjection)traceContextInjection OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11DatadogObjc2OT")
@interface OT : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull formatTextMap;)
+ (NSString * _Nonnull)formatTextMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpan.h
SWIFT_PROTOCOL("_TtP11DatadogObjc6OTSpan_")
@protocol OTSpan
@property (nonatomic, readonly, strong) id <OTSpanContext> _Nonnull context;
@property (nonatomic, readonly, strong) id <OTTracer> _Nonnull tracer;
- (void)setOperationName:(NSString * _Nonnull)operationName;
- (void)setTag:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)setTag:(NSString * _Nonnull)key numberValue:(NSNumber * _Nonnull)numberValue;
- (void)setTag:(NSString * _Nonnull)key boolValue:(BOOL)boolValue;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields;
- (void)log:(NSDictionary<NSString *, NSObject *> * _Nonnull)fields timestamp:(NSDate * _Nullable)timestamp;
- (id <OTSpan> _Nonnull)setBaggageItem:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getBaggageItem:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setError:(NSError * _Nonnull)error;
- (void)setErrorWithKind:(NSString * _Nonnull)kind message:(NSString * _Nonnull)message stack:(NSString * _Nullable)stack;
- (void)finish;
- (void)finishWithTime:(NSDate * _Nullable)finishTime;
- (id <OTSpan> _Nonnull)setActive;
@end


/// Corresponds to: https://github.com/opentracing/opentracing-objc/blob/master/Pod/Classes/OTSpanContext.h
SWIFT_PROTOCOL("_TtP11DatadogObjc13OTSpanContext_")
@protocol OTSpanContext
- (void)forEachBaggageItem:(SWIFT_NOESCAPE BOOL (^ _Nonnull)(NSString * _Nonnull, NSString * _Nonnull))callback;
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
